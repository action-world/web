{"version":3,"sources":["config/constants/pools.ts","utils/providers.ts","state/block/hooks.ts","hooks/useToast.ts","state/wallet/hooks.ts","config/constants/endpoints.ts","state/farms/hooks.ts","hooks/useTheme.ts","components/Card/index.tsx","utils/compoundApyHelpers.ts","hooks/useRefresh.ts","state/lottery/helpers.ts","utils/getGasPrice.ts","config/localization/languages.ts","components/Menu/WalletModal/types.ts","components/Menu/WalletModal/config.tsx","components/Menu/WalletModal/WalletCard.tsx","components/Menu/WalletModal/ConnectModal.tsx","components/Menu/WalletModal/CopyToClipboard.tsx","components/Menu/WalletModal/AccountModal.tsx","components/Menu/WalletModal/useWalletModal.tsx","components/ConnectWalletButton.tsx","state/swap/hooks.ts","hooks/useParsedQueryString.ts","state/transactions/actions.ts","state/transactions/hooks.tsx","config/constants/priceHelperLps.ts","state/farms/fetchPublicFarmData.ts","state/farms/fetchFarm.ts","state/farms/fetchFarms.ts","utils/farmsPriceHelpers.ts","state/farms/fetchPublicFarmDataFromHOSwap.ts","state/farms/fetchFarmsPrices.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","hooks/usePairs.ts","state/profile/helpers.ts","state/profile/getProfile.ts","state/profile/index.tsx","contexts/Localization/Provider.tsx","contexts/Localization/useTranslation.ts","utils/getTokenLogoURL.ts","components/Logo/CurrencyLogo.tsx","hooks/useCallWithGasPrice.ts","hooks/useTokenBalance.ts","utils/isZero.ts","state/lottery/getLotteriesData.ts","state/lottery/index.ts","contexts/Localization/helpers.ts","components/RoiCalculatorModal/useRoiCalculatorReducer.ts","components/RoiCalculatorModal/RoiCalculatorFooter.tsx","components/RoiCalculatorModal/RoiCard.tsx","components/RoiCalculatorModal/AnimatedArrow.tsx","components/RoiCalculatorModal/index.tsx","hooks/useDebounce.ts","hooks/useAuth.ts","utils/wallet.ts","utils/currencyId.ts","utils/uriToHttp.ts","state/teams/index.tsx","config/constants/farms.ts","components/TransactionConfirmationModal/index.tsx","hooks/ENS/useENS.ts","hooks/ENS/useENSName.ts","hooks/ENS/useENSAddress.ts","utils/trades.ts","hooks/Trades.ts","config/constants/lottery.ts","config/constants/meta.ts","components/Layout/Page.tsx","utils/calls/farms.ts","state/profile/hooks.ts","components/Menu/GlobalSettings/TransactionSettings.tsx","components/styles/Checkbox.ts","components/Menu/GlobalSettings/ExpertModal.tsx","components/Menu/GlobalSettings/GasSettings.tsx","components/Menu/GlobalSettings/SettingsModal.tsx","components/Menu/GlobalSettings/CogIcon.tsx","components/Menu/GlobalSettings/index.tsx","components/App/AppHeader.tsx","components/App/AppBody.tsx","state/block/index.ts","utils/getRpcUrl.ts","utils/ENS/parseENSAddress.ts","utils/getTokenList.ts","utils/ENS/resolveENSContentHash.ts","hooks/useFetchListCallback.ts","contexts/ToastsContext/Provider.tsx","contexts/ToastsContext/Listener.tsx","components/CurrencyInputPanel/NumericalInput.tsx","components/CurrencyInputPanel/index.tsx","components/SearchModal/filtering.ts","utils/web3React.ts","config/constants/contracts.ts","utils/addressHelpers.ts","components/Loader/Dots.tsx","hooks/usePersistState.ts","hooks/useTotalSupply.ts","state/teams/helpers.ts","config/constants/teams.ts","state/lottery/getUserLotteryData.ts","state/user/hooks/useUserAddedTokens.ts","components/styles/Toggle.ts","components/icons/SpinnerLoading.tsx","hooks/useActiveWeb3React.ts","components/Menu/SubNav.tsx","views/Page.tsx","state/mint/actions.ts","components/TokenImage/index.tsx","config/constants/ifo.ts","utils/collectibles.ts","hooks/useLastUpdated.ts","hooks/useTransactionDeadline.ts","hooks/useCurrentBlockTimestamp.ts","state/pools/helpers.ts","state/lottery/getUserTicketsData.ts","hooks/useIsWindowVisible.ts","config/abi/erc20.ts","utils/contenthashToUri.ts","components/Layout/Row.tsx","contexts/RefreshContext.tsx","state/swap/actions.ts","hooks/usePreviousValue.ts","components/UnsupportedCurrencyFooter.tsx","components/Logo/Logo.tsx","components/styles/Modal.ts","components/Loader/CircleLoader.tsx","components/SearchModal/ImportToken.tsx","utils/maxAmountSpend.ts","utils/bigNumber.ts","hooks/useHttpLocations.ts","hooks/ENS/useENSContentHash.ts","utils/formatBalance.ts","state/burn/actions.ts","components/Layout/Column.tsx","components/Tags.tsx","utils/index.ts","utils/latinise.ts","state/mint/hooks.ts","views/AddLiquidity/ConfirmAddModalBottom.tsx","views/AddLiquidity/PoolPriceBar.tsx","views/AddLiquidity/index.tsx","config/constants/index.ts","components/Layout/Container.tsx","utils/contractHelpers.ts","state/collectibles/index.ts","components/PositionCard/index.tsx","hooks/useContract.ts","utils/farmHelpers.ts","utils/apr.ts","components/Layout/Flex.tsx","components/Loading.tsx","components/Balance.tsx","utils/getTimePeriods.ts","components/Select/Select.tsx","hooks/useDelayedUnmount.ts","views/AddLiquidity/AddIcon.tsx","components/SearchModal/CommonBases.tsx","components/SearchModal/ImportRow.tsx","components/SearchModal/CurrencyList.tsx","components/SearchModal/sorting.ts","components/SearchModal/CurrencySearch.tsx","components/SearchModal/types.ts","components/SearchModal/ManageLists.tsx","components/SearchModal/ManageTokens.tsx","components/SearchModal/Manage.tsx","components/SearchModal/ImportList.tsx","components/SearchModal/CurrencySearchModal.tsx","state/lottery/hooks.ts","views/Collectibles/helpers.ts","views/Collectibles/hooks/useBunnySpecialLottery.tsx","utils/multicall.ts","config/constants/types.ts","state/user/hooks/index.tsx","views/Pools/helpers.tsx","components/Logo/DoubleLogo.tsx","components/Logo/ListLogo.tsx","hooks/Tokens.ts","utils/wrappedCurrency.ts","state/user/actions.ts","state/types.ts","state/predictions/helpers.ts","state/predictions/queries.ts","state/predictions/index.ts","state/predictions/config.ts","config/constants/campaigns.ts","state/achievements/index.ts","state/voting/helpers.ts","state/voting/index.tsx","state/global/actions.ts","state/user/reducer.ts","state/transactions/reducer.ts","state/swap/reducer.ts","state/mint/reducer.ts","state/lists/reducer.ts","state/burn/reducer.ts","state/multicall/reducer.ts","state/index.ts","config/constants/tokens.ts","state/multicall/hooks.ts","hooks/useTokenAllowance.ts","hooks/useApproveCallback.ts","components/styles/Button.ts","state/user/hooks/helpers.ts","config/index.ts","config/constants/lists.ts","state/lists/hooks.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/fetchVaultPublic.ts","state/pools/fetchVaultUser.ts","state/pools/index.ts","state/lists/actions.ts","state/lists/updater.ts","hooks/useInterval.ts","state/multicall/retry.ts","state/multicall/updater.tsx","state/multicall/chunkArray.ts","state/transactions/updater.tsx","components/Menu/UserMenu/WalletModal.tsx","hooks/useEagerConnect.ts","components/DatePicker/DatePickerPortal.tsx","style/Global.tsx","components/icons/trading.tsx","components/icons/LP.tsx","components/icons/pledge.tsx","components/icons/bridge.tsx","components/Menu/config.tsx","components/Menu/UserMenu/CopyAddress.tsx","components/Menu/UserMenu/WalletInfo.tsx","components/Menu/UserMenu/TransactionRow.tsx","components/Menu/UserMenu/WalletTransactions.tsx","routerHistory.ts","components/Menu/UserMenu/ProfileUserMenutItem.tsx","components/Menu/UserMenu/WalletUserMenuItem.tsx","components/Menu/UikitMenu/icons/Farm.tsx","components/Menu/UikitMenu/icons/Groups.tsx","components/Menu/UikitMenu/icons/Hamburger.tsx","components/Menu/UikitMenu/icons/HamburgerClose.tsx","components/Menu/UikitMenu/icons/Home.tsx","components/Menu/UikitMenu/icons/Ifo.tsx","components/Menu/UikitMenu/icons/Info.tsx","components/Menu/UikitMenu/icons/Logo.tsx","components/Menu/UikitMenu/icons/Moon.tsx","components/Menu/UikitMenu/icons/More.tsx","components/Menu/UikitMenu/icons/Nft.tsx","components/Menu/UikitMenu/icons/Pool.tsx","components/Menu/UikitMenu/icons/Predictions.tsx","components/Menu/UikitMenu/icons/Sun.tsx","components/Menu/UikitMenu/icons/TeamBattle.tsx","components/Menu/UikitMenu/icons/Telegram.tsx","components/Menu/UikitMenu/icons/Ticket.tsx","components/Menu/UikitMenu/icons/Trade.tsx","components/Menu/UikitMenu/icons/Twitter.tsx","components/Menu/UikitMenu/icons/FrameIcon.tsx","components/Menu/UikitMenu/icons/WeiBoIcon.tsx","components/Menu/UikitMenu/components/MenuButton.tsx","components/Menu/UikitMenu/logo.svg","components/Menu/UikitMenu/components/Logo.tsx","components/Menu/UikitMenu/config.ts","components/Menu/UikitMenu/components/MenuEntry.tsx","views/Pools/components/ToggleView/ToggleView.tsx","components/Menu/UikitMenu/components/Accordion.tsx","components/Menu/UikitMenu/components/MenuLink.tsx","components/Menu/UikitMenu/components/PanelBody.tsx","components/Menu/UikitMenu/components/ThemeSwitcher.tsx","components/Menu/UikitMenu/components/LangSelector.tsx","components/Menu/UikitMenu/components/PanelFooter.tsx","components/Menu/UikitMenu/components/Panel.tsx","components/Menu/UikitMenu/Menu.tsx","components/Menu/UikitMenu/components/UserMenu/styles.tsx","components/Menu/UikitMenu/icons/Wallet.tsx","components/Menu/UikitMenu/components/UserMenu/index.tsx","components/Menu/UserMenu/index.tsx","components/Menu/index.tsx","components/SuspenseWithChunkError/index.tsx","components/Loader/PageLoader.tsx","components/EasterEgg/EasterEgg.tsx","state/pools/hooks.ts","views/Pools/components/SearchInput/SearchInput.tsx","views/Pools/components/PoolCard/AprRow.tsx","views/Pools/components/PoolCard/StyledCard.tsx","views/Pools/components/PoolCard/CardFooter/ExpandedFooter.tsx","views/Pools/components/PoolCard/CardFooter/index.tsx","views/Pools/components/CakeVaultCard/CakeVaultTokenPairImage.tsx","views/Pools/components/PoolCard/StyledCardHeader.tsx","views/Pools/hooks/useApprove.ts","views/Pools/components/PoolCard/CardActions/ApprovalAction.tsx","views/Pools/components/PoolCard/Modals/NotEnoughTokensModal.tsx","views/Pools/components/PoolCard/Modals/PercentageButton.tsx","views/Pools/hooks/useStakePool.ts","views/Pools/hooks/useUnstakePool.ts","views/Pools/components/PoolCard/Modals/StakeModal.tsx","views/Pools/components/PoolCard/CardActions/StakeActions.tsx","views/Pools/hooks/useHarvestPool.ts","views/Pools/components/PoolCard/Modals/CollectModal.tsx","views/Pools/components/PoolCard/CardActions/HarvestActions.tsx","views/Pools/components/PoolCard/CardActions/index.tsx","views/Pools/components/PoolCard/index.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultApprovalAction.tsx","views/Pools/hooks/useWithdrawalFeeTimer.ts","views/Pools/components/CakeVaultCard/WithdrawalFeeTimer.tsx","views/Pools/components/CakeVaultCard/UnstakingFeeCountdownRow.tsx","views/Pools/components/CakeVaultCard/FeeSummary.tsx","views/Pools/components/CakeVaultCard/VaultStakeModal.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/HasSharesActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultStakeActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/index.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitBalance.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitRow.tsx","views/Pools/components/CakeVaultCard/index.tsx","views/Pools/components/PoolTabButtons.tsx","views/Pools/components/PoolsTable/Cells/BaseCell.tsx","views/Pools/components/PoolsTable/ActionPanel/ActionPanel.tsx","views/Pools/components/PoolsTable/Cells/NameCell.tsx","views/Pools/components/PoolsTable/Cells/EarningsCell.tsx","views/Pools/components/PoolsTable/Apr.tsx","views/Pools/components/PoolsTable/Cells/AprCell.tsx","views/Pools/components/PoolsTable/Cells/TotalStakedCell.tsx","views/Pools/components/PoolsTable/Cells/EndsInCell.tsx","views/Pools/components/PoolsTable/Cells/ExpandActionCell.tsx","views/Pools/components/PoolsTable/ActionPanel/styles.ts","views/Pools/components/PoolsTable/ActionPanel/Stake.tsx","views/Pools/index.tsx","views/Pools/components/PoolsTable/Cells/AutoEarningsCell.tsx","views/Pools/components/PoolsTable/Cells/AutoAprCell.tsx","views/Pools/components/PoolsTable/PoolRow.tsx","views/Pools/components/PoolsTable/PoolsTable.tsx","config/constants/swapWarningTokens.ts","views/Swap/components/AddressInputPanel.tsx","views/Swap/components/styleds.tsx","views/Swap/components/FormattedPriceImpact.tsx","views/Swap/components/SwapModalFooter.tsx","views/Swap/components/SwapModalHeader.tsx","views/Swap/components/ConfirmSwapModal.tsx","hooks/useLast.ts","views/Swap/components/AdvancedSwapDetailsDropdown.tsx","views/Swap/components/TradePrice.tsx","views/Swap/components/ImportTokenWarningModal.tsx","views/Swap/components/ProgressSteps.tsx","hooks/useSwapCallback.ts","hooks/useWrapCallback.ts","views/Swap/components/SwapWarningModal/SafemoonWarning.tsx","views/Swap/components/SwapWarningModal/BondlyWarning.tsx","views/Swap/components/SwapWarningModal/Acknowledgement.tsx","views/Swap/components/SwapWarningModal/index.tsx","views/Swap/components/ArrowDownIcon.tsx","views/Swap/index.tsx","views/Swap/components/confirmPriceImpactWithoutFee.ts","views/AddLiquidity/redirects.tsx","views/RemoveLiquidity/redirects.tsx","views/Swap/redirects.tsx","views/Collectibles/components/NftGiveawayModal.tsx","views/Collectibles/components/GlobalCheckClaimStatus.tsx","App.tsx","Providers.tsx","index.tsx","components/QuestionHelper/index.tsx","utils/prices.ts","state/multicall/actions.ts","config/constants/nfts.ts"],"names":["pools","RPC_URL","getRpcUrl","simpleRpcProvider","ethers","providers","JsonRpcProvider","usePollBlockNumber","timer","useRef","dispatch","useAppDispatch","isWindowVisible","useIsWindowVisible","useEffect","current","setInterval","a","getBlockNumber","blockNumber","setBlock","clearInterval","useBlock","useSelector","state","block","useToast","toastContext","useContext","ToastsContext","undefined","Error","useTokenBalancesWithLoadingIndicator","address","tokens","validatedTokens","useMemo","filter","t","isAddress","validatedTokenAddresses","map","vt","balances","useMultipleContractSingleData","ERC20_INTERFACE","anyLoading","some","callState","loading","length","reduce","memo","token","i","value","result","amount","JSBI","BigInt","toString","TokenAmount","useTokenBalances","useTokenBalance","account","tokenBalances","useCurrencyBalances","currencies","currency","Token","ethBalance","uncheckedAddresses","multicallContract","useMulticallContract","addresses","sort","results","useSingleContractMultipleData","CurrencyAmount","ether","useBNBBalances","ETHER","useCurrencyBalance","useAllTokenBalances","useWeb3React","allTokens","useAllTokens","Object","values","GRAPH_API_PROFILE","process","REACT_APP_GRAPH_API_PROFILE","GRAPH_API_PREDICTION","REACT_APP_GRAPH_API_PREDICTION","GRAPH_API_LOTTERY","REACT_APP_GRAPH_API_LOTTERY","SNAPSHOT_VOTING_API","REACT_APP_SNAPSHOT_VOTING_API","SNAPSHOT_BASE_URL","REACT_APP_SNAPSHOT_BASE_URL","SNAPSHOT_API","usePollFarmsData","includeArchive","useRefresh","slowRefresh","pids","farmsConfig","nonArchivedFarms","farmToFetch","pid","fetchFarmsPublicDataAsync","fetchFarmUserDataAsync","usePollCoreFarmData","fastRefresh","useFarms","farms","useFarmFromPid","data","find","f","useFarmUser","farm","allowance","userData","BigNumber","BIG_ZERO","tokenBalance","stakedBalance","earnings","useLpTokenPrice","symbol","lpSymbol","farmTokenPriceInUsd","busdPrice","useBusdPriceFromPid","lpTokenPrice","lpTotalSupply","lpTotalInQuoteToken","overallValueOfAllTokensInFarm","times","tokenAmountTotal","totalLpTokens","getBalanceAmount","div","usePriceCakeBusd","cakePriceBusdAsString","useTheme","useThemeManager","isDark","toggleTheme","theme","StyledThemeContext","Card","styled","Box","width","padding","border","borderRadius","colors","background","LightCard","backgroundAlt","LightGreyCard","cardBorder","GreyCard","dropdown","DAYS_TO_CALCULATE_AGAINST","getInterestBreakdown","principalInUSD","apr","earningTokenPrice","compoundFrequency","performanceFee","timesCompounded","aprAsDecimal","roundingDecimalsNew","Math","round","days","daysAsDecimalOfYear","principal","interestEarned","parseFloat","toFixed","getPrincipalForInterest","interest","compoundingFrequency","apyAsDecimal","getApy","performanceFeeAsDecimal","takenAsPerformanceFee","getRoi","amountEarned","amountInvested","RefreshContext","fast","slow","lotteryContract","getLotteryV2Contract","processViewLotterySuccessResponse","response","lotteryId","status","startTime","endTime","priceTicketInCake","discountDivisor","treasuryFee","firstTicketId","lastTicketId","amountCollectedInCake","finalNumber","cakePerBracket","countWinnersPerBracket","rewardsBreakdown","statusKey","keys","LotteryStatus","serializedCakePerBracket","cakeInBracket","ethersToSerializedBigNumber","serializedCountWinnersPerBracket","winnersInBracket","serializedRewardsBreakdown","reward","isLoading","processViewLotteryErrorResponse","PENDING","fetchLottery","viewLottery","lotteryData","fetchMultipleLotteries","lotteryIds","calls","id","name","getLotteryV2Address","params","multicallv2","lotteryV2Abi","requireSuccess","multicallRes","processedResponses","res","index","console","error","call","fetchCurrentLotteryIdAndMaxBuy","method","currentLotteryId","maxNumberTicketsPerBuyOrClaim","getRoundIdsArray","currentIdAsInt","parseInt","roundIds","NUM_ROUNDS_TO_FETCH_FROM_NODES","push","roundId","useProcessLotteryResponse","priceTicketInCakeAsString","discountDivisorAsString","amountCollectedInCakeAsString","userTickets","hasRoundBeenClaimed","tickets","ticket","getGasPrice","userGas","store","getState","user","gasPrice","GAS_PRICE_GWEI","default","ChainId","MAINNET","testnet","EN","locale","language","code","languages","languageList","ConnectorNames","connectors","title","icon","Metamask","connectorId","Injected","priority","connectorLocalStorageKey","walletLocalStorageKey","WalletButton","Button","attrs","variant","py","WalletCard","login","walletConfig","onDismiss","Icon","onClick","isIOS","test","navigator","userAgent","window","MSStream","WalletConnect","localStorage","setItem","toLocaleLowerCase","mb","fontSize","WalletWrapper","ConnectModal","displayCount","useState","showMore","sortedConfig","preferredWalletName","getItem","b","preferredWallet","sortedWalletConfig","getPreferredConfig","config","displayListConfig","slice","minWidth","style","getThemeValue","maxHeight","overflowY","gridTemplateColumns","wallet","StyleButton","Text","role","primary","Tooltip","isTooltipDisplayed","contrast","invertedContrast","CopyToClipboard","toCopy","children","props","setIsTooltipDisplayed","displayTooltip","setTimeout","small","bold","clipboard","permissions","writeText","then","document","queryCommandSupported","content","el","createElement","body","appendChild","select","execCommand","removeChild","copyToClipboardWithCommand","color","ml","AccountModal","logout","whiteSpace","overflow","textOverflow","marginBottom","href","mr","justifyContent","scale","removeItem","useWalletModal","useModal","onPresentConnectModal","onPresentAccountModal","ConnectWalletButton","useTranslation","useAuth","className","useSwapState","swap","useSwapActionHandlers","useDispatch","onCurrencySelection","useCallback","field","selectCurrency","currencyId","onSwitchTokens","switchCurrencies","onUserInput","typedValue","typeInput","onChangeRecipient","recipient","setRecipient","tryParseAmount","typedValueParsed","parseUnits","decimals","debug","BAD_RECIPIENT_ADDRESSES","involvesAddress","trade","checksummedAddress","route","path","pairs","pair","liquidityToken","useDerivedSwapInfo","inputError","useActiveWeb3React","independentField","inputCurrencyId","Field","INPUT","outputCurrencyId","OUTPUT","inputCurrency","useCurrency","outputCurrency","recipientLookup","useENS","to","relevantTokenBalances","isExactIn","parsedAmount","bestTradeExactIn","useTradeExactIn","bestTradeExactOut","useTradeExactOut","v2Trade","currencyBalances","formattedTo","indexOf","useUserSlippageTolerance","allowedSlippage","slippageAdjustedAmounts","computeSlippageAdjustedAmounts","balanceIn","amountIn","lessThan","parseCurrencyFromURLParameter","urlParam","valid","toUpperCase","ENS_NAME_REGEX","ADDRESS_REGEX","queryParametersToSwapState","parsedQs","validatedRecipient","exactAmount","isNaN","toLowerCase","parseIndependentFieldURLParameter","exactField","useDefaultsFromURLSearch","chainId","search","useLocation","parse","parseArrays","ignoreQueryPrefix","useParsedQueryString","setResult","parsed","replaceSwapState","addTransaction","createAction","clearAllTransactions","finalizeTransaction","checkedTransaction","useTransactionAdder","summary","approval","claim","hash","from","useAllTransactions","s","transactions","useHasPendingApproval","tokenAddress","spender","allTransactions","tx","receipt","Date","getTime","addedTime","isTransactionRecent","priceHelperLps","fetchFarm","lpAddresses","quoteToken","lpAddress","getAddress","getMasterChefAddress","multicall","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","tokenDecimals","quoteTokenDecimals","lpTokenRatio","BIG_TEN","pow","quoteTokenAmountTotal","tokenAmountMc","quoteTokenAmountMc","masterchefABI","info","ret","toJSON","tokenPriceVsQuote","lastWithdrawBlockNumber","lastWithdrawBlock","rewardEndBlockNumber","endBlockNumber","rewardBeginBlockNumber","rewardPerBlock","fetchPublicFarmData","farmPublicData","fetchFarms","farmsToFetch","Promise","all","farmConfig","filterFarmsByQuoteToken","preferredQuoteTokens","preferredFarm","fetchHOSwapFarm","getFarmFromTokenSymbol","tokenSymbol","farmsWithTokenSymbol","getFarmBaseTokenPrice","quoteTokenFarm","hasTokenPriceVsQuote","Boolean","quoteTokenInBusd","getFarmQuoteTokenPrice","BIG_ONE","fetchFarmsPrices","hoSwapFarm0","who_hoswap","usdt","earningToken","hos","farmsWithPrices","baseTokenPrice","quoteTokenPrice","fetchFarmUserAllowances","masterChefAddress","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","_hex","fetchFarmUserEarnings","rawEarnings","parsedEarnings","initialState","loadArchivedFarmsData","userDataLoaded","isArchivedPid","createAsyncThunk","includes","farmsWithPriceHelpers","concat","priceHelperLpsConfig","farmsWithoutHelperLps","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","farmsSlice","createSlice","reducers","setLoadArchivedFarmsData","action","payload","extraReducers","builder","addCase","fulfilled","liveFarmData","farmData","forEach","userDataEl","findIndex","actions","PairState","PAIR_INTERFACE","Interface","IUniswapV2PairABI","usePairs","currencyA","currencyB","wrappedCurrency","pairAddresses","tokenA","tokenB","equals","Pair","reserves","LOADING","INVALID","NOT_EXISTS","reserve0","reserve1","sortsBefore","token0","token1","EXISTS","usePair","transformProfileResponse","profileResponse","userId","numberPoints","teamId","nftAddress","tokenId","isActive","Number","points","profileContract","getProfileContract","getUsername","fetch","ok","json","username","getProfile","hasRegistered","profile","getUserProfile","getTeam","team","getNftByTokenId","nft","Cookies","set","avatar","images","sm","domain","secure","expires","isInitialized","profileSlice","profileFetchStart","profileFetchSucceeded","_state","profileFetchFailed","profileClear","addPoints","fetchProfile","isFetching","currentLanguage","languageMap","Map","translations","LanguageContext","createContext","LanguageProvider","codeFromStorage","getLanguageCodeFromLS","setState","enLocale","get","fetchLocale","currentLocale","prevState","fetchInitialLocales","setLanguage","has","LS_KEY","translate","key","translatedText","match","interpolatedText","dataKey","templateKey","RegExp","replace","Provider","languageContext","getTokenLogoURL","StyledLogo","Logo","size","CurrencyLogo","uriLocations","useHttpLocations","WrappedTokenInfo","logoURI","srcs","alt","useCallWithGasPrice","useGasPrice","callWithGasPrice","contract","methodName","methodArgs","overrides","contractMethod","hasManualGasPriceOverride","FetchStatus","useGetBnbBalance","NOT_FETCHED","fetchStatus","setFetchStatus","balance","setBalance","useLastUpdated","lastUpdated","setLastUpdated","getBalance","walletBalance","SUCCESS","FAILED","fetchBalance","refresh","balanceState","setBalanceState","getBep20Contract","balanceOf","prev","isZero","hexNumberString","applyNodeDataToLotteriesGraphResponse","nodeData","graphResponse","nodeRound","ticketPrice","totalTickets","totalUsers","winningTickets","graphRound","getGraphLotteries","first","skip","where","request","gql","lotteries","getLotteriesData","idsForNodesCall","mergedData","isTransitioning","currentRound","lotteriesData","userLotteryData","totalCake","rounds","fetchCurrentLottery","lotteryInfo","fetchCurrentLotteryId","currentIdAndMaxBuy","fetchUserTicketsAndLotteries","getUserLotteryData","userLotteriesRes","userParticipationInCurrentRound","userLotteries","fetchPublicLotteries","fetchUserLotteries","setLotteryIsTransitioning","LotterySlice","setLotteryPublicData","EditingCurrency","CalculatorMode","Footer","Flex","BulletList","ul","textSubtle","RoiCalculatorFooter","isFarm","displayApr","autoCompoundFrequency","multiplier","linkLabel","linkHref","isExpanded","setIsExpanded","useTooltip","my","placement","tooltipOffset","multiplierRef","targetRef","multiplierTooltip","tooltip","multiplierTooltipVisible","tooltipVisible","gridRowCount","apy","p","flexDirection","expanded","px","gridRowGap","gridTemplateRows","textAlign","compoundTimes","alignItems","ref","height","display","mt","fee","compoundingIndexToFrequency","controls","compounding","activeCompoundingIndex","stakingDuration","mode","ROI_BASED_ON_PRINCIPAL","editingCurrency","USD","principalAsToken","principalAsUSD","roiUSD","roiTokens","roiPercentage","roiCalculatorReducer","type","toggledCompounding","PRINCIPAL_BASED_ON_ROI","currencyAfterChange","TOKEN","useRoiCalculatorReducer","stakingTokenPrice","useReducer","principalInUSDAsNumber","interestBreakdown","hasInterest","roiAsUSD","principalForExpectedRoi","principalUSD","principalToken","setPrincipalFromUSDValue","principalAsTokenBN","gt","setPrincipalFromTokenValue","principalAsUsdBN","principalAsUsdString","setStakingDuration","stakingDurationIndex","toggleCompounding","toggleEditingCurrency","setCompoundingFrequency","setCalculatorMode","modeToSet","setTargetRoi","targetRoiAsTokens","toNumber","MILLION","RoiCardWrapper","radii","card","RoiCardInner","RoiInputContainer","RoiDisplayContainer","RoiDollarAmount","fadeOut","RoiCard","earningTokenSymbol","calculatorState","inputRef","focus","onEnterEditing","textTransform","inputMode","pattern","placeholder","onChange","event","currentTarget","toLocaleString","minimumFractionDigits","maximumFractionDigits","rotate","keyframes","ArrowContainer","AnimatedArrow","setKey","prevKey","prevId","split","StyledModal","Modal","ScrollableContainer","mediaQueries","FullWidthButtonMenu","ButtonMenu","disabled","RoiCalculatorModal","onBack","stakingTokenBalance","stakingTokenSymbol","initialValue","balanceInputRef","assetSymbol","editingUnit","editingValue","conversionUnit","conversionValue","headerBackground","asset","currencyValue","innerRef","unit","switchEditingUnits","onFocus","lte","getBalanceNumber","toLocaleUpperCase","activeIndex","onItemClick","flex","checked","useDebounce","delay","debouncedValue","setDebouncedValue","handler","clearTimeout","activate","deactivate","toastError","connectorID","connector","connectorsByName","UnsupportedChainIdError","setupNetwork","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","WalletConnectConnector","walletConnectProvider","message","walletconnect","close","provider","ethereum","chainName","nativeCurrency","rpcUrls","nodes","blockExplorerUrls","BASE_BSC_SCAN_URL","registerToken","options","image","BASE_URL","tokenAdded","uriToHttp","uri","substr","teamsList","accum","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","aw","who","Wrapper","Section","AutoColumn","ConfirmedIcon","ColumnCenter","ConfirmationPendingContent","pendingText","gap","justify","TransactionSubmittedContent","currencyToAdd","library","strokeWidth","external","getBscScanLink","isMetaMask","ConfirmationModalContent","bottomContent","topContent","TransactionErrorContent","pt","TransactionConfirmationModal","customOnDismiss","attemptingTxn","handleDismiss","nameOrAddress","validated","reverseLookup","debouncedAddress","ensNodeArgument","namehash","registrarContract","useENSRegistrarContract","resolverAddress","useSingleCallResult","resolverAddressResult","resolverContract","useENSResolverContract","changed","ENSName","useENSName","lookup","ensName","debouncedName","addr","useENSAddress","isTradeBetter","tradeA","tradeB","minimumDelta","ZERO_PERCENT","tradeType","currencyEquals","inputAmount","outputAmount","equalTo","executionPrice","raw","multiply","add","ONE_HUNDRED_PERCENT","useAllCommonPairs","bases","common","BASES_TO_CHECK_TRADES_AGAINST","additionalA","ADDITIONAL_BASES","additionalB","basePairs","flatMap","base","otherBase","allPairCombinations","t0","t1","tokenA_","tokenB_","customBases","CUSTOM_BASES","customBasesA","customBasesB","allPairs","curr","currencyAmountIn","currencyOut","allowedPairs","useUserSingleHopOnly","singleHopOnly","Trade","maxHops","maxNumResults","bestTradeSoFar","currentTrade","BETTER_TRADE_LESS_HOPS_THRESHOLD","currencyIn","currencyAmountOut","useIsTransactionUnsupported","unsupportedTokens","useUnsupportedTokens","tokenIn","tokenOut","TICKET_LIMIT_PER_REQUEST","DEFAULT_META","description","StyledPage","Container","lg","PageMeta","pathname","cakePriceUsd","cakePriceUsdDisplay","pageMeta","getCustomMeta","pageTitle","join","Page","gasLimit","DEFAULT_GAS_LIMIT","stakeFarm","masterChefContract","DEFAULT_TOKEN_DECIMAL","deposit","wait","unstakeFarm","withdraw","harvestFarm","useFetchProfile","useProfile","hasProfile","SlippageError","DeadlineError","SlippageTabs","slippageError","deadlineError","userSlippageTolerance","setUserSlippageTolerance","useUserTransactionTTL","ttl","setTtl","slippageInput","setSlippageInput","deadlineInput","setDeadlineInput","slippageInputIsValid","deadlineInputIsValid","RiskyLow","RiskyHigh","InvalidInput","parseCustomSlippage","valueAsIntFromRoundedFloat","parseCustomDeadline","valueAsInt","QuestionHelper","text","flexWrap","onBlur","e","target","isWarning","isSuccess","boxShadow","Checkbox","ExpertModal","setShowConfirmExpertModal","setRememberExpertModeAcknowledgement","useExpertModeManager","toggleExpertMode","isRememberChecked","setIsRememberChecked","maxWidth","userSelect","prompt","GasSettings","useGasPriceManager","setGasPrice","GAS_PRICE","instant","TModal","SettingsModal","showConfirmExpertModal","usePersistState","localStorageKey","rememberExpertModeAcknowledgement","expertMode","setSingleHopOnly","useAudioModeManager","pb","TransactionSettings","Toggle","CogIcon","viewBox","d","GlobalSettings","onPresentSettingsModal","AppHeaderContainer","AppHeader","subtitle","helper","backTo","noConfig","as","Link","show","BodyWrapper","AppBody","blockSlice","currentBlock","initialBlock","getNodeUrl","sample","parseENSAddress","ensAddress","ensPath","tokenListValidator","Ajv","allErrors","compile","schema","getTokenList","listUrl","resolveENSContentHash","parsedENS","contentHashUri","translatedUri","contenthashToUri","urls","url","isLast","validationErrors","errors","dataPath","REGISTRAR_ABI","constant","inputs","outputs","payable","stateMutability","REGISTRAR_ADDRESS","RESOLVER_ABI","internalType","Contract","ensRegistrarContract","resolver","contenthash","useFetchListCallback","useWeb3Provider","ensResolver","sendDispatch","requestId","nanoid","fetchTokenList","pending","tokenList","catch","rejected","errorMessage","ToastsProvider","toasts","setToasts","toast","prevToasts","kebabCase","currentToasts","prevToast","clear","remove","toastTypes","DANGER","toastInfo","INFO","toastSuccess","toastWarning","WARNING","ToastListener","onRemove","StyledInput","input","failure","align","inputRegex","Input","React","rest","nextUserInput","escapeRegExp","autoComplete","autoCorrect","minLength","maxLength","spellCheck","InputRow","selected","CurrencySelectButton","LabelRow","InputPanel","hideInput","CurrencyInputPanel","onMax","showMaxButton","label","onCurrencySelect","disableCurrencySelect","hideBalance","otherCurrency","showCommonBases","selectedCurrencyBalance","translatedLabel","CurrencySearchModal","selectedCurrency","otherSelectedCurrency","onPresentCurrencyModal","Row","cursor","toSignificant","val","currency0","currency1","margin","marginRight","filterTokens","searchingAddress","lowerSearchParts","matchesSearch","sParts","s_","every","sp","startsWith","endsWith","useSortedTokensByQuery","searchQuery","symbolMatch","exactMatches","symbolSubtrings","trim","rpcUrl","injected","InjectedConnector","supportedChainIds","rpc","bridge","qrcode","pollingInterval","bscConnector","BscConnector","BSC","getLibrary","Web3Provider","getCakeAddress","getMulticallAddress","getWbnbAddress","getPancakeProfileAddress","getPancakeRabbitsAddress","getBunnyFactoryAddress","getClaimRefundAddress","getPointCenterIfoAddress","getBunnySpecialAddress","getTradingCompetitionAddress","getEasterNftAddress","getCakeVaultAddress","getPredictionsAddress","getChainlinkOracleAddress","getBunnySpecialCakeVaultAddress","getBunnySpecialPredictionAddress","getBunnySpecialLotteryAddress","getFarmAuctionAddress","Dots","span","defaultOptions","hydrate","identity","dehydrate","userOptions","valueFromLS","JSON","setValue","stringify","useTotalSupply","useTokenContract","totalSupply","getTeamProfile","teamName","numberUsers","isJoinable","staticTeamInfo","staticTeam","merge","users","getTeams","teamsById","numberTeams","nbTeams","profileABI","teamData","onChainTeamData","teams","md","ipfs","IPFS_GATEWAY","textColor","applyNodeDataToUserGraphResponse","userNodeData","userGraphData","lotteryNodeData","ticketDataForRound","roundTickets","claimed","getGraphLotteryUser","blankUser","userRes","lottery","idsForTicketsNodeCall","fetchUserTicketsForMultipleRounds","roundDataAndUserTickets","userRoundsNodeData","idsForLotteriesNodeCall","lotteriesNodeData","mergedRoundData","graphResponseWithNodeRounds","useUserAddedTokens","serializedTokensMap","deserializeToken","ToggleWrapper","Loading","SpinnerLoading","web3React","refEth","setprovider","StyledNav","nav","Nav","location","gradients","bubblegum","xs","SubNav","flexGrow","resetMintState","getImageUrlFromToken","TokenPairImage","primaryToken","secondaryToken","primarySrc","secondarySrc","ifos","getIdentifierKeyFromAddress","nftSource","nftSources","nftSourceEntry","identifierKey","getTokenUrl","tokenUri","getAddressByType","getTokenUriData","getErc721Contract","tokenURI","uriDataResponse","uriData","Nfts","identifier","now","setStateLastUpdated","previousLastUpdated","usePreviousValue","useTransactionDeadline","userDeadline","blockTimestamp","useCurrentBlockTimestamp","transformUserData","pendingReward","transformPool","pool","totalStaked","stakingLimit","getTokenPricesFromFarm","prices","quoteTokenAddress","processRawTicketsResponse","ticketsResponse","ticketIds","ticketNumbers","ticketStatuses","ticketId","number","viewUserInfoForLotteryId","perRequestLimit","fetchUserTicketsForOneRound","numReturned","ticketData","idsToCheck","ticketsForMultipleRounds","ticketsForRound","VISIBILITY_STATE_SUPPORTED","visibilityState","isVisible","setIsVisible","handleVisibilityChange","addEventListener","removeEventListener","ERC20_ABI","ERC20_BYTES32_ABI","UTF_8_DECODER","TextDecoder","buff","hex","arr","Uint8Array","hexToUint8Array","codec","getCodec","rmPrefix","cid","CID","toB58String","multihash","decode","digest","RowBetween","AutoRow","RowFixed","RefreshContextProvider","setSlow","setFast","isBrowserTabActiveRef","onVisibilityChange","hidden","useIsBrowserTabActive","interval","DetailsFooter","UnsupportedModal","UnsupportedCurrencyFooter","onPresentModal","BAD_SRCS","src","onError","StyledSVG","svg","stroke","CircleLoader","fill","xmlns","strokeLinecap","strokeLinejoin","ImportToken","handleCurrencySelect","confirmed","setConfirmed","addToken","useAddUserToken","inactiveTokenList","useCombinedInactiveList","list","substring","gridGap","outline","startIcon","maxAmountSpend","currencyAmount","greaterThan","MIN_BNB","subtract","ethersBn","ethersToBigNumber","ens","resolvedContentHash","useENSContentHash","getDecimalAmount","dividedBy","getFullDisplayBalance","displayDecimals","formatNumber","minPrecision","maxPrecision","Column","CoreTag","CommunityTag","DualTag","ManualPoolTag","CompoundingPoolTag","BASE_BROWSER_URLS","BASE_BSC_SCAN_URLS","shortenAddress","chars","calculateGasMargin","mul","basisPointsToPercent","num","Percent","calculateSlippageAmount","slippage","divide","getContract","ABI","AddressZero","getSigner","connectUnchecked","getProviderOrSigner","getRouterContract","_","ROUTER_ADDRESS","IUniswapV2Router02ABI","string","isTokenOnList","defaultTokens","isTouchDevice","maxTouchPoints","msMaxTouchPoints","fallback","Latinise","latin_map","τ","Τ","latinise","x","ZERO","useMintState","mint","ConfirmAddModalBottom","noLiquidity","price","parsedAmounts","poolTokenPercentage","onAdd","CURRENCY_A","CURRENCY_B","invert","PoolPriceBar","assetA","assetB","ONE_BIPS","AddLiquidity","currencyIdA","currencyIdB","history","oneCurrencyIsWETH","WETH","useIsExpertMode","otherTypedValue","dependentField","pairState","equal","independentAmount","dependentAmount","wrappedIndependentAmount","wrappedCurrencyAmount","dependentCurrency","dependentTokenAmount","priceOf","quote","currencyAAmount","currencyBAmount","Price","wrappedCurrencyA","liquidityMinted","tokenAmountA","tokenAmountB","getLiquidityMinted","useDerivedMintInfo","onFieldAInput","onFieldBInput","useMintActionHandlers","isValid","setAttemptingTxn","deadline","txHash","setTxHash","formattedAmounts","maxAmounts","accumulator","atMaxAmounts","useApproveCallback","approvalA","approveACallback","approvalB","approveBCallback","router","parsedAmountA","parsedAmountB","amountsMin","tokenBIsETH","estimate","estimateGas","addLiquidityETH","args","toHexString","addLiquidity","estimatedGasLimit","err","modalHeader","modalBottom","amountA","symbolA","amountB","symbolB","handleCurrencyASelect","currencyA_","newCurrencyIdA","handleCurrencyBSelect","currencyB_","newCurrencyIdB","handleDismissConfirmation","addIsUnsupported","onPresentAddLiquidityModal","App","toExact","AddIcon","ApprovalState","NOT_APPROVED","APPROVED","marginTop","showUnwrapped","USDT","AW","WHO","SUGGESTED_BASES","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","BIG_INT_ZERO","BIPS_BASE","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_HIGH","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","BLOCKED_PRICE_IMPACT_NON_EXPERT","exponentiate","BLOCKED_ADDRESSES","mx","abi","signer","signerOrProvider","bep20Abi","erc721Abi","getIfoV1Contract","ifoV1Abi","getIfoV2Contract","ifoV2Abi","getSouschefContract","poolsConfig","sousId","poolCategory","PoolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","getSouschefV2Contract","sousChefV2","getPointCenterIfoContract","pointCenterIfo","getCakeContract","cakeAbi","getPancakeRabbitContract","pancakeRabbitsAbi","getBunnyFactoryContract","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","getMasterchefContract","masterChef","getClaimRefundContract","claimRefundAbi","getTradingCompetitionContract","tradingCompetitionAbi","getEasterNftContract","easterNftAbi","getCakeVaultContract","cakeVaultAbi","getPredictionsContract","predictionsAbi","getChainlinkOracleContract","chainlinkOracleAbi","getMulticallContract","MultiCallAbi","getBunnySpecialCakeVaultContract","bunnySpecialCakeVaultAbi","getBunnySpecialPredictionContract","bunnySpecialPredictionAbi","getBunnySpecialLotteryContract","bunnySpecialLotteryAbi","getFarmAuctionContract","farmAuctionAbi","fetchWalletNfts","nftSourcePromises","nftSourceType","addressObj","getTokenIdAndData","tokenOfOwnerByIndex","tokenIdBn","walletNft","balanceOfResponse","nftDataFetchPromises","nftData","nftSourceData","flat","collectiblesSlice","association","FixedHeightRow","MinimalPositionCard","unwrappedToken","setShowMore","userPoolBalance","totalPoolTokens","greaterThanOrEqual","getLiquidityValue","token0Deposited","token1Deposited","FullPositionCard","useERC20","useERC721","useCake","useMasterchef","useSousChef","useEasterNftContract","useCakeVaultContract","useBunnySpecialLotteryContract","useFarmAuctionContract","useContract","withSignerIfPossible","useWETHContract","WETH_ABI","ENS_ABI","ENS_PUBLIC_RESOLVER_ABI","useBytes32TokenContract","usePairContract","pairAddress","multiCallAbi","getPoolApr","rewardTokenPrice","tokenPerBlock","totalRewardPricePerYear","BLOCKS_PER_YEAR","totalStakingTokenInPool","isFinite","getFarmApr","poolWeight","poolLiquidityUsd","farmAddress","cakeRewardsApr","CAKE_PER_YEAR","cakeRewardsAprAsNumber","lpRewardsApr","lpAprs","FlexLayout","Balance","isDisabled","prefix","previousValue","start","end","suffix","duration","separator","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","abs","timeLeft","years","months","hours","minutes","floor","DropDownHeader","shadows","inset","DropDownListContainer","zIndices","DropDownContainer","isOpen","css","inputSecondary","DropDownList","ListItem","li","Select","containerRef","dropdownRef","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","containerSize","setContainerSize","toggling","stopPropagation","offsetWidth","offsetHeight","handleClickOutside","option","selectedIndex","useDelayedUnmount","isMounted","delayTime","shouldRender","setShouldRender","timeoutId","ArrowDownIcon","y","rx","BaseWrapper","disable","CommonBases","onSelect","TokenSection","dim","CheckIcon","CheckmarkCircleIcon","success","NameOverflow","ImportRow","showImportView","setImportToken","isAdded","useIsUserAddedToken","useIsTokenActive","opacity","currencyKey","StyledBalanceText","FixedContentRow","MenuItem","CurrencyRow","isSelected","otherSelected","selectedTokenList","useCombinedActiveList","isOnSelectedList","customAdded","ellipsis","justifySelf","CurrencyList","fixedListRef","showETH","breakIndex","itemData","formatted","Currency","inactiveTokens","useAllInactiveTokens","showImport","itemKey","itemCount","itemSize","useTokenComparator","inverted","comparator","balanceA","balanceB","balanceComp","getTokenComparator","swapSound","Audio","CurrencySearch","CurrencyModalView","fixedList","setSearchQuery","debouncedQuery","invertSearchOrder","searchToken","useToken","searchTokenIsAdded","audioPlay","tokenComparator","filteredTokens","sortedTokens","filteredSortedTokens","play","handleInput","checksummedInput","scrollTo","handleEnter","useFoundOnInactiveList","filteredInactiveTokens","onKeyDown","RowWrapper","active","tertiary","listUrlRowHTMLId","ListRow","version","listsByUrl","lists","byUrl","pendingUpdate","useIsListActive","handleAcceptListUpdate","acceptListUpdate","handleRemoveList","confirm","removeList","handleEnableList","enableList","handleDisableList","disableList","major","minor","patch","trigger","ListContainer","ManageLists","setModalView","setImportList","setListUrl","listUrlInput","setListUrlInput","useAllLists","activeListUrls","useActiveListUrls","activeCopy","setActiveCopy","fetchList","validUrl","sortedLists","UNSUPPORTED_LIST_URLS","u1","u2","l1","l2","tempList","setTempList","addError","setAddError","fetchTempList","isImported","handleImport","importList","paddingTop","marginLeft","ManageTokens","userAddedTokens","removeToken","useRemoveUserAddedToken","handleRemoveAll","isAddressValid","importToken","StyledButtonMenu","Manage","showLists","setShowLists","TextDot","ImportList","listURL","onImport","adding","loadingRequestId","handleAddList","StyledModalContainer","ModalContainer","StyledModalBody","ModalBody","modalView","prevView","usePrevious","manage","useGetCurrentLotteryId","NO_CLAIM","canClaim","mintData","getLottieClaim","variationId","lotteryNftContract","canClaimNft1","bunnyId","getLuckyClaim","userRounds","claimedWinningRounds","winningRound","claimedTickets","winningTicketCursor","canClaimNft2","getBallerClaim","userWhitelistForNft3","canClaimNft3","useBunnySpecialLottery","currentLotteryIdNum","setUserRounds","lotteryNftContractAddress","startRound","finalRound","startLotteryRoundInt","finalLotteryRoundInt","lotteryIdsArray","lottery_in","userParticipation","getUserData","canClaimLottie","userRound","lottieClaim","canClaimLucky","luckyClaim","canClaimBaller","multi","itf","utils","calldata","encodeFunctionData","aggregate","returnData","decodeFunctionResult","tryAggregate","PoolIds","NftType","AuctionStatus","toggleSetAudioMode","muteAudio","unmuteAudio","userExpertMode","toggleSetExpertMode","updateUserExpertMode","toggleThemeAction","userSingleHopOnly","newSingleHopOnly","updateUserSingleHopOnly","updateUserSlippageTolerance","useUserFarmStakedOnly","userFarmStakedOnly","setUserFarmStakedOnly","stakedOnly","farmStakedOnly","FarmStakedOnly","TRUE","FALSE","updateUserFarmStakedOnly","ON_FINISHED","updateUserDeadline","addSerializedToken","serializedToken","serializeToken","removeSerializedToken","updateGasPrice","serializePair","usePairAdder","addSerializedPair","serializedPair","toV2LiquidityToken","useTrackedTokenPairs","pinnedPairs","generatedPairs","savedSerializedPairs","userPairs","forChain","pairId","combinedList","keyed","sorted","convertSharesToCake","shares","cakePerFullShare","decimalsToRound","sharePriceNumber","amountInCake","multipliedBy","cakeAsNumberBalance","cakeAsBigNumber","cakeAsDisplayBalance","convertCakeToShares","cake","amountInShares","sharesAsNumberBalance","sharesAsBigNumber","sharesAsDisplayBalance","getAprData","isAutoVault","getCakeVaultEarnings","cakeAtLastUserAction","userShares","pricePerFullShare","hasAutoEarnings","autoCakeProfit","minus","autoCakeToDisplay","gte","autoUsdProfit","autoUsdToDisplay","getPoolBlockInfo","startBlock","endBlock","isFinished","shouldShowBlockCountdown","blocksUntilStart","max","blocksRemaining","hasPoolStarted","blocksToDisplay","DoubleCurrencyLogo","StyledListLogo","ListLogo","useTokensFromMap","tokenMap","includeUserAdded","mapWithoutUrls","newMap","tokenMap_","activeTokensAddresses","useUnsupportedTokenList","activeTokens","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","arrayify","parseBytes32String","tokenContract","tokenContractBytes32","tokenName","NEVER_RELOAD","tokenNameBytes32","symbolBytes32","isBNB","removeSerializedPair","BetPosition","PredictionStatus","HistoryFilter","SnapshotCommand","ProposalType","ProposalState","VotingStateLoadingStatus","Result","numberOrNull","valueNum","transformBetResponse","betResponse","bet","position","BULL","BEAR","claimedAt","claimedBlock","claimedHash","claimedBNB","claimedNetBNB","createdAt","updatedAt","userResponse","totalBets","totalBetsBull","totalBetsBear","totalBNB","totalBNBBull","totalBNBBear","totalBetsClaimed","totalBNBClaimed","winRate","averageBNB","netBNB","transformUserResponse","transformRoundResponse","roundResponse","positionResponse","epoch","failed","startAt","startHash","lockAt","lockBlock","lockHash","lockPrice","lockRoundId","closeAt","closeBlock","closeHash","closePrice","closeRoundId","totalAmount","bullBets","bullAmount","bearBets","bearAmount","bets","getBetHistory","getLedgerData","epochs","ledgerCalls","getClaimStatuses","claimableCalls","claimableResponses","ledgerResponses","claimableResponse","claimable","getPredictionData","staticCalls","currentEpoch","intervalSeconds","minBetAmount","paused","bufferSeconds","PAUSED","LIVE","getRoundsData","makeFutureRoundResponse","startTimestamp","lockTimestamp","closeTimestamp","rewardBaseCalAmount","rewardAmount","oracleCalled","lockOracleId","closeOracleId","makeRoundData","makeLedgerData","ledgers","ledgerResponse","eq","serializePredictionsLedgerResponse","serializePredictionsRoundsResponse","INITIAL","isHistoryPaneOpen","isChartPaneOpen","isFetchingHistory","historyFilter","ALL","lastOraclePrice","claimableStatuses","initializePredictions","marketData","range","roundsResponse","initialRoundData","reduxNodeRound","initializedData","fetchRound","predictionContract","fetchRounds","fetchMarketData","fetchLedgerData","fetchClaimableStatuses","fetchHistory","predictionsSlice","setPredictionStatus","setHistoryPaneState","setChartPaneState","setHistoryFilter","setCurrentEpoch","setLastOraclePrice","markBetHistoryAsCollected","betId","betIndex","newestRound","maxBy","futureRound","futureRounds","campaigns","badge","campaignMap","campaign","achievementSlice","addAchievement","addAchievements","setAchievements","clearAchievements","getProposals","ACTIVE","proposals","getProposal","proposal","getVotes","votes","getVoteVerificationStatuses","votesToVerify","vote","voter","verificationHash","metadata","total","votingPower","headers","statusText","getAllVotes","proposalId","votesPerChunk","resolve","reject","fetchVoteChunk","newSkip","voteChunk","proposalLoadingStatus","voteLoadingStatus","fetchProposals","fetchProposal","fetchVotes","verifyVotes","snapshot","proposalVotes","voting","votingSlice","_inValid","IDLE","updateVersion","currentTimestamp","pairKey","token0Address","token1Address","timestamp","createReducer","lastUpdateVersionTimestamp","tokenAAddress","tokenBAddress","txs","lastCheckedBlockNumber","confirmedTime","otherField","NEW_LIST_STATE","lastInitializedDefaultListOfLists","DEFAULT_LIST_OF_LISTS","DEFAULT_ACTIVE_LIST_URLS","getVersionUpgrade","VersionUpgrade","NONE","addList","u","lastInitializedSet","l","Set","newListOfListsSet","LIQUIDITY_PERCENT","callResults","addMulticallListeners","blocksPerFetch","listeners","callListeners","callKey","toCallKey","removeMulticallListeners","fetchingMulticallResults","fetchingBlockNumber","errorFetchingMulticallResults","updateMulticallResults","PERSISTED_KEYS","configureStore","devTools","reducer","achievements","achievementsReducer","blockReducer","farmsReducer","poolsReducer","predictions","predictionsReducer","profileReducer","teamsReducer","collectibles","collectiblesReducer","votingReducer","lotteryReducer","burn","middleware","getDefaultMiddleware","thunk","save","states","preloadedState","load","bnb","projectLink","isMethodArg","isValidMethodArgs","Array","isArray","xi","INVALID_RESULT","Infinity","useCallsData","serializedCallKeys","c","callKeys","parseCallKey","INVALID_CALL_STATE","syncing","LOADING_CALL_STATE","toCallState","callResult","contractInterface","fragment","latestBlockNumber","callInputs","interface","getFunction","callData","useTokenAllowance","owner","amountToApprove","currentAllowance","pendingApproval","approvalState","UNKNOWN","approve","useExact","MaxUint256","estimatedGas","useApproveCallbackFromTrade","createStyledButton","br","RawButton","Button4","EXPONENTIAL_AT","DECIMAL_PLACES","BSC_BLOCK_TIME","CAKE_PER_BLOCK","BASE_ADD_LIQUIDITY_URL","AUCTION_BIDDERS_TO_FETCH","RECLAIM_AUCTIONS_TO_FETCH","AUCTION_WHITELISTED_BIDDERS_TO_FETCH","sortByListPriority","urlA","urlB","MAX_SAFE_INTEGER","second","tokenInfo","tags","this","EMPTY_LIST","listCache","WeakMap","listToTokenMap","tagId","combineMaps","map1","map2","useCombinedTokenMapFromUrls","currentUrl","assign","DEFAULT_TOKEN_LIST","allActiveListUrls","useInactiveListUrls","useDefaultTokenList","UNSUPPORTED_TOKEN_LIST","fetchPoolsBlockLimits","poolsWithEnd","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","fetchPoolsTotalStaking","nonBnbPools","stakingToken","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","fetchPoolStakingLimit","sousContract","poolLimitPerUser","fetchPoolsStakingLimits","poolsWithStakingLimit","validPools","stakingLimitPromises","validPool","stakingLimits","bnbPools","nonMasterPools","fetchPoolsAllowance","allowances","acc","fetchUserBalances","tokenBalancesRaw","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","masterPoolAmount","fetchUserPendingRewards","pendingRewards","pendingCake","fetchPublicVaultData","sharePrice","estimatedCakeBountyReward","totalPendingCakeHarvest","totalSharesAsBigNumber","sharePriceAsBigNumber","totalCakeInVaultEstimate","totalShares","totalCakeInVault","fetchVaultFees","callFee","withdrawalFee","withdrawalFeePeriod","cakeVaultContract","fetchVaultUser","userContractResponse","lastDepositedTime","lastUserActionTime","cakeVault","fees","fetchPoolsPublicDataAsync","blockLimits","totalStakings","liveData","blockLimit","entry","totalStaking","isPoolEndBlockExceeded","isPoolFinished","stakingTokenAddress","earningTokenAddress","setPoolsPublicData","fetchPoolsStakingLimitsAsync","stakingLimitData","fetchPoolsUserDataAsync","stakingTokenBalances","setPoolsUserData","updateUserAllowance","updatePoolsUserData","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","fetchCakeVaultPublicData","publicVaultInfo","fetchCakeVaultFees","vaultFees","fetchCakeVaultUserData","PoolsSlice","livePoolsData","livePoolData","userPoolData","Updater","callback","leading","savedCallback","tick","useInterval","PATCH","MINOR","MAJOR","waitRandom","min","ms","random","CancelledError","RetryableError","chunk","minBlockNumber","obj","resultsBlockNumber","debouncedListeners","cancellations","listeningKeys","allListeners","keyListeners","previousMin","activeListeningKeys","unserializedOutdatedCallKeys","minDataBlockNumber","outdatedListeningKeys","serializedOutdatedCallKeys","outdatedCallKeys","chunkedCalls","items","maxChunkSize","numChunks","ceil","chunkSize","ix","chunkArray","fn","rejectCancelled","n","minWait","maxWait","completed","promise","cancel","retry","fetchChunk","fetchBlockNumber","firstCallKeyIndex","lastCallKeyIndex","blocksSinceCheck","minutesPending","shouldCheck","getTransactionReceipt","blockHash","transactionHash","transactionIndex","WalletView","_binanceChainListener","defineProperty","bsc","useEagerConnect","isConnectorBinanceChain","isBinanceChainDefined","Reflect","StyledDatePickerPortal","primaryBright","secondary","DatePickerPortal","GlobalStyle","createGlobalStyle","Trading","LP","Bridge","Pledge","Address","CopyAddress","readOnly","ele","Message","RawMessage","WalletInfo","hasLowBnbBalance","cakeBalance","fontWeight","borderColor","TxnIcon","Summary","TxnLink","renderIcon","txn","spin","TransactionRow","WalletTransactions","sortedTransactions","orderBy","minHeight","LOW_BNB_BALANCE","ModalHeader","UIKitModalHeader","Tabs","WalletModal","initialView","WALLET_INFO","view","setView","newIndex","fullWidth","TRANSACTIONS","createHashHistory","Dot","ProfileUserMenuItem","handleClick","WalletUserMenuItem","onPresentWalletModal","fillRule","clipRule","next","cx","cy","r","ry","MenuButton","defaultProps","_style","_path","_extends","arguments","source","prototype","hasOwnProperty","apply","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgLogo","_ref","svgRef","titleId","xmlnsXlink","enableBackground","xmlSpace","gradientUnits","x1","y1","x2","y2","offset","stopColor","ForwardRef","blink","StyledLink","isPushed","togglePush","isAbsoluteUrl","innerLogo","HamburgerClose","Hamburger","SIDEBAR_WIDTH_FULL","rainbowAnimation","LinkLabel","MenuEntry","ViewMode","LinkStatus","LinkLabelMemo","AccordionContent","Accordion","pushNav","initialOpenState","Children","count","MenuLink","otherProps","isHttpLink","Tag","NavLink","Icons","IconModule","PanelBody","isMobile","links","iconElement","calloutClass","itemsMatchIndex","item","MoonIcon","SunIcon","ThemeSwitcher","LangSelector","currentLang","langs","setLang","lang","SettingsEntry","PanelFooter","StyledPanel","showMenu","Panel","Inner","MobileOnlyOverlay","Overlay","LangWrapper","Menu","userMenu","globalMenu","useMatchBreakpoints","isTablet","isSmallerScreen","setIsPushed","setShowMenu","refPrevOffset","pageYOffset","throttledHandleScroll","throttle","currentOffset","isBottomOfPage","clientHeight","innerHeight","homeLink","link","UserMenuItem","hr","button","StyledUserMenu","UserMenu","setTargetRef","tooltipRef","hideTimeout","isHoveringOverTooltip","accountEllipsis","usePopper","modifiers","styles","attributes","showTooltip","evt","hideTooltip","toggleTouch","isTouchingTargetRef","contains","isTouchingTooltipRef","prevOpen","Wallet","onPresentTransactionModal","avatarSrc","profileLink","noProfileLink","showPip","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","nextState","replaceState","reload","Component","PageLoader","EasterEgg","setShow","startFalling","useKonamiCheatCode","onAnimationEnd","useCakeVault","totalSharesAsString","pricePerFullShareAsString","totalCakeInVaultAsString","estimatedCakeBountyRewardAsString","totalPendingCakeHarvestAsString","userSharesAsString","cakeAtLastUserActionAsString","InputWrapper","StyledImage","Image","SearchInput","onChangeCallback","searchText","setSearchText","debouncedOnChange","debounce","ApyLabelContainer","AprRow","tooltipContent","earningsPercentageToDisplay","apyModalLink","plus","onPresentApyModal","StyledCard","ExpandedWrapper","ExpandedFooter","poolContractAddress","cakeVaultContractAddress","isMetaMaskInScope","isManualCakePool","totalStakedTargetRef","totalStakedTooltip","totalStakedTooltipVisible","manualCakeTotalMinusAutoVault","getTotalStakedBalance","ExpandableButtonWrapper","manualTooltipText","autoTooltipText","CakeVaultTokenPairImage","CardHeader","backgroundDisabled","StyledCardHeader","isStaking","isCakePool","useApprovePool","lpContract","requestedApproval","setRequestedApproval","sousChefContract","handleApprove","constants","useVaultApprove","cakeContract","useCheckVaultApprovalStatus","isVaultApproved","setIsVaultApproved","checkApprovalStatus","ApprovalAction","stakingTokenContract","endIcon","NotEnoughTokensModal","cardHeader","StyledButton","PercentageButton","sousStake","sousStakeBnb","useStakePool","isUsingBnb","handleStake","onStake","sousUnstake","sousEmergencyUnstake","emergencyWithdraw","useUnstakePool","enableEmergencyWithdraw","handleUnstake","onUnstake","AnnualRoiContainer","AnnualRoiDisplay","StakeModal","isBnbPool","isRemovingStake","pendingTx","setPendingTx","stakeAmount","setStakeAmount","hasReachedStakeLimit","setHasReachedStakedLimit","percent","setPercent","showRoiCalculator","setShowRoiCalculator","getCalculatedStakingLimit","usdValueStaked","formattedUsdValueStaked","annualRoi","formattedAnnualRoi","getTokenLink","fullDecimalStakeAmount","handleChangePercent","sliderPercent","percentageOfStakingMax","amountToStake","handleConfirmClick","convertedInput","percentage","onValueChanged","valueLabel","step","StakeAction","isStaked","stakedTokenBalance","stakedTokenDollarBalance","onPresentTokenRequired","onPresentStake","onPresentUnstake","reachStakingLimit","harvestPool","harvestPoolBnb","useHarvestPool","handleHarvest","onReward","CollectModal","formattedBalance","fullBalance","earningsDollarValue","isCompoundPool","shouldCompound","setShouldCompound","handleHarvestConfirm","HarvestActions","earningTokenBalance","earningTokenDollarBalance","hasEarnings","onPresentCollect","InlineText","CardActions","harvest","needsApproval","StakeActions","PoolCard","accountHasStakedBalance","ribbon","variantColor","CardFooter","VaultApprovalAction","useWithdrawalFeeTimer","secondsRemaining","setSecondsRemaining","hasUnstakingFee","setHasUnstakingFee","currentSeconds","setCurrentSeconds","secondsRemainingCalc","doesUnstakingFeeApply","timerInterval","prevSeconds","WithdrawalFeeTimer","day","hour","minute","UnstakingFeeCountdownRow","isTableVariant","feeAsDecimal","noFeeToPay","shouldShowTimer","FeeSummary","feeInCake","callOptions","VaultStakeModal","stakingMax","cakePriceBusd","handleWithdrawal","convertedStakeAmount","shareStakeToWithdraw","triggerWithdrawAllThreshold","sharesRemaining","handleDeposit","HasSharesActions","stakedDollarValue","VaultStakeActions","accountHasSharesStaked","CakeVaultCardActions","RecentCakeProfitBalance","cakeToDisplay","dollarValueToDisplay","dateStringToDisplay","RecentCakeProfitCountdownRow","lastActionInMs","StyledCardBody","CardBody","CakeVaultCard","showStakedOnly","isVaultUserDataLoading","RecentCakeProfitRow","VaultCardActions","ViewControls","RadioCom","PoolTabButtons","setStakedOnly","handleSortOptionChange","hasStakeInFinishedPools","viewMode","setViewMode","useRouteMatch","isExact","stakedOnlySwitch","BaseCell","expandAnimation","ChevronDownIcon","toggled","xl","collapseAnimation","PoolControls","FilterContainer","LabelWrapper","PageHeader","Pools","usePools","poolsWithoutAutoVault","numberOfPoolsVisible","setNumberOfPoolsVisible","observerIsSet","setObserverIsSet","loadMoreRef","TABLE","sortOption","setSortOption","chosenPoolsLength","accountHasVaultShares","cakePool","partition","finishedPools","openPools","stakedOnlyFinishedPools","isGreaterThan","stakedOnlyOpenPools","useFetchCakeVault","fetchPoolsPublicData","useFetchPublicPoolsData","IntersectionObserver","entries","isIntersecting","poolsCurrentlyVisible","rootMargin","threshold","observe","chosenPools","showFinishedPools","lowercaseQuery","poolsToSort","sortPools","liveOrFinishedSwitch","SwapWarningTokens","ContainerRow","InputContainer","textDisabled","AddressInputPanel","withoutSpaces","autoCapitalize","ArrowWrapper","clickable","ErrorText","severity","warning","StyledBalanceMaxMini","TruncatedText","SwapCallbackErrorInner","SwapCallbackErrorInnerAlertTriangle","SwapCallbackError","SwapShowAcceptChanges","FormattedPriceImpact","priceImpact","warningSeverity","SwapModalFooterContainer","SwapModalFooter","onConfirm","swapErrorMessage","disabledConfirm","showInverted","setShowInverted","computeTradePriceBreakdown","priceImpactWithoutFee","realizedLPFee","paddingLeft","formatExecutionPrice","TradeType","EXACT_INPUT","SwapModalHeader","showAcceptChanges","onAcceptChanges","priceImpactSeverity","EXACT_OUTPUT","ConfirmSwapModal","originalTrade","confirmationContent","isDefined","useLastTruthy","filterFn","last","setLast","useLast","AdvancedSwapDetailsDropdown","TradePrice","formattedPrice","baseCurrency","quoteCurrency","ImportTokenWarningModal","onCancel","Grouping","Circle","CircleRow","Connector","prevConfirmed","ProgressCircles","steps","SwapCallbackState","useSwapCallArguments","recipientAddressOrName","recipientAddress","swapMethods","Router","swapCallParameters","feeOnTransfer","parameters","WrapType","NOT_APPLICABLE","wrapType","SafemoonWarning","BondlyWarning","Acknowledgement","handleContinueClick","isConfirmed","setIsConfirmed","MessageContainer","SwapWarningModal","swapCurrency","preventClickHandler","preventDefault","querySelectorAll","SWAP_WARNING","SwapWarningTokensConfig","safemoon","component","bondly","Label","Swap","loadedUrlParams","loadedInputCurrency","loadedOutputCurrency","urlLoadedTokens","importTokensNotInDefault","isExpertMode","swapInputError","wethContract","sufficientBalance","WRAP","execute","txReceipt","UNWRAP","useWrapCallback","onWrap","wrapInputError","showWrap","handleTypeInput","handleTypeOutput","tradeToConfirm","setSwapState","userHasSpecifiedInputOutput","noRoute","approveCallback","approvalSubmitted","setApprovalSubmitted","maxAmountInput","atMaxAmountInput","swapCalls","VALID","gasEstimate","gasError","callStatic","callError","reason","estimatedCalls","successfulEstimation","errorCalls","inputSymbol","outputSymbol","withRecipient","useSwapCallback","swapCallback","swapCallbackError","handleSwap","confirmPriceImpactWithoutFee","showApproveFlow","handleConfirmDismiss","handleAcceptChanges","swapWarningCurrency","setSwapWarningCurrency","onPresentSwapWarningModal","shouldShowSwapWarning","isWarningToken","warningTokenConfig","warningTokenData","warningTokenAddress","handleInputSelect","showSwapWarning","handleMaxInput","handleOutputSelect","swapIsUnsupported","onPresentImportTokenWarningModal","onPresentConfirmModal","RedirectToAddLiquidity","OLD_PATH_STRUCTURE","RedirectOldAddLiquidityPathStructure","RedirectDuplicateTokenIds","RedirectOldRemoveLiquidityPathStructure","RedirectPathToSwapOnly","RedirectToSwap","NftImage","img","showConfetti","confetti","resize","particleCount","startVelocity","gravity","spread","origin","NftGiveawayModal","nfts","GlobalCheckClaimStatus","excludeLocations","hasDisplayedModal","claimableNfts","setClaimableNfts","onPresentGiftModal","nftConfigMap","lottie","lucky","baller","isBallerClaimable","isLottieClaimable","isLuckyClaimable","fetchClaimStatus","matchesSomeLocations","Farms","lazy","FarmAuction","Ifos","NotFound","Collectibles","Liquidity","PoolFinder","RemoveLiquidity","Global","exact","strict","iterations","light","dark","ThemeProviderWrapper","Providers","Updaters","Blocklist","ReactDOM","render","StrictMode","getElementById","QuestionWrapper","BASE_FEE","INPUT_FRACTION_AFTER_FEE","currentFee","priceImpactWithoutFeeFraction","numerator","denominator","quotient","pct","maximumAmountIn","minimumAmountOut","LOWER_HEX_REGEX","pcs","PANCAKE","MIXIE","video","webm","mp4","sortOrder","blur"],"mappings":"4HAmCeA,IAhCa,I,iCCH5B,uDAGMC,EAAUC,cAEHC,EAAoB,IAAIC,IAAOC,UAAUC,gBAAgBL,I,mLCGzDM,EAAqB,WAChC,IAAMC,EAAQC,iBAAO,MACfC,EAAWC,cACXC,EAAkBC,cAExBC,qBAAU,WAUR,OATIF,EACFJ,EAAMO,QAAUC,YAAW,sBAAC,4BAAAC,EAAA,sEACAd,IAAkBe,iBADlB,OACpBC,EADoB,OAE1BT,EAASU,YAASD,IAFQ,2CAGzB,KAEHE,cAAcb,EAAMO,SAGf,kBAAMM,cAAcb,EAAMO,YAChC,CAACL,EAAUF,EAAOI,KAGVU,EAAW,WACtB,OAAOC,aAAY,SAACC,GAAD,OAAkBA,EAAMC,W,iCC5B7C,oBAaeC,IAVE,WACf,IAAMC,EAAeC,qBAAWC,KAEhC,QAAqBC,IAAjBH,EACF,MAAM,IAAII,MAAM,4BAGlB,OAAOJ,I,iCCVT,gRAgDO,SAASK,EACdC,EACAC,GAEA,IAAMC,EAA2BC,mBAC/B,yCAAMF,QAAN,IAAMA,OAAN,EAAMA,EAAQG,QAAO,SAACC,GAAD,OAAqD,IAA1BC,YAAS,OAACD,QAAD,IAACA,OAAD,EAACA,EAAGL,mBAA7D,QAAoF,KACpF,CAACC,IAGGM,EAA0BJ,mBAAQ,kBAAMD,EAAgBM,KAAI,SAACC,GAAD,OAAQA,EAAGT,aAAU,CAACE,IAElFQ,EAAWC,YAA8BJ,EAAyBK,IAAiB,YAAa,CAACZ,IAEjGa,EAAsBV,mBAAQ,kBAAMO,EAASI,MAAK,SAACC,GAAD,OAAeA,EAAUC,aAAU,CAACN,IAE5F,MAAO,CACLP,mBACE,kBACEH,GAAWE,EAAgBe,OAAS,EAChCf,EAAgBgB,QAA4D,SAACC,EAAMC,EAAOC,GAAO,IAAD,IACxFC,EAAK,OAAGZ,QAAH,IAAGA,GAAH,UAAGA,EAAWW,UAAd,iBAAG,EAAeE,cAAlB,aAAG,EAAwB,GAChCC,EAASF,EAAQG,IAAKC,OAAOJ,EAAMK,iBAAc9B,EAIvD,OAHI2B,IACFL,EAAKC,EAAMpB,SAAW,IAAI4B,IAAYR,EAAOI,IAExCL,IACN,IACH,KACN,CAACnB,EAASE,EAAiBQ,IAE7BG,GAIG,SAASgB,EACd7B,EACAC,GAEA,OAAOF,EAAqCC,EAASC,GAAQ,GAIxD,SAAS6B,EAAgBC,EAAkBX,GAChD,IAAMY,EAAgBH,EAAiBE,EAAS,CAACX,IACjD,GAAKA,EACL,OAAOY,EAAcZ,EAAMpB,SAGtB,SAASiC,EACdF,EACAG,GAEA,IAAMjC,EAASE,mBACb,yCAAM+B,QAAN,IAAMA,OAAN,EAAMA,EAAY9B,QAAO,SAAC+B,GAAD,OAAiCA,aAAoBC,cAA9E,QAAwF,KACxF,CAACF,IAGGF,EAAgBH,EAAiBE,EAAS9B,GAE1CoC,EA/FD,SAAwBC,GAG7B,IAAMC,EAAoBC,cAEpBC,EAAsBtC,mBAC1B,kBACEmC,EACIA,EACG9B,IAAIF,KACJF,QAAO,SAACpB,GAAD,OAA0B,IAANA,KAC3B0D,OACH,KACN,CAACJ,IAGGK,EAAUC,YACdL,EACA,gBACAE,EAAUjC,KAAI,SAACR,GAAD,MAAa,CAACA,OAG9B,OAAOG,mBACL,kBACEsC,EAAUvB,QAA8C,SAACC,EAAMnB,EAASqB,GAAO,IAAD,IACtEC,EAAK,OAAGqB,QAAH,IAAGA,GAAH,UAAGA,EAAUtB,UAAb,iBAAG,EAAcE,cAAjB,aAAG,EAAuB,GAErC,OADID,IAAOH,EAAKnB,GAAW6C,IAAeC,MAAMrB,IAAKC,OAAOJ,EAAMK,cAC3DR,IACN,MACL,CAACsB,EAAWE,IAkEKI,CADU5C,mBAAQ,yCAAM+B,QAAN,IAAMA,OAAN,EAAMA,EAAYpB,MAAK,SAACqB,GAAD,OAAcA,IAAaa,cAAlD,WAAmE,CAACd,IACzD,CAACH,GAAW,IAE5D,OAAO5B,mBACL,yCACE+B,QADF,IACEA,OADF,EACEA,EAAY1B,KAAI,SAAC2B,GACf,GAAKJ,GAAYI,EACjB,OAAIA,aAAoBC,IAAcJ,EAAcG,EAASnC,SACzDmC,IAAaa,IAAcX,EAAWN,QAA1C,YAJJ,QAMQ,KACR,CAACA,EAASG,EAAYG,EAAYL,IAI/B,SAASiB,EAAmBlB,EAAkBI,GACnD,OAAOF,EAAoBF,EAAS,CAACI,IAAW,GAI3C,SAASe,IACd,IAAQnB,EAAYoB,cAAZpB,QACFqB,EAAYC,cAEZ3C,EAAWmB,EAAgB,OAACE,QAAD,IAACA,SAAWlC,EADtBM,mBAAQ,kBAAMmD,OAAOC,OAAP,OAAcH,QAAd,IAAcA,IAAa,MAAK,CAACA,KAEtE,cAAO1C,QAAP,IAAOA,IAAY,K,iCCnIrB,0KAAO,IAAM8C,EAAoBC,mXAAYC,4BAChCC,EAAuBF,mXAAYG,+BACnCC,EAAoBJ,mXAAYK,4BAChCC,EAAsBN,mXAAYO,8BAClCC,EAAoBR,mXAAYS,4BAChCC,EAAY,UAAMF,EAAN,YACI,UAAMA,EAAN,iB,iCCH7B,0SAYaG,EAAmB,WAA6B,IAA5BC,EAA2B,wDACpD5F,EAAWC,cACjB,EAAwB4F,cAAhBC,EAAR,EAAQA,YACR,EAAoBpB,cAAZpB,EAAR,EAAQA,QAERlD,qBAAU,WACR,IACM2F,GADeH,EAAiBI,IAAcC,KAC1BlE,KAAI,SAACmE,GAAD,OAAiBA,EAAYC,OAE3DnG,EAASoG,YAA0BL,IAE/BzC,GACFtD,EAASqG,YAAuB,CAAE/C,UAASyC,YAE5C,CAACH,EAAgB5F,EAAU8F,EAAaxC,KAQhCgD,EAAsB,WACjC,IAAMtG,EAAWC,cACTsG,EAAgBV,cAAhBU,YAERnG,qBAAU,WACRJ,EAASoG,YAA0B,CAAC,IAAK,SACxC,CAACpG,EAAUuG,KAGHC,EAAW,WAEtB,OADc3F,aAAY,SAACC,GAAD,OAAkBA,EAAM2F,UAIvCC,EAAiB,SAACP,GAE7B,OADatF,aAAY,SAACC,GAAD,OAAkBA,EAAM2F,MAAME,KAAKC,MAAK,SAACC,GAAD,OAAOA,EAAEV,MAAQA,SASvEW,EAAc,SAACX,GAC1B,IAAMY,EAAOL,EAAeP,GAE5B,MAAO,CACLa,UAAWD,EAAKE,SAAW,IAAIC,IAAUH,EAAKE,SAASD,WAAaG,IACpEC,aAAcL,EAAKE,SAAW,IAAIC,IAAUH,EAAKE,SAASG,cAAgBD,IAC1EE,cAAeN,EAAKE,SAAW,IAAIC,IAAUH,EAAKE,SAASI,eAAiBF,IAC5EG,SAAUP,EAAKE,SAAW,IAAIC,IAAUH,EAAKE,SAASK,UAAYH,MAUzDI,EAAkB,SAACC,GAC9B,IAvBkCC,EAuB5BV,GAvB4BU,EAuBDD,EAtBpB3G,aAAY,SAACC,GAAD,OAAkBA,EAAM2F,MAAME,KAAKC,MAAK,SAACC,GAAD,OAAOA,EAAEY,WAAaA,SAuBjFC,EAP2B,SAACvB,GAClC,IAAMY,EAAOL,EAAeP,GAC5B,OAAOY,GAAQ,IAAIG,IAAUH,EAAKpE,MAAMgF,WAKZC,CAAoBb,EAAKZ,KACjD0B,EAAeV,IAEnB,GAAIJ,EAAKe,eAAiBf,EAAKgB,oBAAqB,CAElD,IAEMC,EAFyBN,EAAoBO,MAAMlB,EAAKmB,kBAEDD,MAAM,GAE7DE,EAAgBC,YAAiB,IAAIlB,IAAUH,EAAKe,gBAC1DD,EAAeG,EAA8BK,IAAIF,GAGnD,OAAON,GAUIS,EAAmB,WAC9B,IAEMC,EAFc7B,EAAe,GAEO/D,MAAMgF,UAMhD,OAJsBjG,mBAAQ,WAC5B,OAAO,IAAIwF,IAAUqB,KACpB,CAACA,M,kECpGSC,IANE,WACf,MAA8BC,cAA9B,mBAAOC,EAAP,KAAeC,EAAf,KAEA,MAAO,CAAED,SAAQE,MADH1H,qBAAW2H,KACDF,iB,wKCJpBG,EAAOC,YAAOC,IAAPD,CAAH,0KAMC,gBAAGE,EAAH,EAAGA,MAAH,cAAeA,QAAf,IAAeA,IAAS,UAGtB,qBAAGC,WACJ,qBAAGC,UACI,qBAAGC,gBACA,qBAAGR,MAAkBS,OAAOC,cAEnCR,MAER,IAAMS,EAAYR,YAAOD,EAAPC,CAAH,gFACA,qBAAGH,MAAkBS,OAAOC,cAC5B,qBAAGV,MAAkBS,OAAOG,iBAGrCC,EAAgBV,YAAOD,EAAPC,CAAH,gFACJ,qBAAGH,MAAkBS,OAAOK,cAC5B,qBAAGd,MAAkBS,OAAOC,cAGrCK,EAAWZ,YAAOD,EAAPC,CAAH,sDACC,qBAAGH,MAAkBS,OAAOO,a,iCC9BlD,wIACA,IAAMC,EAA4B,CAAC,EAAG,EAAG,GAAI,IAAK,MAWrCC,EAAuB,SAAC,GAY9B,IAXLC,EAWI,EAXJA,eACAC,EAUI,EAVJA,IACAC,EASI,EATJA,kBASI,IARJC,yBAQI,MARgB,EAQhB,MAPJC,sBAOI,MAPa,EAOb,EAEEC,EAAkB,IAAMF,EAExBG,EAAeL,EAAM,IAKrBM,EADmBC,KAAKC,MAAMP,EAAoB,KAAQ,EACjB,EAAI,EAEnD,OAAOJ,EAA0B9H,KAAI,SAAC0I,GACpC,IAAMC,EAAsBD,EAAO,IAE7BE,EAAYZ,EAAiBE,EAC/BW,EAAiBD,EAAYN,GAAgBI,EAAO,KAChC,IAApBL,IAIFQ,EAFsBD,EAAS,SAAI,EAAIN,EAAeD,EAAqBA,EAAkBM,GAE5DC,EAC7BR,IAGFS,GAD8BA,GADET,EAAiB,OAKrD,OAAOU,WAAWD,EAAeE,QAAQR,QAUhCS,EAA0B,SACrCC,EACAhB,EACAiB,GAEI,IADJd,EACG,uDADc,EAEjB,OAAON,EAA0B9H,KAAI,SAAC0I,GACpC,IAAMS,EAAeC,EAAOnB,EAAKiB,EAAsBR,EAAMN,GAG7D,OAAOU,YAAYG,EAAWE,GAAcJ,QAAQ,QAY3CK,EAAS,SAACnB,GAAwE,IAA3DE,EAA0D,uDAAtC,EAAGO,EAAmC,uDAA5B,IAAKN,EAAuB,uDAAN,EAChFO,EAAsBD,EAAO,IAC7BJ,EAAeL,EAAM,IACrBI,EAAkB,IAAMF,EAC1BgB,EAAgBlB,EAAM,IAAOU,EAIjC,GAHIN,EAAkB,IACpBc,EAAe,SAAC,EAAIb,EAAeD,EAAqBA,EAAkBM,GAAuB,GAE/FP,EAAgB,CAClB,IAAMiB,EAA0BjB,EAAiB,IAC3CkB,EAAwBH,EAAeE,EAC7CF,GAAgBG,EAElB,OAAOH,GAGII,EAAS,SAAC,GAAwF,IAAtFC,EAAqF,EAArFA,aAAcC,EAAuE,EAAvEA,eACrC,OAAuB,IAAnBA,EACK,EAEWD,EAAeC,EAAkB,M,iCCvGvD,oBAQe3F,IALI,WACjB,MAAuB3E,qBAAWuK,KAClC,MAAO,CAAElF,YADT,EAAQmF,KACoB5F,YAD5B,EAAc6F,Q,kWCQVC,EAAkBC,cAElBC,EAAoC,SAACC,EAAUC,GACnD,IACEC,EAaEF,EAbFE,OACAC,EAYEH,EAZFG,UACAC,EAWEJ,EAXFI,QACAC,EAUEL,EAVFK,kBACAC,EASEN,EATFM,gBACAC,EAQEP,EARFO,YACAC,EAOER,EAPFQ,cACAC,EAMET,EANFS,aACAC,EAKEV,EALFU,sBACAC,EAIEX,EAJFW,YACAC,EAGEZ,EAHFY,eACAC,EAEEb,EAFFa,uBACAC,EACEd,EADFc,iBAGIC,EAAYjI,OAAOkI,KAAKC,KAAef,GACvCgB,EAA2BN,EAAe5K,KAAI,SAACmL,GAAD,OAAmBC,YAA4BD,MAC7FE,EAAmCR,EAAuB7K,KAAI,SAACsL,GAAD,OAClEF,YAA4BE,MAExBC,EAA6BT,EAAiB9K,KAAI,SAACwL,GAAD,OAAYJ,YAA4BI,MAEhG,MAAO,CACLC,WAAW,EACXxB,YACAC,OAAQe,IAAcF,GACtBZ,UAAS,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAWhJ,WACtBiJ,QAAO,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAASjJ,WAClBkJ,kBAAmBe,YAA4Bf,GAC/CC,gBAAe,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAiBnJ,WAClCoJ,YAAW,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAapJ,WAC1BqJ,cAAa,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAerJ,WAC9BsJ,aAAY,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAActJ,WAC5BuJ,sBAAuBU,YAA4BV,GACnDC,cACAC,eAAgBM,EAChBL,uBAAwBQ,EACxBP,iBAAkBS,IAIhBG,EAAkC,SAACzB,GACvC,MAAO,CACLwB,WAAW,EACXxB,YACAC,OAAQe,IAAcU,QACtBxB,UAAW,GACXC,QAAS,GACTC,kBAAmB,GACnBC,gBAAiB,GACjBC,YAAa,GACbC,cAAe,GACfC,aAAc,GACdC,sBAAuB,GACvBC,YAAa,KACbC,eAAgB,GAChBC,uBAAwB,GACxBC,iBAAkB,KAITc,EAAY,uCAAG,WAAO3B,GAAP,eAAAzL,EAAA,+EAEEqL,EAAgBgC,YAAY5B,GAF9B,cAElB6B,EAFkB,yBAGjB/B,EAAkC+B,EAAa7B,IAH9B,yDAKjByB,EAAgCzB,IALf,yDAAH,sDASZ8B,EAAsB,uCAAG,WAAOC,GAAP,mBAAAxN,EAAA,6DAC9ByN,EAAQD,EAAWhM,KAAI,SAACkM,GAAD,MAAS,CACpCC,KAAM,cACN3M,QAAS4M,cACTC,OAAQ,CAACH,OAJyB,kBAOPI,YAAYC,EAAcN,EAAO,CAAEO,gBAAgB,IAP5C,cAO5BC,EAP4B,OAQ5BC,EAAqBD,EAAazM,KAAI,SAAC2M,EAAKC,GAAN,OAC1C7C,EAAkC4C,EAAI,GAAIX,EAAWY,OATrB,kBAW3BF,GAX2B,uCAalCG,QAAQC,MAAR,MAbkC,kBAc3Bb,EAAMjM,KAAI,SAAC+M,EAAMH,GAAP,OAAiBlB,EAAgCM,EAAWY,QAd3C,yDAAH,sDAkBtBI,EAA8B,uCAAG,wCAAAxO,EAAA,sEAEpCyN,EAAQ,CAAC,mBAAoB,iCAAiCjM,KAAI,SAACiN,GAAD,MAAa,CACnFzN,QAAS4M,cACTD,KAAMc,MAJkC,SAM2BX,YACnEC,EACAN,GARwC,gEAMlCiB,EANkC,2BAMdC,EANc,uBAWnC,CACLD,iBAAkBA,EAAmBA,EAAiB/L,WAAa,KACnEgM,8BAA+BA,EAAgCA,EAA8BhM,WAAa,OAblE,2DAgBnC,CACL+L,iBAAkB,KAClBC,8BAA+B,OAlBS,0DAAH,qDAuB9BC,EAAmB,SAACF,GAG/B,IAFA,IAAMG,EAAiBC,SAASJ,EAAkB,IAC5CK,EAAW,GACR1M,EAAI,EAAGA,EAAI2M,IAAgC3M,IAClD0M,EAASE,KAAKJ,EAAiBxM,GAEjC,OAAO0M,EAASvN,KAAI,SAAC0N,GAAD,OAAaA,EAAQvM,eAG9BwM,EAA4B,SACvC7B,GAEA,IACqB8B,EAGjB9B,EAHFzB,kBACiBwD,EAEf/B,EAFFxB,gBACuBwD,EACrBhC,EADFpB,sBAGIJ,EAAkB3K,mBAAQ,WAC9B,OAAO,IAAIwF,IAAU0I,KACpB,CAACA,IAEExD,EAAoB1K,mBAAQ,WAChC,OAAO,IAAIwF,IAAUyI,KACpB,CAACA,IAEElD,EAAwB/K,mBAAQ,WACpC,OAAO,IAAIwF,IAAU2I,KACpB,CAACA,IAEJ,MAAO,CACLrC,UAAWK,EAAYL,UACvBxB,UAAW6B,EAAY7B,UACvB8D,YAAajC,EAAYiC,YACzB7D,OAAQ4B,EAAY5B,OACpBC,UAAW2B,EAAY3B,UACvBC,QAAS0B,EAAY1B,QACrBC,oBACAC,kBACAC,YAAauB,EAAYvB,YACzBC,cAAesB,EAAYtB,cAC3BC,aAAcqB,EAAYrB,aAC1BC,wBACAC,YAAamB,EAAYnB,YACzBC,eAAgBkB,EAAYlB,eAC5BC,uBAAwBiB,EAAYjB,uBACpCC,iBAAkBgB,EAAYhB,mBAIrBkD,EAAsB,SAACC,GAElC,OADuBA,EAAQrO,QAAO,SAACsO,GAAD,OAAYA,EAAOhE,UACnCzJ,OAAS,I,iCCnLjC,4BAce0N,IAPK,WAClB,IAEMC,EADQC,IAAMC,WACEC,KAAKC,UAAYC,IAAeC,QACtD,MAHgBzL,SAGG0L,IAAQC,QAAQzN,WAAaiN,EAAUK,IAAeI,U,iCCT3E,sGAAO,IAEMC,EAAe,CAAEC,OAAQ,QAASC,SAAU,UAAWC,KAAM,MA2B7DC,EAAY,CAGvB,QAASJ,EAWT,QA9B0B,CAAEC,OAAQ,QAASC,SAAU,qBAAOC,KAAM,MA+BpE,QA9B0B,CAAEF,OAAQ,QAASC,SAAU,qBAAOC,KAAM,MAoCpE,QA9B0B,CAAEF,OAAQ,QAASC,SAAU,6CAAWC,KAAM,MAoCxE,QA9B4B,CAAEF,OAAQ,QAASC,SAAU,2BAAQC,KAAM,UAkC5DE,EAAerM,OAAOC,OAAOmM,I,qCC3D9BE,E,6FAAAA,K,oBAAAA,E,8BAAAA,E,WAAAA,M,KCUZ,I,QASeC,EATc,CAC3B,CACEC,MAAO,WACPC,KAAMC,KACNC,YAAaL,EAAeM,SAC5BC,SAAU,IAKDC,EAA2B,gBAC3BC,EAAwB,S,OCZ/BC,EAAe9I,YAAO+I,KAAQC,MAAM,CAAE9I,MAAO,OAAQ+I,QAAS,OAAQC,GAAI,QAA3DlJ,CAAH,2LA+CHmJ,EA5BqB,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UAClDhB,EAAsBe,EAAtBf,MAAaiB,EAASF,EAAfd,KAEf,OACE,eAACO,EAAD,CACEG,QAAQ,WACRO,QAAS,WACP,IAAMC,EAAQ,mBAAmBC,KAAKC,UAAUC,aAAeC,OAAOC,SAG3C,iBAAvBT,EAAaf,OAA4BmB,EAC3CL,EAAMhB,EAAe2B,eAErBX,EAAMC,EAAaZ,aAGrBuB,aAAaC,QAAQpB,EAAuBQ,EAAaf,OACzD0B,aAAaC,QAAQrB,EAA0BS,EAAaZ,aAC5Da,KAEFpE,GAAE,yBAAoBoD,EAAM4B,qBAhB9B,UAkBE,cAACX,EAAD,CAAMrJ,MAAM,OAAOiK,GAAG,QACtB,cAAC,KAAD,CAAMC,SAAS,OAAf,SAAuB9B,QC7BvB+B,EAAgBrK,YAAOC,IAAPD,CAAH,6DACU,qBAAGH,MAAkBS,OAAOK,cA0D1C2J,EA7BuB,SAAC,GAAyD,IAAvDlB,EAAsD,EAAtDA,MAAsD,IAA/CE,iBAA+C,MAAnC,kBAAM,MAA6B,MAAvBiB,oBAAuB,MAAR,EAAQ,EAC7F,EAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KACM5K,GADN,KACcJ,eACRiL,EAvBmB,SAACrB,GAC1B,IAAMsB,EAAsBX,aAAaY,QAAQ/B,GAC3C6B,EAAerB,EAAanO,MAAK,SAAC1D,EAAWqT,GAAZ,OAA0BrT,EAAEmR,SAAWkC,EAAElC,YAEhF,IAAKgC,EACH,OAAOD,EAGT,IAAMI,EAAkBJ,EAAa7M,MAAK,SAACkN,GAAD,OAAwBA,EAAmBzC,QAAUqC,KAE/F,OAAKG,EAIC,CACJA,GADF,mBAEKJ,EAAa9R,QAAO,SAACmS,GAAD,OAAwBA,EAAmBzC,QAAUqC,OALrED,EAYYM,CAAmBC,GAClCC,EAAoBT,EAAWC,EAAeA,EAAaS,MAAM,EAAGZ,GAE1E,OACE,eAAC,KAAD,CAAgBa,SAAS,QAAQC,MAAO,CAAEhL,aAAc,GAAxD,UACE,eAAC,KAAD,CAAaE,WAAY+K,YAAc,6BAAdA,CAA4CzL,GAArE,UACE,cAAC,KAAD,UACE,cAAC,IAAD,+BAEF,cAAC,KAAD,CAAkByJ,UAAWA,OAE/B,cAAC,KAAD,CAAWpJ,MAAO,CAAC,QAAS,KAAM,SAAlC,SACE,cAACmK,EAAD,CAAenB,GAAG,OAAOqC,UAAU,QAAQC,UAAU,OAArD,SACE,cAAC,IAAD,CAAMC,oBAAoB,UAA1B,SACGP,EAAkBlS,KAAI,SAAC0S,GAAD,OACrB,cAAC,IAAD,UACE,cAAC,EAAD,CAAYrC,aAAcqC,EAAQtC,MAAOA,EAAOE,UAAWA,KADnDoC,EAAOpD,oB,gCCjEzBqD,EAAc3L,YAAO4L,MAAM5C,MAAM,CAAE6C,KAAM,UAA3B7L,CAAH,4GAIN,qBAAGH,MAAkBS,OAAOwL,WAGjCC,EAAU/L,IAAOV,IAAV,wNACA,qBAAG0M,mBAA+C,QAAU,UAMnD,qBAAGnM,MAAkBS,OAAO2L,YACvC,qBAAGpM,MAAkBS,OAAO4L,oBA6CxBC,EAxC0B,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,OAAQC,EAAyB,EAAzBA,SAAaC,EAAY,iBAC3E,EAAoD9B,oBAAS,GAA7D,mBAAOwB,EAAP,KAA2BO,EAA3B,KAWA,SAASC,IACPD,GAAsB,GACtBE,YAAW,WACTF,GAAsB,KACrB,KAGL,OACE,eAACZ,EAAD,yBACEe,OAAK,EACLC,MAAI,EACJnD,QAAS,WACHG,UAAUiD,WAAajD,UAAUkD,YACnClD,UAAUiD,UAAUE,UAAUV,GAAQW,MAAK,kBAAMP,OACxCQ,SAASC,sBAAsB,WAvBb,SAACC,GAClC,IAAMC,EAAKH,SAASI,cAAc,YAClCD,EAAGrT,MAAQoT,EACXF,SAASK,KAAKC,YAAYH,GAC1BA,EAAGI,SACHP,SAASQ,YAAY,QACrBR,SAASK,KAAKI,YAAYN,GAkBpBO,CAA2BtB,GAC3BI,OAGAF,GAXN,cAaGD,EACD,cAAC,IAAD,CAAUnM,MAAM,OAAOyN,MAAM,UAAUC,GAAG,QAC1C,cAAC7B,EAAD,CAASC,mBAAoBA,EAA7B,yBCrBS6B,EA/BuB,SAAC,GAAD,IAAGtT,EAAH,EAAGA,QAASuT,EAAZ,EAAYA,OAAZ,IAAoBxE,iBAApB,MAAgC,kBAAM,MAAtC,SACpC,eAAC,KAAD,CAAOhB,MAAM,cAAcgB,UAAWA,EAAtC,UACE,cAAC,KAAD,CACEc,SAAS,OACTuC,MAAI,EACJtB,MAAO,CAAE0C,WAAY,SAAUC,SAAU,SAAUC,aAAc,WAAYC,aAAc,OAH7F,SAKG3T,IAEH,eAAC,IAAD,CAAM4P,GAAG,OAAT,UACE,cAAC,IAAD,CAAcuC,OAAK,EAACyB,KAAI,4CAAuC5T,GAAW6T,GAAG,OAA7E,6BAGA,cAAC,EAAD,CAAiBhC,OAAQ7R,EAAzB,6BAEF,cAAC,IAAD,CAAM8T,eAAe,SAArB,SACE,cAAC,IAAD,CACEC,MAAM,KACNrF,QAAQ,YACRO,QAAS,WACPsE,IACAjE,OAAOG,aAAauE,WAAW3F,GAC/BU,KANJ,0BCVSkF,EANQ,SAACpF,EAAc0E,EAAoBvT,GACxD,MAAgCkU,aAAS,cAAC,EAAD,CAAcrF,MAAOA,KAAvDsF,EAAP,oBACA,EAAgCD,aAAS,cAAC,EAAD,CAAclU,QAASA,GAAW,GAAIuT,OAAQA,KACvF,MAAO,CAAEY,wBAAuBC,sBADhC,sBCKaC,IAZa,SAACtC,GAC3B,IAAQzT,EAAMgW,cAANhW,EACR,EAA0BiW,cAAlB1F,EAAR,EAAQA,MAAO0E,EAAf,EAAeA,OACPY,EAA0BF,EAAepF,EAAO0E,GAAhDY,sBAER,OACE,cAAC3F,EAAA,EAAD,yBAAQS,QAASkF,EAAuBK,UAAU,eAAkBzC,GAApE,aACGzT,EAAE,uB,sWCMF,SAASmW,IACd,OAAOlX,aAAwC,SAACC,GAAD,OAAWA,EAAMkX,QAG3D,SAASC,IAMd,IAAMjY,EAAWkY,cACXC,EAAsBC,uBAC1B,SAACC,EAAc3U,GACb1D,EACEsY,YAAe,CACbD,QACAE,WAAY7U,aAAoBC,IAAQD,EAASnC,QAAUmC,IAAaa,IAAQ,KAAO,QAI7F,CAACvE,IAqBH,MAAO,CACLwY,eAnBqBJ,uBAAY,WACjCpY,EAASyY,iBACR,CAACzY,IAkBFmY,sBACAO,YAjBkBN,uBAClB,SAACC,EAAcM,GACb3Y,EAAS4Y,YAAU,CAAEP,QAAOM,kBAE9B,CAAC3Y,IAcD6Y,kBAXwBT,uBACxB,SAACU,GACC9Y,EAAS+Y,YAAa,CAAED,iBAE1B,CAAC9Y,KAYE,SAASgZ,EAAenW,EAAgBa,GAC7C,GAAKb,GAAUa,EAGf,IACE,IAAMuV,EAAmBC,qBAAWrW,EAAOa,EAASyV,UAAUjW,WAC9D,GAAyB,MAArB+V,EACF,OAAOvV,aAAoBC,IACvB,IAAIR,IAAYO,EAAUV,IAAKC,OAAOgW,IACtC7U,IAAeC,MAAMrB,IAAKC,OAAOgW,IAEvC,MAAOpK,GAEPD,QAAQwK,MAAR,yCAAgDvW,EAAhD,KAA0DgM,IAM9D,IAAMwK,EAAoC,CACxC,6CACA,6CACA,8CAQF,SAASC,EAAgBC,EAAcC,GACrC,OACED,EAAME,MAAMC,KAAKrX,MAAK,SAACM,GAAD,OAAWA,EAAMpB,UAAYiY,MACnDD,EAAME,MAAME,MAAMtX,MAAK,SAACuX,GAAD,OAAUA,EAAKC,eAAetY,UAAYiY,KAK9D,SAASM,IAMb,IAAD,QAwCIC,EAKe,EAIwC,EAhDnDzW,EAAY0W,cAAZ1W,QACA1B,EAAMgW,cAANhW,EAER,EAMImW,IALFkC,EADF,EACEA,iBACAtB,EAFF,EAEEA,WAC6BuB,EAH/B,EAGGC,IAAMC,OAAU7B,WACa8B,EAJhC,EAIGF,IAAMG,QAAW/B,WAClBO,EALF,EAKEA,UAGIyB,EAAgBC,YAAYN,GAC5BO,EAAiBD,YAAYH,GAC7BK,EAAkBC,YAAM,OAAC7B,QAAD,IAACA,SAAa1X,GACtCwZ,EAAiB,UAAkB,OAAd9B,EAAqBxV,EAAUoX,EAAgBnZ,eAAnD,QAA+D,KAEhFsZ,EAAwBrX,YAAmB,OAACF,QAAD,IAACA,SAAWlC,EAAW,QACtEmZ,QADsE,IACtEA,SAAiBnZ,EADqD,OAEtEqZ,QAFsE,IAEtEA,SAAkBrZ,IAGd0Z,EAAqBb,IAAqBE,IAAMC,MAChDW,EAAe/B,EAAeL,EAAD,UAAcmC,EAAYP,EAAgBE,SAA1C,aAA6DrZ,GAE1F4Z,EAAmBC,YAAgBH,EAAYC,OAAe3Z,EAA5B,OAAuCqZ,QAAvC,IAAuCA,SAAkBrZ,GAC3F8Z,EAAoBC,YAAgB,OAACZ,QAAD,IAACA,SAAiBnZ,EAAY0Z,OAA2B1Z,EAAf2Z,GAE9EK,EAAUN,EAAYE,EAAmBE,EAEzCG,GAAgB,mBACnBlB,IAAMC,MAAQS,EAAsB,IADjB,cAEnBV,IAAMG,OAASO,EAAsB,IAFlB,GAKhBpX,GAA2C,mBAC9C0W,IAAMC,MADwC,OAChCG,QADgC,IAChCA,SAAiBnZ,GADe,cAE9C+Y,IAAMG,OAFwC,OAE/BG,QAF+B,IAE/BA,SAAkBrZ,GAFa,IAM5CkC,IACHyW,EAAanY,EAAE,mBAGZmZ,KACHhB,EAAU,UAAGA,SAAH,QAAiBnY,EAAE,oBAG1B6B,EAAW0W,IAAMC,QAAW3W,EAAW0W,IAAMG,UAChDP,EAAU,UAAGA,SAAH,QAAiBnY,EAAE,mBAG/B,IACyB,EADnB0Z,EAAczZ,YAAU+Y,GAC9B,GAAKA,GAAOU,GAEL,IAC6C,IAAlDjC,EAAwBkC,QAAQD,IAC/BN,GAAoB1B,EAAgB0B,EAAkBM,IACtDJ,GAAqB5B,EAAgB4B,EAAmBI,GACzD,CAAC,IAAD,EACAvB,EAAU,UAAGA,SAAH,QAAiBnY,EAAE,2BAN7BmY,EAAU,UAAGA,SAAH,QAAiBnY,EAAE,qBAS/B,MAA0B4Z,cAAnBC,EAAP,oBAEMC,EAA0BN,GAAWK,GAAmBE,YAA+BP,EAASK,GAGtG,EAA8B,CAC5BJ,EAAiBlB,IAAMC,OACvBsB,EAA0BA,EAAwBvB,IAAMC,OAAS,MAF5DwB,EAAP,KAAkBC,EAAlB,KASA,OAJID,GAAaC,GAAYD,EAAUE,SAASD,KAC9C9B,EAAanY,EAAE,gCAAiC,CAAE4F,OAAQqU,EAASnY,SAAS8D,UAGvE,CACL/D,aACA4X,mBACAN,eACAK,QAAO,OAAEA,QAAF,IAAEA,SAAWha,EACpB2Y,cAIJ,SAASgC,EAA8BC,GACrC,GAAwB,kBAAbA,EAAuB,CAChC,IAAMC,EAAQpa,YAAUma,GACxB,GAAIC,EAAO,OAAOA,EAClB,GAA+B,OAA3BD,EAASE,cAAwB,MAAO,KAC5C,IAAc,IAAVD,EAAiB,MAAO,KAE9B,cAAO,UAAQ,GAYjB,IAAME,EAAiB,qFACjBC,EAAgB,sBAUf,SAASC,EAA2BC,GAAgC,IAAD,EACpE/B,EAAgBwB,EAA8BO,EAAS/B,eACvDE,EAAiBsB,EAA8BO,EAAS7B,gBACxDF,IAAkBE,IACmB,kBAA5B6B,EAAS7B,eAClBF,EAAgB,GAEhBE,EAAiB,IAIrB,IA/BoCuB,EA+B9BlD,EApBR,SAA4BA,GAC1B,MAAyB,kBAAdA,EAA+B,KAC1BjX,YAAUiX,KAEtBqD,EAAe1J,KAAKqG,IACpBsD,EAAc3J,KAAKqG,GADoBA,EAEpC,MAcWyD,CAAmBD,EAASxD,WAE9C,OAAO,EAAP,iBACGqB,IAAMC,MAAQ,CACb7B,WAAYgC,IAFhB,cAIGJ,IAAMG,OAAS,CACd/B,WAAYkC,IALhB,2BA/B2B,kBAFSuB,EAwCOM,EAASE,cAtCZC,MAAM5R,WAAWmR,IAAwB,GAAXA,GA+BtE,iCA5BF,SAA2CA,GACzC,MAA2B,kBAAbA,GAAoD,WAA3BA,EAASU,cAA6BvC,IAAMG,OAASH,IAAMC,MAmC9EuC,CAAkCL,EAASM,aAR/D,0BASE9D,GATF,EAcK,SAAS+D,IAGd,IAAQC,EAAY9C,cAAZ8C,QACF9c,EAAWkY,cACXoE,EClQO,WACb,IAAQS,EAAWC,cAAXD,OACR,OAAOrb,mBACL,kBAAOqb,GAAUA,EAAOva,OAAS,EAAIya,gBAAMF,EAAQ,CAAEG,aAAa,EAAOC,mBAAmB,IAAU,KACtG,CAACJ,ID8PcK,GACjB,EAA4B7J,qBAA5B,mBAAOzQ,EAAP,KAAeua,EAAf,KAsBA,OAlBAjd,qBAAU,WACR,GAAK0c,EAAL,CACA,IAAMQ,EAASjB,EAA2BC,GAE1Ctc,EACEud,YAAiB,CACf5E,WAAY2E,EAAO3E,WACnBN,MAAOiF,EAAOrD,iBACdC,gBAAiBoD,EAAOnD,IAAMC,OAAO7B,WACrC8B,iBAAkBiD,EAAOnD,IAAMG,QAAQ/B,WACvCO,UAAW,QAIfuE,EAAU,CAAEnD,gBAAiBoD,EAAOnD,IAAMC,OAAO7B,WAAY8B,iBAAkBiD,EAAOnD,IAAMG,QAAQ/B,gBAEnG,CAACvY,EAAU8c,IAEPha,I,iCE7RT,oJAca0a,EAAiBC,YAO3B,+BACUC,EAAuBD,YAAmC,qCAC1DE,EAAsBF,YAIhC,oCACUG,EAAqBH,YAI/B,oC,iCC/BH,0IAQO,SAASI,IAQd,MAA6B7D,cAArB8C,EAAR,EAAQA,QAASxZ,EAAjB,EAAiBA,QACXtD,EAAWkY,cAEjB,OAAOE,uBACL,SACErM,GAMI,IAAD,yDAD4G,GAH7G+R,EAIC,EAJDA,QACAC,EAGC,EAHDA,SACAC,EAEC,EAFDA,MAGF,GAAK1a,GACAwZ,EAAL,CAEA,IAAQmB,EAASlS,EAATkS,KACR,IAAKA,EACH,MAAM5c,MAAM,8BAEdrB,EAASwd,YAAe,CAAES,OAAMC,KAAM5a,EAASwZ,UAASiB,WAAUD,UAASE,cAE7E,CAAChe,EAAU8c,EAASxZ,IAKjB,SAAS6a,IAAgE,IAAD,EACrErB,EAAY9C,cAAZ8C,QAEFhc,EAAQD,aAAgD,SAACud,GAAD,OAAOA,EAAEC,gBAEvE,OAAOvB,GAAO,UAAGhc,EAAMgc,UAAT,QAA0B,GAoBnC,SAASwB,EAAsBC,EAAkCC,GACtE,IAAMC,EAAkBN,IACxB,OAAOzc,mBACL,iBAC0B,kBAAjB6c,GACY,kBAAZC,GACP3Z,OAAOkI,KAAK0R,GAAiBpc,MAAK,SAAC4b,GACjC,IAAMS,EAAKD,EAAgBR,GAC3B,IAAKS,EAAI,OAAO,EAChB,GAAIA,EAAGC,QACL,OAAO,EAET,IAAQZ,EAAaW,EAAbX,SACR,QAAKA,IACEA,EAASS,UAAYA,GAAWT,EAASQ,eAAiBA,GAnBlE,SAA6BG,GAClC,OAAO,IAAIE,MAAOC,UAAYH,EAAGI,UAAY,MAkB0CC,CAAoBL,SAEzG,CAACD,EAAiBD,EAASD,M,oMC9DhBS,EAnBsB,G,iECmB/BC,EAAS,uCAAG,WAAOlY,GAAP,6DAAAxG,EAAA,6DACR4F,EAAwCY,EAAxCZ,IAAK+Y,EAAmCnY,EAAnCmY,YAAavc,EAAsBoE,EAAtBpE,MAAOwc,EAAepY,EAAfoY,WAC3BC,EAAYC,YAAWH,GACvBlR,EAAQ,CAEZ,CACEzM,QAAS8d,YAAW1c,EAAMpB,SAC1B2M,KAAM,YACNE,OAAQ,CAACgR,IAGX,CACE7d,QAAS8d,YAAWF,EAAW5d,SAC/B2M,KAAM,YACNE,OAAQ,CAACgR,IAGX,CACE7d,QAAS6d,EACTlR,KAAM,YACNE,OAAQ,CAACkR,gBAGX,CACE/d,QAAS6d,EACTlR,KAAM,eAGR,CACE3M,QAAS8d,YAAW1c,EAAMpB,SAC1B2M,KAAM,YAGR,CACE3M,QAAS8d,YAAWF,EAAW5d,SAC/B2M,KAAM,aAnCM,SAwCRqR,YAAUC,EAAOxR,GAxCT,0CAuCTyR,EAvCS,KAuCOC,EAvCP,KAuC4BC,EAvC5B,KAuC8C7X,EAvC9C,KAuC6D8X,EAvC7D,KAuC4EC,EAvC5E,KA2CVC,EAAe,IAAI5Y,IAAUyY,GAAkBtX,IAAI,IAAInB,IAAUY,IAGjEI,EAAmB,IAAIhB,IAAUuY,GAAgBpX,IAAI0X,IAAQC,IAAIJ,IACjEK,EAAwB,IAAI/Y,IAAUwY,GAAqBrX,IAAI0X,IAAQC,IAAIH,IAG3EK,EAAgBhY,EAAiBD,MAAM6X,GACvCK,EAAqBF,EAAsBhY,MAAM6X,GAGjD/X,EAAsBoY,EAAmBlY,MAAM,IAAIf,IAAU,IAtDnD,UAyDKqY,YAAUa,EAAe,CAC5C,CACE7e,QAAS+d,cACTpR,KAAM,WACNE,OAAQ,CAACjI,MA7DG,2CAyDTka,EAzDS,KAiEVC,EAAM,CACVJ,cAAeA,EAAcK,SAC7BJ,mBAAoBA,EAAmBI,SACvCrY,iBAAkBA,EAAiBqY,SACnCN,sBAAuBA,EAAsBM,SAC7CzY,cAAe,IAAIZ,IAAUY,GAAeyY,SAC5CxY,oBAAqBA,EAAoBwY,SACzCC,kBAAmBP,EAAsB5X,IAAIH,GAAkBqY,SAC/DE,wBAA0BJ,EAAKK,kBAAgCxd,WAC/Dyd,qBAAuBN,EAAKO,eAA6B1d,WAEzD2d,uBAAwB,IAAI3Z,IAAU,GAAGqZ,SACzCO,eAAiBT,EAAKS,eAA6B5d,YA7ErC,kBAgFTod,GAhFS,4CAAH,sDAsKArB,ICnLAA,EANA,uCAAG,WAAOlY,GAAP,eAAAxG,EAAA,sEACawgB,EAAoBha,GADjC,cACVia,EADU,oDAGJja,GAASia,IAHL,2CAAH,sDCUAC,EAVC,uCAAG,WAAOC,GAAP,eAAA3gB,EAAA,sEACE4gB,QAAQC,IACzBF,EAAanf,IAAb,uCAAiB,WAAOsf,GAAP,eAAA9gB,EAAA,sEACI0e,EAAUoC,GADd,cACTta,EADS,yBAERA,GAFQ,2CAAjB,wDAFe,cACXJ,EADW,yBAOVA,GAPU,2CAAH,sDCKH2a,EAA0B,SAAC7a,GAAoE,IAArD8a,EAAoD,uDAAnB,CAAC,QACjFC,EAAgB/a,EAAMG,MAAK,SAACG,GAChC,OAAOwa,EAAqBlf,MAAK,SAAC8c,GAChC,OAAOpY,EAAKoY,WAAW3X,SAAW2X,QAGtC,OAAOqC,GAAiB/a,EAAM,I,QC2FjBgb,EAnFM,uCAAG,WAAO1a,GAAP,6DAAAxG,EAAA,6DACd4F,EAAwCY,EAAxCZ,IAAK+Y,EAAmCnY,EAAnCmY,YAAavc,EAAsBoE,EAAtBpE,MAAOwc,EAAepY,EAAfoY,WAC3BC,EAAYC,YAAWH,GACvBlR,EAAQ,CAEZ,CACEzM,QAAS8d,YAAW1c,EAAMpB,SAC1B2M,KAAM,YACNE,OAAQ,CAACgR,IAGX,CACE7d,QAAS8d,YAAWF,EAAW5d,SAC/B2M,KAAM,YACNE,OAAQ,CAACgR,IAGX,CACE7d,QAAS6d,EACTlR,KAAM,YACNE,OAAQ,CAAC,+CAGX,CACE7M,QAAS6d,EACTlR,KAAM,eAGR,CACE3M,QAAS8d,YAAW1c,EAAMpB,SAC1B2M,KAAM,YAGR,CACE3M,QAAS8d,YAAWF,EAAW5d,SAC/B2M,KAAM,aAnCY,SAwCdqR,YAAUC,EAAOxR,GAxCH,0CAuCfyR,EAvCe,KAuCCC,EAvCD,KAuCsBC,EAvCtB,KAuCwC7X,EAvCxC,KAuCuD8X,EAvCvD,KAuCsEC,EAvCtE,KA2ChBC,EAAe,IAAI5Y,IAAUyY,GAAkBtX,IAAI,IAAInB,IAAUY,IAGjEI,EAAmB,IAAIhB,IAAUuY,GAAgBpX,IAAI0X,IAAQC,IAAIJ,IACjEK,EAAwB,IAAI/Y,IAAUwY,GAAqBrX,IAAI0X,IAAQC,IAAIH,IAG3EK,EAAgBhY,EAAiBD,MAAM6X,GACvCK,EAAqBF,EAAsBhY,MAAM6X,GAGjD/X,EAAsBoY,EAAmBlY,MAAM,IAAIf,IAAU,IAtD7C,UAyDDqY,YAAUa,EAAe,CAC5C,CACE7e,QAAS+d,cACTpR,KAAM,WACNE,OAAQ,CAACjI,MA7DS,2CAyDfka,EAzDe,KAiEhBC,EAAM,CACVJ,cAAeA,EAAcK,SAC7BJ,mBAAoBA,EAAmBI,SACvCrY,iBAAkBA,EAAiBqY,SACnCN,sBAAuBA,EAAsBM,SAC7CzY,cAAe,IAAIZ,IAAUY,GAAeyY,SAC5CxY,oBAAqBA,EAAoBwY,SACzCC,kBAAmBP,EAAsB5X,IAAIH,GAAkBqY,SAC/DE,wBAA0BJ,EAAKK,kBAAgCxd,WAC/Dyd,qBAAuBN,EAAKO,eAA6B1d,WAEzD2d,uBAAwB,IAAI3Z,IAAU,GAAGqZ,SACzCO,eAAiBT,EAAKS,eAA6B5d,YA7E/B,kBAgFfod,GAhFe,4CAAH,sDCffoB,EAAyB,SAACjb,EAAekb,EAAqBJ,GAClE,IAAMK,EAAuBnb,EAAM9E,QAAO,SAACoF,GAAD,OAAUA,EAAKpE,MAAM6E,SAAWma,KAE1E,OADqBL,EAAwBM,EAAsBL,IAI/DM,EAAwB,SAAC9a,EAAY+a,GACzC,IAAMC,EAAuBC,QAAQjb,EAAKyZ,mBAE1C,GAA+B,SAA3BzZ,EAAKoY,WAAW3X,OAClB,OAAOua,EAAuB,IAAI7a,IAAUH,EAAKyZ,mBAAqBrZ,IAIxE,IAAK2a,EACH,OAAO3a,IAGT,GAAyC,SAArC2a,EAAe3C,WAAW3X,OAAmB,CAC/C,IAAMya,EAAmBH,EAAetB,kBACxC,OAAOuB,GAAwBE,EAC3B,IAAI/a,IAAUH,EAAKyZ,mBAAmBvY,MAAMga,GAC5C9a,IAIN,OAAOA,KAGH+a,EAAyB,SAACnb,EAAY+a,GAC1C,MAA+B,SAA3B/a,EAAKoY,WAAW3X,OACX2a,IAGJL,GAIoC,SAArCA,EAAe3C,WAAW3X,QACrBsa,EAAetB,kBAAoB,IAAItZ,IAAU4a,EAAetB,mBAJhErZ,KA6CIib,EAnCO,uCAAG,WAAO3b,GAAP,iBAAAlG,EAAA,6DACnB8hB,EAAc,CAChBlc,IAAK,EACLsB,SAAU,kBACVyX,YAAa,CACX,KAAM,8CAERvc,MAAOnB,IAAO8gB,WACdnD,WAAY3d,IAAO+gB,KACnBC,aAAchhB,IAAOihB,KATA,SAYHhB,EAAgBY,GAAavM,MAAK,SAACnP,GACrD,OAAO,2BAAK0b,GAAgB1b,MAbP,cAYvB0b,EAZuB,OAgBjBK,EAAkBjc,EAAM1E,KAAI,SAACgF,GACjC,IAAI+a,EAAiBJ,EAAuBjb,EAAOM,EAAKoY,WAAW3X,QAE9Dsa,GAA6C,QAA3B/a,EAAKoY,WAAW3X,SACrCsa,EAAiBO,GAGnB,IAAMM,EAAiBd,EAAsB9a,EAAM+a,GAC7Cc,EAAkBV,EAAuBnb,EAAM+a,GAE/Cnf,EAAK,2BAAQoE,EAAKpE,OAAb,IAAoBgF,UAAWgb,EAAepC,WACnDpB,EAAU,2BAAQpY,EAAKoY,YAAb,IAAyBxX,UAAWib,EAAgBrC,WAEpE,OAAO,2BAAKxZ,GAAZ,IAAkBpE,QAAOwc,kBA7BJ,kBAgChBuD,GAhCgB,2CAAH,sDC7CTG,EAAuB,uCAAG,WAAOvf,EAAiB4d,GAAxB,qBAAA3gB,EAAA,6DAC/BuiB,EAAoBxD,cAEpBtR,EAAQkT,EAAanf,KAAI,SAACgF,GAE9B,MAAO,CAAExF,QADiB8d,YAAWtY,EAAKmY,aACLhR,KAAM,YAAaE,OAAQ,CAAC9K,EAASwf,OALvC,SAQPvD,YAAUwD,EAAU/U,GARb,cAQ/BgV,EAR+B,OAS/BC,EAAqBD,EAAgBjhB,KAAI,SAACmhB,GAC9C,OAAO,IAAIhc,IAAUgc,GAAW3C,YAVG,kBAY9B0C,GAZ8B,2CAAH,wDAevBE,EAA0B,uCAAG,WAAO7f,EAAiB4d,GAAxB,mBAAA3gB,EAAA,6DAClCyN,EAAQkT,EAAanf,KAAI,SAACgF,GAE9B,MAAO,CACLxF,QAFwB8d,YAAWtY,EAAKmY,aAGxChR,KAAM,YACNE,OAAQ,CAAC9K,OAN2B,SAUTic,YAAUwD,EAAU/U,GAVX,cAUlCoV,EAVkC,OAWlCC,EAAsBD,EAAiBrhB,KAAI,SAACqF,GAChD,OAAO,IAAIF,IAAUE,GAAcmZ,YAZG,kBAcjC8C,GAdiC,2CAAH,wDAiB1BC,EAA2B,uCAAG,WAAOhgB,EAAiB4d,GAAxB,qBAAA3gB,EAAA,6DACnCuiB,EAAoBxD,cAEpBtR,EAAQkT,EAAanf,KAAI,SAACgF,GAC9B,MAAO,CACLxF,QAASuhB,EACT5U,KAAM,WACNE,OAAQ,CAACrH,EAAKZ,IAAK7C,OAPkB,SAWTic,YAAUa,EAAepS,GAXhB,cAWnCuV,EAXmC,OAYnCC,EAAuBD,EAAkBxhB,KAAI,SAACsF,GAClD,OAAO,IAAIH,IAAUG,EAAc,GAAGoc,MAAMlD,YAbL,kBAelCiD,GAfkC,2CAAH,wDAkB3BE,EAAqB,uCAAG,WAAOpgB,EAAiB4d,GAAxB,qBAAA3gB,EAAA,6DAC7BuiB,EAAoBxD,cAEpBtR,EAAQkT,EAAanf,KAAI,SAACgF,GAC9B,MAAO,CACLxF,QAASuhB,EACT5U,KAAM,cACNE,OAAQ,CAACrH,EAAKZ,IAAK7C,OAPY,SAWTic,YAAUa,EAAepS,GAXhB,cAW7B2V,EAX6B,OAY7BC,EAAiBD,EAAY5hB,KAAI,SAACuF,GACtC,OAAO,IAAIJ,IAAUI,GAAUiZ,YAbE,kBAe5BqD,GAf4B,2CAAH,wDCjC5BC,EAA2B,CAAEld,KAVPX,IAAYjE,KAAI,SAACgF,GAAD,mBAAC,eACxCA,GADuC,IAE1CE,SAAU,CACRD,UAAW,IACXI,aAAc,IACdC,cAAe,IACfC,SAAU,UAIgDwc,uBAAuB,EAAOC,gBAAgB,GAE/F9d,EAAmBD,IAAYrE,QAAO,gBAAGwE,EAAH,EAAGA,IAAH,OAAc6d,YAAc7d,MAGlEC,EAA4B6d,YACvC,kCADuD,uCAEvD,WAAOle,GAAP,uBAAAxF,EAAA,6DACQ2gB,EAAelb,IAAYrE,QAAO,SAAC0f,GAAD,OAAgBtb,EAAKme,SAAS7C,EAAWlb,QAG3Ege,EAAwBjD,EAAakD,OAAOC,GAJpD,SAMsBpD,EAAWkD,GANjC,cAMQ1d,EANR,gBAOgC2b,EAAiB3b,GAPjD,cAOQic,EAPR,OAUQ4B,EAAwB5B,EAAgB/gB,QAAO,SAACoF,GACpD,OAAOA,EAAKZ,KAAoB,IAAbY,EAAKZ,OAX5B,kBAcSme,GAdT,4CAFuD,uDA4B5Cje,EAAyB4d,YACpC,+BADoD,uCAEpD,yCAAA1jB,EAAA,6DAAS+C,EAAT,EAASA,QAASyC,EAAlB,EAAkBA,KACVmb,EAAelb,IAAYrE,QAAO,SAAC0f,GAAD,OAAgBtb,EAAKme,SAAS7C,EAAWlb,QADnF,SAEmC0c,EAAwBvf,EAAS4d,GAFpE,cAEQqD,EAFR,gBAGsCpB,EAA2B7f,EAAS4d,GAH1E,cAGQsD,EAHR,iBAImClB,EAA4BhgB,EAAS4d,GAJxE,eAIQuD,EAJR,iBAKiCf,EAAsBpgB,EAAS4d,GALhE,eAKQwD,EALR,yBAOSH,EAAmBxiB,KAAI,SAAC4iB,EAAehW,GAC5C,MAAO,CACLxI,IAAK+a,EAAavS,GAAOxI,IACzBa,UAAWud,EAAmB5V,GAC9BvH,aAAcod,EAAsB7V,GACpCtH,cAAeod,EAAmB9V,GAClCrH,SAAUod,EAAiB/V,QAbjC,4CAFoD,uDAqBzCiW,EAAaC,YAAY,CACpC3W,KAAM,QACN2V,eACAiB,SAAU,CACRC,yBAA0B,SAACjkB,EAAOkkB,GAChC,IAAMlB,EAAwBkB,EAAOC,QACrCnkB,EAAMgjB,sBAAwBA,IAGlCoB,cAAe,SAACC,GAEdA,EAAQC,QAAQhf,EAA0Bif,WAAW,SAACvkB,EAAOkkB,GAC3DlkB,EAAM6F,KAAO7F,EAAM6F,KAAK5E,KAAI,SAACgF,GAC3B,IAAMue,EAAeN,EAAOC,QAAQre,MAAK,SAAC2e,GAAD,OAAcA,EAASpf,MAAQY,EAAKZ,OAC7E,OAAO,2BAAKY,GAASue,SAKzBH,EAAQC,QAAQ/e,EAAuBgf,WAAW,SAACvkB,EAAOkkB,GACxDA,EAAOC,QAAQO,SAAQ,SAACC,GACtB,IAAQtf,EAAQsf,EAARtf,IACFwI,EAAQ7N,EAAM6F,KAAK+e,WAAU,SAAC3e,GAAD,OAAUA,EAAKZ,MAAQA,KAC1DrF,EAAM6F,KAAKgI,GAAX,2BAAyB7N,EAAM6F,KAAKgI,IAApC,IAA4C1H,SAAUwe,OAExD3kB,EAAMijB,gBAAiB,QAMea,EAAWe,QAAxCZ,yBAEAH,MAAf,S,2ICpGYgB,E,gEAFNC,EAAiB,IAAIC,IAAUC,KAS9B,SAASC,EAASviB,GACvB,IAAQqZ,EAAY9C,cAAZ8C,QAEFtb,EAASE,mBACb,kBACE+B,EAAW1B,KAAI,mCAAEkkB,EAAF,KAAaC,EAAb,WAA4B,CACzCC,YAAgBF,EAAWnJ,GAC3BqJ,YAAgBD,EAAWpJ,SAE/B,CAACA,EAASrZ,IAGN2iB,EAAgB1kB,mBACpB,kBACEF,EAAOO,KAAI,YAAuB,IAAD,mBAApBskB,EAAoB,KAAZC,EAAY,KAC/B,OAAOD,GAAUC,IAAWD,EAAOE,OAAOD,GAAUE,IAAKnH,WAAWgH,EAAQC,QAAUllB,OAE1F,CAACI,IAGG0C,EAAUhC,YAA8BkkB,EAAeP,EAAgB,eAE7E,OAAOnkB,mBAAQ,WACb,OAAOwC,EAAQnC,KAAI,SAACe,EAAQF,GAC1B,IAAgB6jB,EAAsB3jB,EAA9BA,OAAkBP,EAAYO,EAAZP,QACpB8jB,EAAS7kB,EAAOoB,GAAG,GACnB0jB,EAAS9kB,EAAOoB,GAAG,GAEzB,GAAIL,EAAS,MAAO,CAACqjB,EAAUc,QAAS,MACxC,IAAKL,IAAWC,GAAUD,EAAOE,OAAOD,GAAS,MAAO,CAACV,EAAUe,QAAS,MAC5E,IAAKF,EAAU,MAAO,CAACb,EAAUgB,WAAY,MAC7C,IAAQC,EAAuBJ,EAAvBI,SAAUC,EAAaL,EAAbK,SAClB,EAAyBT,EAAOU,YAAYT,GAAU,CAACD,EAAQC,GAAU,CAACA,EAAQD,GAAlF,mBAAOW,EAAP,KAAeC,EAAf,KACA,MAAO,CACLrB,EAAUsB,OACV,IAAIV,IAAK,IAAIrjB,IAAY6jB,EAAQH,EAAS3jB,YAAa,IAAIC,IAAY8jB,EAAQH,EAAS5jB,mBAG3F,CAACgB,EAAS1C,IAGR,SAAS2lB,EAAQd,EAAmBC,GACzC,OAAON,EAAS,CAAC,CAACK,EAAQC,KAAU,I,SAjD1BV,O,qBAAAA,I,2BAAAA,I,mBAAAA,I,sBAAAA,M,kMCACwB,EAA2B,SAACC,GACvC,IAAWC,EAA+ED,EAAlF,GAAcE,EAAoEF,EAAvE,GAAoBG,EAAmDH,EAAtD,GAAcI,EAAwCJ,EAA3C,GAAkBK,EAAyBL,EAA5B,GAAeM,EAAaN,EAAhB,GAE1E,MAAO,CACLC,OAAQM,OAAON,GACfO,OAAQD,OAAOL,GACfC,OAAQI,OAAOJ,GACfE,QAASE,OAAOF,GAChBD,aACAE,aCZEG,EAAkBC,cAQlBC,EAAW,uCAAG,WAAOzmB,GAAP,qBAAAhB,EAAA,+EAEO0nB,MAAM,GAAD,OATbjjB,kCASa,sBAA4BzD,IAFxC,WAEVwK,EAFU,QAIFmc,GAJE,yCAKP,IALO,uBAQgBnc,EAASoc,OARzB,2BAQRC,gBARQ,MAQG,GARH,oBAUTA,GAVS,2DAYT,IAZS,0DAAH,sDAgEFC,EAhDC,uCAAG,WAAO9mB,GAAP,yCAAAhB,EAAA,+EAEcunB,EAAgBQ,cAAc/mB,GAF5C,UAET+mB,EAFS,gDAKN,CAAEA,gBAAeC,QAAS,OALpB,uBAQeT,EAAgBU,eAAejnB,GAR9C,cAQT8lB,EARS,SASmDD,EAAyBC,GAAnFC,EATO,EASPA,OAAQO,EATD,EASCA,OAAQL,EATT,EASSA,OAAQE,EATjB,EASiBA,QAASD,EAT1B,EAS0BA,WAAYE,EATtC,EASsCA,SATtC,UAUIc,YAAQjB,GAVZ,eAUTkB,EAVS,iBAWQV,EAAYzmB,GAXpB,WAWT6mB,EAXS,QAgBXT,EAhBW,kCAiBDgB,YAAgBlB,EAAYC,GAjB3B,QAiBbkB,EAjBa,OAoBbC,IAAQC,IAAR,kBACavnB,GACX,CACE6mB,WACAW,OAAO,2CAAD,iBAA6CH,SAA7C,aAA6C,EAAKI,OAAOC,KAEjE,CAAEC,OAAQ,sBAAuBC,QAAQ,EAAMC,QAAS,KA1B7C,eA8BTb,EAAU,CACdjB,SACAO,SACAL,SACAE,UACAU,WACAX,aACAE,WACAiB,MACAF,QAvCa,kBA0CR,CAAEJ,gBAAeC,YA1CT,2DA4CR,MA5CQ,0DAAH,sDC3BV1E,EAA6B,CACjCwF,eAAe,EACf7b,WAAW,EACX8a,eAAe,EACf3hB,KAAM,MAGK2iB,EAAezE,YAAY,CACtC3W,KAAM,UACN2V,eACAiB,SAAU,CACRyE,kBAAmB,SAACzoB,GAClBA,EAAM0M,WAAY,GAEpBgc,sBAAuB,SAACC,EAAQzE,GAC9B,MAAmCA,EAAOC,QAAlCsD,EAAR,EAAQA,QAER,MAAO,CACLc,eAAe,EACf7b,WAAW,EACX8a,cALF,EAAiBA,cAMf3hB,KAAM4hB,IAGVmB,mBAAoB,SAAC5oB,GACnBA,EAAM0M,WAAY,EAClB1M,EAAMuoB,eAAgB,GAExBM,aAAc,8BAAC,eACV9F,GADS,IAEZrW,WAAW,KAEboc,UAAW,SAAC9oB,EAAOkkB,GACjBlkB,EAAM6F,KAAKkhB,QAAU7C,EAAOC,YAM3B,EACLqE,EAAa3D,QADA4D,EAAR,EAAQA,kBAAmBC,EAA3B,EAA2BA,sBAAuBE,EAAlD,EAAkDA,mBAAoBC,EAAtE,EAAsEA,aAKhEE,GALN,EAAoFD,UAK/D,SAACroB,GAAD,8CAAqB,WAAOvB,GAAP,eAAAO,EAAA,sEAE7CP,EAASupB,KAFoC,SAGtBlB,EAAW9mB,GAHW,OAGvCwK,EAHuC,OAI7C/L,EAASwpB,EAAsBzd,IAJc,gDAM7C/L,EAAS0pB,KANoC,yDAArB,wDAUbJ,MAAf,S,uLCpDMzF,EAA8B,CAClCiG,YAAY,EACZC,gBAAiBlZ,KAINmZ,EAAc,IAAIC,IAC/BD,EAAYlB,IAAIjY,IAAGC,OAAQoZ,GAEpB,IAAMC,EAAkBC,6BAA0BhpB,GAE5CipB,EAA6B,SAAC,GAAkB,IAAhBjV,EAAe,EAAfA,SAC3C,EAA0B7B,oBAAwB,WAChD,IAAM+W,EAAkBC,cAExB,OAAO,2BACF1G,GADL,IAEEkG,gBAAiB9Y,IAAUqZ,QAL/B,mBAAOxpB,EAAP,KAAc0pB,EAAd,KAQQT,EAAoBjpB,EAApBipB,gBAER3pB,qBAAU,YACiB,uCAAG,gCAAAG,EAAA,0DACpB+pB,EAAkBC,iBAEA1Z,IAAGC,OAHD,uBAIlB2Z,EAAWT,EAAYU,IAAI7Z,IAAGC,QAJZ,SAKI6Z,YAAYL,GALhB,OAKlBM,EALkB,OAMxBZ,EAAYlB,IAAIwB,EAAhB,2BAAsCG,GAAaG,IAN3B,OAS1BJ,GAAS,SAACK,GAAD,mBAAC,eACLA,GADI,IAEPf,YAAY,OAXY,2CAAH,qDAezBgB,KACC,CAACN,IAEJ,IAAMO,EAAW,uCAAG,WAAOha,GAAP,iBAAAxQ,EAAA,yDACbypB,EAAYgB,IAAIja,EAASD,QADZ,wBAEhB0Z,GAAS,SAACK,GAAD,mBAAC,eACLA,GADI,IAEPf,YAAY,OAJE,SAOKa,YAAY5Z,EAASD,QAP1B,OAOVA,EAPU,OAQV2Z,EAAWT,EAAYU,IAAI7Z,IAAGC,QAGpCkZ,EAAYlB,IAAI/X,EAASD,OAAzB,2BAAsC2Z,GAAa3Z,IACnDiC,aAAaC,QAAQiY,IAAQla,EAASD,QAEtC0Z,GAAS,SAACK,GAAD,mBAAC,eACLA,GADI,IAEPf,YAAY,EACZC,gBAAiBhZ,OAjBH,wBAoBhBgC,aAAaC,QAAQiY,IAAQla,EAASD,QACtC0Z,GAAS,SAACK,GAAD,mBAAC,eACLA,GADI,IAEPf,YAAY,EACZC,gBAAiBhZ,OAxBH,4CAAH,sDA6BXma,EAAY9S,uBAChB,SAAC+S,EAAaxkB,GACZ,IAGMykB,GAHiBpB,EAAYgB,IAAIjB,EAAgBjZ,QACnDkZ,EAAYU,IAAIX,EAAgBjZ,QAChCkZ,EAAYU,IAAI7Z,IAAGC,SACeqa,IAAQA,EAK9C,GAFyBC,EAAeC,MAAM,aAEtB1kB,EAAM,CAC5B,IAAI2kB,EAAmBF,EAMvB,OALAvmB,OAAOkI,KAAKpG,GAAM6e,SAAQ,SAAC+F,GACzB,IAAMC,EAAc,IAAIC,OAAJ,WAAeF,EAAf,KAA2B,KAC/CD,EAAmBA,EAAiBI,QAAQF,EAAa7kB,EAAK4kB,IAAY5kB,EAAK4kB,GAASroB,eAGnFooB,EAGT,OAAOF,IAET,CAACrB,IAGH,OAAO,cAACI,EAAgBwB,SAAjB,CAA0B9oB,MAAK,2BAAO/B,GAAP,IAAciqB,cAAanpB,EAAGspB,IAA7D,SAA2E9V,KCzFrEwC,EAVQ,WACrB,IAAMgU,EAAkB1qB,qBAAWipB,GAEnC,QAAwB/oB,IAApBwqB,EACF,MAAM,IAAIvqB,MAAM,iCAGlB,OAAOuqB,I,+HCRMC,EAFS,SAACtqB,GAAD,+BAAuCA,EAAvC,S,gBCQlBuqB,EAAa/iB,YAAOgjB,IAAPhjB,CAAH,2DACL,qBAAGijB,QACF,qBAAGA,QAGA,SAASC,EAAT,GAQX,IAAD,EAeuB,EAtBxBvoB,EAOC,EAPDA,SAOC,IANDsoB,YAMC,MANM,OAMN,EALD5X,EAKC,EALDA,MAMM8X,EAAeC,YAAiBzoB,aAAoB0oB,IAAmB1oB,EAAS2oB,aAAUjrB,GAE1FkrB,EAAiB5qB,mBAAQ,WAC7B,OAAIgC,IAAaa,IAAc,GAE3Bb,aAAoBC,IAClBD,aAAoB0oB,IAChB,GAAN,mBAAWF,GAAX,CAAyBL,EAAgBnoB,EAASnC,WAE7C,CAACsqB,EAAgBnoB,EAASnC,UAE5B,KACN,CAACmC,EAAUwoB,IAEd,OAAIxoB,IAAaa,IAEb,cAACunB,EAAD,CACEE,KAAMA,EACNM,KAAM,CAAC,iEACPC,IAAG,2BAAK7oB,QAAL,IAAKA,OAAL,EAAKA,EAAU8D,cAAf,QAAyB,QAAzB,SACH4M,MAAOA,IAKN,cAAC0X,EAAD,CAAYE,KAAMA,EAAMM,KAAMA,EAAMC,IAAG,2BAAK7oB,QAAL,IAAKA,OAAL,EAAKA,EAAU8D,cAAf,QAAyB,QAAzB,SAAyC4M,MAAOA,M,o8LClCzF,SAASoY,IACd,IAAMjc,EAAWkc,cAsBjB,MAAO,CAAEC,iBApBgBtU,sBAAW,uCAClC,WACEuU,EACAC,GAFF,mCAAArsB,EAAA,6DAGEssB,EAHF,+BAGsB,GACpBC,EAJF,+BAI6B,KAErBC,EAAiBrC,cAAIiC,EAAUC,GAC/BI,EAPR,OAOoCF,QAPpC,IAOoCA,OAPpC,EAOoCA,EAAWvc,SAP/C,SASmBwc,EAAc,WAAd,cACZF,GADY,QAEfG,EAAyB,eAAQF,GAAR,2BAA2BA,GAA3B,IAAsCvc,gBAXnE,cASQmO,EATR,yBAcSA,GAdT,2CADkC,wDAiBlC,CAACnO,O,yGCnBO0c,E,2HAAAA,K,0BAAAA,E,kBAAAA,E,iBAAAA,M,KAMZ,IAkEaC,EAAmB,WAC9B,MAAsC3Z,mBAAS0Z,EAAYE,aAA3D,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA8B9Z,mBAASpM,KAAvC,mBAAOmmB,EAAP,KAAgBC,EAAhB,KACQjqB,EAAYoB,cAAZpB,QACR,EAAwCkqB,cAAhCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,eAkBrB,OAhBAttB,qBAAU,WAWJkD,GAVc,uCAAG,4BAAA/C,EAAA,+EAEWd,IAAkBkuB,WAAWrqB,GAFxC,OAEXsqB,EAFW,OAGjBL,EAAW,IAAIrmB,IAAU0mB,EAAc1qB,aACvCmqB,EAAeJ,EAAYY,SAJV,gDAMjBR,EAAeJ,EAAYa,QANV,yDAAH,oDAWhBC,KAED,CAACzqB,EAASmqB,EAAaF,EAAYF,IAE/B,CAAEC,UAASF,cAAaY,QAASN,IAG3BrqB,IA3FS,SAACkb,GACvB,IAAQ4O,EAAiCF,EAAjCE,YAAaU,EAAoBZ,EAApBY,QAASC,EAAWb,EAAXa,OAC9B,EAAwCva,mBAA+B,CACrE+Z,QAASnmB,IACTimB,YAAaD,IAFf,mBAAOc,EAAP,KAAqBC,EAArB,KAIQ5qB,EAAYoB,cAAZpB,QACAiD,EAAgBV,cAAhBU,YAsBR,OApBAnG,qBAAU,WAeJkD,GAdc,uCAAG,8BAAA/C,EAAA,6DACbosB,EAAWwB,YAAiB5P,GADf,kBAGCoO,EAASyB,UAAU9qB,GAHpB,OAGXoL,EAHW,OAIjBwf,EAAgB,CAAEZ,QAAS,IAAIpmB,IAAUwH,EAAIxL,YAAakqB,YAAaS,IAJtD,gDAMjBjf,QAAQC,MAAR,MACAqf,GAAgB,SAACG,GAAD,mBAAC,eACZA,GADW,IAEdjB,YAAaU,OATE,yDAAH,oDAehBC,KAED,CAACzqB,EAASib,EAAchY,EAAasnB,EAASC,IAE1CG,I,iCC7CM,SAASK,EAAOC,GAC7B,MAAO,SAAS9b,KAAK8b,GALvB,mC,+PCUMC,EAAwC,SAC5CC,EACAC,GAGA,OAA6B,IAAzBA,EAAclsB,OACTisB,EAAS1sB,KAAI,SAAC4sB,GACnB,MAAO,CACLxiB,QAASwiB,EAAUxiB,QACnBO,YAAaiiB,EAAUjiB,YAAYxJ,WACnCgJ,UAAWyiB,EAAUziB,UACrBD,OAAQ0iB,EAAU1iB,OAClBgC,GAAI0gB,EAAU3iB,UAAU9I,WACxB0rB,YAAaD,EAAUviB,kBACvByiB,aAAc,GACdC,WAAY,GACZC,eAAgB,OAMCL,EAAc3sB,KAAI,SAACitB,EAAYrgB,GACpD,IAAMggB,EAAYF,EAAS9f,GAE3B,OAAIggB,EAEGA,EAAUnhB,UAaRwhB,EAZE,CACL7iB,QAASwiB,EAAUxiB,QACnBO,YAAaiiB,EAAUjiB,YAAYxJ,WACnCgJ,UAAWyiB,EAAUziB,UACrBD,OAAQ0iB,EAAU1iB,OAClBgC,GAAI+gB,EAAW/gB,GACf2gB,YAAaI,EAAWJ,YACxBC,aAAcG,EAAWH,aACzBC,WAAYE,EAAWF,WACvBC,eAAgBC,EAAWD,gBAK1BC,MAKEC,EAAiB,uCAAG,8CAAA1uB,EAAA,6DAC/B2uB,EAD+B,+BApDS,IAsDxCC,EAF+B,+BAExB,EACPC,EAH+B,+BAGP,GAHO,kBAMNC,kBACrBjqB,IACAkqB,cAF6B,IAAD,+bAiB5B,CAAEH,OAAMD,QAAOE,UAvBY,cAMvBrjB,EANuB,yBAyBtBA,EAASwjB,WAzBa,yCA2B7B3gB,QAAQC,MAAR,MA3B6B,kBA4BtB,IA5BsB,0DAAH,qDAwCf2gB,EARO,uCAAG,WAAOvgB,GAAP,qBAAA1O,EAAA,6DACjBkvB,EAAkBtgB,YAAiBF,GADlB,SAEAnB,YAAuB2hB,GAFvB,cAEjBhB,EAFiB,gBAGKQ,IAHL,cAGjBP,EAHiB,OAIjBgB,EAAalB,EAAsCC,EAAUC,GAJ5C,kBAKhBgB,GALgB,2CAAH,sD,SC5EhB7L,EAA6B,CACjC5U,iBAAkB,KAClB0gB,iBAAiB,EACjBzgB,8BAA+B,KAC/B0gB,aAAc,CACZpiB,WAAW,EACXxB,UAAW,KACXC,OAAQe,IAAcU,QACtBxB,UAAW,GACXC,QAAS,GACTC,kBAAmB,GACnBC,gBAAiB,GACjBC,YAAa,GACbC,cAAe,GACfC,aAAc,GACdC,sBAAuB,GACvBC,YAAa,KACbC,eAAgB,GAChBC,uBAAwB,GACxBC,iBAAkB,GAClBiD,YAAa,CACXtC,WAAW,EACXwC,QAAS,KAGb6f,cAAe,KACfC,gBAAiB,CAAExsB,QAAS,GAAIysB,UAAW,GAAIlB,aAAc,GAAImB,OAAQ,KAG9DC,EAAsBhM,YACjC,8BADiD,uCAEjD,+BAAA1jB,EAAA,6DAAS0O,EAAT,EAASA,iBAAT,SAC4BtB,YAAasB,GADzC,cACQihB,EADR,yBAESA,GAFT,2CAFiD,uDAQtCC,EAAwBlM,YAAoC,gCAApB,sBAAqD,4BAAA1jB,EAAA,sEACvEwO,cADuE,cAClGqhB,EADkG,yBAEjGA,GAFiG,4CAK7FC,EAA+BpM,YAG1C,uCAH0D,uCAGlB,uCAAA1jB,EAAA,6DAAS+C,EAAT,EAASA,QAAS2L,EAAlB,EAAkBA,iBAAlB,SACTqhB,YAAmBhtB,EAAS2L,GADnB,UAClCshB,EADkC,OAElCC,EAFkC,UAEAD,EAAiBP,cAFjB,aAEA,EAAyBppB,MAAK,SAAC4D,GAAD,OAAWA,EAAMwB,YAAciD,MAC/Fa,EAHkC,OAGpB0gB,QAHoB,IAGpBA,OAHoB,EAGpBA,EAAiCxgB,UAGV,IAAvBF,EAAYtN,OANQ,yCAO/B,CAAEsN,YAAa,KAAM2gB,cAAeF,IAPL,gCAUjC,CAAEzgB,cAAa2gB,cAAeF,IAVG,2CAHkB,uDAgB/CG,EAAuBzM,YAClC,+BADkD,uCAElD,+BAAA1jB,EAAA,6DAAS0O,EAAT,EAASA,iBAAT,SAC0BugB,EAAiBvgB,GAD3C,cACQsgB,EADR,yBAESA,GAFT,2CAFkD,uDAQvCoB,EAAqB1M,YAGhC,6BAHgD,uCAGlB,iCAAA1jB,EAAA,6DAAS+C,EAAT,EAASA,QAAS2L,EAAlB,EAAkBA,iBAAlB,SACFqhB,YAAmBhtB,EAAS2L,GAD1B,cACxBwhB,EADwB,yBAEvBA,GAFuB,2CAHkB,uDAQrCG,EAA4B3M,YAAgB,oEAEvD,6BAAA1jB,EAAA,6DAASovB,EAAT,EAASA,gBAAT,kBACS,CAAEA,oBADX,2CAFuD,uDAO5CkB,EAAehM,YAAY,CACtC3W,KAAM,UACN2V,eACAiB,SAAU,CACRgM,qBAAsB,SAAChwB,EAAOkkB,GACpBA,EAAOC,UAGnBC,cAAe,SAACC,GACdA,EAAQC,QAAQ6K,EAAoB5K,WAAW,SAACvkB,EAAOkkB,GACrDlkB,EAAM8uB,aAAN,2BAA0B9uB,EAAM8uB,cAAiB5K,EAAOC,YAE1DE,EAAQC,QAAQ+K,EAAsB9K,WAAW,SAACvkB,EAAOkkB,GACvDlkB,EAAMmO,iBAAmB+V,EAAOC,QAAQhW,iBACxCnO,EAAMoO,8BAAgC8V,EAAOC,QAAQ/V,iCAEvDiW,EAAQC,QACNiL,EAA6BhL,WAC7B,SAACvkB,EAAOkkB,GACNlkB,EAAM8uB,aAAa9f,YAAYtC,WAAY,EAC3C1M,EAAM8uB,aAAa9f,YAAYE,QAAUgV,EAAOC,QAAQnV,YACxDhP,EAAMgvB,gBAAkB9K,EAAOC,QAAQwL,iBAG3CtL,EAAQC,QAAQsL,EAAqBrL,WAAW,SAACvkB,EAAOkkB,GACtDlkB,EAAM+uB,cAAgB7K,EAAOC,WAE/BE,EAAQC,QAAQuL,EAAmBtL,WAAW,SAACvkB,EAAOkkB,GACpDlkB,EAAMgvB,gBAAkB9K,EAAOC,WAEjCE,EAAQC,QACNwL,EAA0BvL,WAC1B,SAACvkB,EAAOkkB,GACNlkB,EAAM6uB,gBAAkB3K,EAAOC,QAAQ0K,sBAOPkB,EAAalL,QAAtCmL,qBAEAD,MAAf,S,4KCpIa5F,EAAS,uBAETN,EAAW,uCAAG,WAAO7Z,GAAP,iBAAAvQ,EAAA,sEACF0nB,MAAM,GAAD,OALZjjB,GAKY,oBAAyB8L,EAAzB,UADH,cACnB/E,EADmB,gBAENA,EAASoc,OAFH,cAEnBxhB,EAFmB,yBAGlBA,GAHkB,2CAAH,sDAMX4jB,EAAwB,WACnC,IAGE,OAFwBxX,aAAaY,QAAQsX,IAEnBpa,IAAGC,OAC7B,SACA,OAAOD,IAAGC,U,yCCIFigB,EAMAC,E,2ECtBNC,EAASloB,YAAOmoB,IAAPnoB,CAAH,gGAMNooB,EAAapoB,IAAOqoB,GAAV,yQAWH,qBAAGxoB,MAAkBS,OAAOgoB,cA4I1BC,EA1HiD,SAAC,GAS1D,IARLC,EAQI,EARJA,OACAvnB,EAOI,EAPJA,IACAwnB,EAMI,EANJA,WACAC,EAKI,EALJA,sBACAC,EAII,EAJJA,WACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,SACAznB,EACI,EADJA,eAEA,EAAoCoJ,oBAAS,GAA7C,mBAAOse,EAAP,KAAmBC,EAAnB,KACQlwB,EAAMgW,cAANhW,EACR,EAIImwB,aACF,qCACE,cAAC,KAAD,UACGnwB,EACC,uHAGJ,cAAC,KAAD,CAAMowB,GAAG,OAAT,SACGpwB,EAAE,oGAEL,cAAC,KAAD,UAAOA,EAAE,8EAEX,CAAEqwB,UAAW,UAAWC,cAAe,CAAC,GAAI,MAfjCC,EADb,EACEC,UACSC,EAFX,EAEEC,QACgBC,EAHlB,EAGEC,eAgBIC,EAAelB,EAAS,EAAI,EAC5BmB,GAAiG,IAA1FvnB,YAAOnB,EAAKynB,EAAwB,EAAIA,EAAwB,EAAG,IAAKtnB,IAAuBW,QAAQ,GAEpH,OACE,eAACmmB,EAAD,CAAQ0B,EAAE,OAAOC,cAAc,SAA/B,UACE,cAAC,IAAD,CAAiBC,SAAUhB,EAAYtf,QAAS,kBAAMuf,GAAc,SAACzD,GAAD,OAAWA,MAA/E,SACgBzsB,EAAbiwB,EAAe,OAAY,aAE7BA,GACC,eAAC,IAAD,CAAKiB,GAAG,MAAR,UACE,eAAC,IAAD,CAAMte,oBAAoB,YAAYue,WAAW,MAAMC,iBAAgB,iBAAYP,EAAZ,WAAvE,UACGlB,GACC,qCACE,cAAC,KAAD,CAAM7a,MAAM,aAAajB,OAAK,EAA9B,SACG7T,EAAE,4BAEL,eAAC,KAAD,CAAM6T,OAAK,EAACwd,UAAU,QAAtB,UACGzB,EADH,UAKJ,cAAC,KAAD,CAAM9a,MAAM,aAAajB,OAAK,EAA9B,SACY7T,EAAT2vB,EAAW,6BAAkC,SAEhD,eAAC,KAAD,CAAM9b,OAAK,EAACwd,UAAU,QAAtB,UACGjpB,EAAIc,QAAQ,GADf,OAGA,cAAC,KAAD,CAAM4L,MAAM,aAAajB,OAAK,EAA9B,SACG7T,EAAE,wCAAyC,CAC1CsxB,cAAezB,EAAwB,EAAIA,EAAwB,MAGvE,eAAC,KAAD,CAAMhc,OAAK,EAACwd,UAAU,QAAtB,UACGP,EADH,OAGCnB,GACC,qCACE,cAAC,KAAD,CAAM7a,MAAM,aAAajB,OAAK,EAA9B,SACG7T,EAAE,qBAEL,eAAC,IAAD,CAAMwV,eAAe,WAAW+b,WAAW,WAA3C,UACE,cAAC,KAAD,CAAM1d,OAAK,EAACwd,UAAU,QAAQ9b,GAAG,MAAjC,SACGua,IAEH,sBAAM0B,IAAKjB,EAAX,SACE,cAAC,IAAD,CAAUzb,MAAM,aAAazN,MAAM,OAAOoqB,OAAO,WAElDd,GAA4BF,WAKrC,eAAClB,EAAD,WACE,6BACE,cAAC,KAAD,CAAMhe,SAAS,OAAO8f,UAAU,SAASvc,MAAM,aAAa4c,QAAQ,SAApE,SACG1xB,EAAE,0CAGN2vB,GACC,6BACE,cAAC,KAAD,CAAMpe,SAAS,OAAO8f,UAAU,SAASvc,MAAM,aAAa4c,QAAQ,SAApE,SACG1xB,EAAE,0FAIT,6BACE,cAAC,KAAD,CAAMuR,SAAS,OAAO8f,UAAU,SAASvc,MAAM,aAAa4c,QAAQ,SAApE,SACG1xB,EACC,mHAILuI,EAAiB,GAChB,6BACE,cAAC,KAAD,CAAMopB,GAAG,OAAOpgB,SAAS,OAAO8f,UAAU,SAASvc,MAAM,aAAa4c,QAAQ,SAA9E,SACG1xB,EAAE,gFAA4E,CAC7E4xB,IAAKrpB,WAMf,cAAC,IAAD,CAAMiN,eAAe,SAASmc,GAAG,OAAjC,SACE,cAAC,IAAD,CAAcrc,KAAM0a,EAApB,SAA+BD,a,wBDhJrC8B,EAA8B,CAClC,EAAG,EACH,EAAG,WACH,EAAG,WACH,EAAG,a,SAOO1C,O,iBAAAA,I,cAAAA,M,cAMAC,O,mDAAAA,I,oDAAAA,M,KAuBZ,I,oBAAMnN,EAA0C,CAC9C6P,SAAU,CACRC,aAAa,EACb1oB,qBAAsB,EACtB2oB,uBAAwB,EACxBC,gBAAiB,EACjBC,KAAM9C,EAAe+C,uBACrBC,gBAAiBjD,EAAgBkD,KAEnCttB,KAAM,CACJutB,iBAAkB,OAClBC,eAAgB,GAChBC,OAAQ,EACRC,UAAW,EACXC,cAAe,IAIbC,EAAuB,SAC3BzzB,EACAkkB,GAEA,OAAQA,EAAOwP,MACb,IAAK,qBACH,IAAMd,EAAQ,2BAAQ5yB,EAAM4yB,UAAd,IAAwBG,gBAAiB7O,EAAOC,UAC9D,OAAO,2BACFnkB,GADL,IAEE4yB,aAGJ,IAAK,oBACH,IAAMe,GAAsB3zB,EAAM4yB,SAASC,YACrCD,EAAQ,2BAAQ5yB,EAAM4yB,UAAd,IAAwBC,YAAac,IACnD,OAAO,2BACF3zB,GADL,IAEE4yB,aAGJ,IAAK,0BACH,MAAyC1O,EAAOC,QAAxCtW,EAAR,EAAQA,MAAO8iB,EAAf,EAAeA,sBACf,GAAIA,EACF,OAAO,2BACF3wB,GADL,IAEE4yB,SAAS,2BACJ5yB,EAAM4yB,UADH,IAENzoB,qBAAsBwmB,MAI5B,IAAMxmB,EAAuBwoB,EAA4B9kB,GACnD+kB,EAAQ,2BAAQ5yB,EAAM4yB,UAAd,IAAwBzoB,uBAAsB2oB,uBAAwBjlB,IACpF,OAAO,2BACF7N,GADL,IAEE4yB,aAGJ,IAAK,eACH,MAA6C1O,EAAOC,QAA5CkP,EAAR,EAAQA,eAAgBD,EAAxB,EAAwBA,iBAClBvtB,EAAI,2BAAQ7F,EAAM6F,MAAd,IAAoBwtB,iBAAgBD,qBAE9C,MAAO,CACLR,SAFY,2BAAQ5yB,EAAM4yB,UAAd,IAAwBI,KAAM9C,EAAe+C,yBAGzDptB,QAGJ,IAAK,2BACH,MAA4Dqe,EAAOC,QAA3DkP,EAAR,EAAQA,eAAgBD,EAAxB,EAAwBA,iBAAkBI,EAA1C,EAA0CA,cACpC3tB,EAAI,2BAAQ7F,EAAM6F,MAAd,IAAoBwtB,iBAAgBD,mBAAkBI,kBAChE,OAAO,2BACFxzB,GADL,IAEE6F,SAGJ,IAAK,oBACH,IAAMmtB,EAAO9O,EAAOC,QACdyO,EAAQ,2BAAQ5yB,EAAM4yB,UAAd,IAAwBI,SACtC,GAAIA,IAAS9C,EAAe0D,uBAAwB,CAClD,IAAMN,EAASvpB,WAAW/J,EAAM6F,KAAKytB,OAAOtpB,QA7G9B,IA+Gd,MAAO,CAAE4oB,WAAU/sB,KADT,2BAAQ7F,EAAM6F,MAAd,IAAoBytB,YAGhC,OAAO,2BAAKtzB,GAAZ,IAAmB4yB,aAErB,IAAK,SACH,IAAM/sB,EAAI,2BAAQ7F,EAAM6F,MAASqe,EAAOC,SACxC,OAAO,2BAAKnkB,GAAZ,IAAmB6F,SAErB,IAAK,eACH,MAA8Bqe,EAAOC,QAA7BmP,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,UACV1tB,EAAI,2BAAQ7F,EAAM6F,MAAd,IAAoBytB,SAAQC,cAEtC,MAAO,CAAEX,SADK,2BAAQ5yB,EAAM4yB,UAAd,IAAwBI,KAAM9C,EAAe0D,yBACxC/tB,QAErB,IAAK,wBACH,IAAMguB,EACJ7zB,EAAM4yB,SAASM,kBAAoBjD,EAAgBkD,IAAMlD,EAAgB6D,MAAQ7D,EAAgBkD,IAC7FP,EAAQ,2BAAQ5yB,EAAM4yB,UAAd,IAAwBM,gBAAiBW,IACvD,OAAO,2BAAK7zB,GAAZ,IAAmB4yB,aAErB,QACE,OAAO5yB,IA6IE+zB,EAzIiB,SAC9BC,EACA7qB,EACAD,EACAynB,EACAtnB,GAEA,MAA0B4qB,qBAAWR,EAAsB1Q,GAA3D,mBAAO/iB,EAAP,KAAcd,EAAd,KACA,EAAmCc,EAAM6F,KAAjCwtB,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,OACxB,EAAqEtzB,EAAM4yB,SAAnEC,EAAR,EAAQA,YAAa1oB,EAArB,EAAqBA,qBAAsB4oB,EAA3C,EAA2CA,gBAAiBC,EAA5D,EAA4DA,KAG5D1zB,qBAAU,WACJqxB,EAAwB,GAC1BzxB,EAAS,CAAEw0B,KAAM,0BAA2BvP,QAAS,CAAEwM,6BAExD,CAACA,IAGJrxB,qBAAU,WACR,GAAI0zB,IAAS9C,EAAe+C,uBAAwB,CAClD,IAAMiB,EAAyBnqB,WAAWspB,GACpCjqB,EAAoBypB,EAAc1oB,EAAuB,EACzDgqB,EAAoBnrB,YAAqB,CAC7CC,eAAgBirB,EAChBhrB,MACAC,oBACAC,oBACAC,mBAEI+qB,GAAetN,OAAOnL,MAAMwY,EAAkBpB,IAC9CQ,EAAYa,EAAcD,EAAkBpB,GAAmB,EAC/DsB,EAAWD,EAAcb,EAAYpqB,EAAoB,EACzDqqB,EAAgBY,EAClB5pB,YAAO,CACLC,aAAc4pB,EACd3pB,eAAgBwpB,IAElB,EACJh1B,EAAS,CAAEw0B,KAAM,SAAUvP,QAAS,CAAEmP,OAAQe,EAAUd,YAAWC,sBAEpE,CAACH,EAAgBnqB,EAAK6pB,EAAiB5pB,EAAmBE,EAAgBwpB,EAAa1oB,EAAsB6oB,IAGhH1zB,qBAAU,WACR,GAAI0zB,IAAS9C,EAAe0D,uBAAwB,CAClD,IAAMU,EAA0BrqB,YAC9BqpB,EACApqB,EACA2pB,EAAc1oB,EAAuB,EACrCd,GAEIkrB,EAAgBzN,OAAOnL,MAAM2Y,EAAwBvB,IAEvD,EADAuB,EAAwBvB,GAEtByB,EAAiB,IAAIpuB,IAAUmuB,GAAchtB,IAAIysB,GACjDR,EAAgBhpB,YAAO,CAC3BC,aAAc6oB,EACd5oB,eAAgB6pB,IAElBr1B,EAAS,CACPw0B,KAAM,2BACNvP,QAAS,CACPkP,eAAgBkB,EAAavqB,QAvMjB,GAwMZopB,iBAAkBoB,EAAexqB,QAzMnB,IA0MdwpB,sBAIL,CAACT,EAAiB7pB,EAAK2pB,EAAa1oB,EAAsB6oB,EAAMM,EAAQU,EAAmB3qB,IAuD9F,MAAO,CACLrJ,QACAy0B,yBAjD+B,SAACxyB,GAChC,IAAMyyB,EAAqB,IAAItuB,IAAUnE,GAAQsF,IAAIysB,GAC/CZ,EAAmBsB,EAAmBC,GAAG,GAAKD,EAAmB1qB,QAxNnD,IAwN8E,OAClG9K,EAAS,CAAEw0B,KAAM,eAAgBvP,QAAS,CAAEkP,eAAgBpxB,EAAQmxB,uBA+CpEwB,2BA3CiCtd,uBACjC,SAACrV,GACC,IAAM4yB,EAAmB,IAAIzuB,IAAUnE,GAAQkF,MAAM6sB,GAC/Cc,EAAuBD,EAAiBF,GAAG,GAAKE,EAAiB7qB,QA/NvD,GA+NgF,OAChG9K,EAAS,CACPw0B,KAAM,eACNvP,QAAS,CAAEkP,eAAgByB,EAAsB1B,iBAAkBnxB,OAGvE,CAAC+xB,IAmCDe,mBA/ByB,SAACC,GAC1B91B,EAAS,CAAEw0B,KAAM,qBAAsBvP,QAAS6Q,KA+BhDC,kBA3BwB,WACxB/1B,EAAS,CAAEw0B,KAAM,uBA2BjBwB,sBAvB4B,WAC5Bh2B,EAAS,CAAEw0B,KAAM,2BAuBjByB,wBA3D8B,SAACtnB,GAC/B3O,EAAS,CAAEw0B,KAAM,0BAA2BvP,QAAS,CAAEtW,YA2DvDunB,kBArBwB,SAACC,GACzBn2B,EAAS,CAAEw0B,KAAM,oBAAqBvP,QAASkR,KAqB/CC,aAjBmB,SAACrzB,GACpB,IAAMszB,EAAoB,IAAInvB,IAAUnE,GAAQsF,IAAI4B,GACpDjK,EAAS,CACPw0B,KAAM,eACNvP,QAAS,CAAEmP,OAAQrxB,EAAQsxB,UAAWgC,EAAkB5Z,QAAU,EAAI4Z,EAAkBC,iBE7QxFC,EAAU,IAGVC,EAAiBztB,YAAOC,IAAPD,CAAH,4GAID,qBAAGH,MAAkB6tB,MAAMC,QAGxCC,EAAe5tB,YAAOC,IAAPD,CAAH,2LAGC,qBAAGH,MAAkB6tB,MAAMC,QASxCE,EAAoB7tB,YAAOC,IAAPD,CAAH,mSAYV,qBAAGH,MAAkBS,OAAOgoB,cAMnCwF,EAAsB9tB,YAAOmoB,IAAPnoB,CAAH,qEAKnB+tB,EAAkB/tB,YAAO4L,KAAP5L,CAAH,kIAOjB,gBAAGguB,EAAH,EAAGA,QAASnuB,EAAZ,EAAYA,MAAZ,OACAmuB,GAAO,2GAKInuB,EAAMS,OAAOC,WALjB,6BAMIV,EAAMS,OAAOC,WANjB,wMAyGI0tB,EA/EyB,SAAC,GAA8E,IAA5EC,EAA2E,EAA3EA,mBAAoBC,EAAuD,EAAvDA,gBAAiBd,EAAsC,EAAtCA,aAAcF,EAAwB,EAAxBA,kBACtFiB,EAAWp3B,iBAAgC,MACjD,EAA6Cm3B,EAAgBvwB,KAArDytB,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,UAAWC,EAA3B,EAA2BA,cACnBR,EAASoD,EAAgBxD,SAAzBI,KAEAlyB,EAAMgW,cAANhW,EAERxB,qBAAU,WACJ0zB,IAAS9C,EAAe0D,wBAA0ByC,EAAS92B,SAC7D82B,EAAS92B,QAAQ+2B,UAElB,CAACtD,IAEJ,IAAMuD,EAAiB,WACrBnB,EAAkBlF,EAAe0D,yBASnC,OACE,cAAC8B,EAAD,UACE,eAACG,EAAD,WACE,cAAC,KAAD,CAAMxjB,SAAS,OAAOuD,MAAM,UAAUhB,MAAI,EAAC4hB,cAAc,YAAzD,SACG11B,EAAE,0BAEL,cAAC,IAAD,CAAMwV,eAAe,gBAAgBmc,GAAG,MAAMF,OAAO,OAArD,SACGS,IAAS9C,EAAe0D,uBACvB,qCACE,cAACkC,EAAD,UACE,cAAC,IAAD,CACExD,IAAK+D,EACL3C,KAAK,SACL+C,UAAU,UACVC,QAAQ,OACRngB,MAAM,KACNxU,MAAOuxB,EACPqD,YAAY,MACZ3f,UAAU,QACV4f,SAtBgB,SAACC,GAC/BvB,EAAauB,EAAMC,cAAc/0B,YAwBvB,cAAC,IAAD,CAAYwU,MAAM,KAAKrF,QAAQ,OAAOO,QA5BzB,WACvB2jB,EAAkBlF,EAAe+C,yBA2BvB,SACE,cAAC,IAAD,CAAerd,MAAM,iBAIzB,qCACE,eAACmgB,EAAD,CAAqBtkB,QAAS8kB,EAA9B,UAEE,cAAC,KAAD,CAAMlkB,SAAS,OAAOuC,MAAI,EAACgB,MAAM,UAAjC,eAGA,cAACogB,EAAD,CAAiBpgB,MAAM,UAAUvD,SAAS,OAAOuC,MAAI,EAACqhB,QAAS3C,EAtI9D,KAsID,SACGA,EAAOyD,eAAe,KAAM,CAC3BC,sBAAuB1D,EAASmC,EAAU,EAAI,EAC9CwB,sBAAuB3D,EAASmC,EAAU,EAAI,SAIpD,cAAC,IAAD,CAAYlf,MAAM,KAAKrF,QAAQ,OAAOO,QAAS8kB,EAAgBvf,UAAU,cAAzE,SACE,cAAC,KAAD,WAKR,eAAC,KAAD,CAAM3E,SAAS,OAAOuD,MAAM,UAA5B,eACK2d,EADL,IACiB4C,EADjB,KAEG3C,EAAcuD,eAAe,KAAM,CAAEC,sBAAuB,EAAGC,sBAAuB,IAFzF,cCrJFC,EAASC,YAAH,wNAeNC,EAAiBnvB,YAAOmoB,IAAPnoB,CAAH,sHAEEivB,GACR,gBAAGpvB,EAAH,EAAGA,MAAH,gBAAkBA,EAAMS,OAAOwL,QAA/B,SAgCCsjB,EAvBqC,SAAC,GAAyB,IAAvBjB,EAAsB,EAAtBA,gBACrD,EAAsB3jB,mBAAS,cAA/B,mBAAO4X,EAAP,KAAYiN,EAAZ,KACQtE,EAASoD,EAAgBxD,SAAzBI,KAUR,OAPA1zB,qBAAU,WACRg4B,GAAO,SAACC,GACN,IAAMC,EAASjpB,SAASgpB,EAAQE,MAAM,KAAK,GAAI,IAC/C,MAAM,YAAN,OAAmBD,EAAS,QAE7B,CAACpB,IAGF,cAACgB,EAAD,CAAgB9gB,eAAe,SAAS4a,GAAG,OAA3C,SACG8B,IAAS9C,EAAe+C,uBACvB,cAAC,IAAD,CAAe9qB,MAAM,OAAOoqB,OAAO,OAAO3c,MAAM,eAEhD,cAAC,IAAD,CAAazN,MAAM,OAAOoqB,OAAO,OAAO3c,MAAM,gBAJKyU,ICHrDqN,EAAczvB,YAAO0vB,KAAP1vB,CAAH,oJAWX2vB,EAAsB3vB,IAAOV,IAAV,4bAIrB,qBAAGO,MAAkB+vB,aAAa1P,MAsBhC2P,EAAsB7vB,YAAO8vB,IAAP9vB,CAAH,gOAUZ,qBAAG+vB,SAA2B,GAAM,KAiMlCC,IA9L+C,SAAC,GAiBxD,IAhBL1mB,EAgBI,EAhBJA,UACA2mB,EAeI,EAfJA,OACA/uB,EAcI,EAdJA,kBACAD,EAaI,EAbJA,IACAwnB,EAYI,EAZJA,WACAG,EAWI,EAXJA,UACAC,EAUI,EAVJA,SACAqH,EASI,EATJA,oBACAC,EAQI,EARJA,mBACApE,EAOI,EAPJA,kBACApD,EAMI,EANJA,WACAyH,EAKI,EALJA,aAKI,IAJJlC,0BAII,MAJiB,OAIjB,MAHJxF,6BAGI,MAHoB,EAGpB,MAFJtnB,sBAEI,MAFa,EAEb,MADJonB,cACI,SACI3vB,EAAMgW,cAANhW,EACA0B,EAAY0W,cAAZ1W,QACF81B,EAAkBr5B,iBAAgC,MAExD,EAUI80B,EAAwBC,EAAmB7qB,EAAmBD,EAAKynB,EAAuBtnB,GAT5FrJ,EADF,EACEA,MACAy0B,EAFF,EAEEA,yBACAG,EAHF,EAGEA,2BACAG,EAJF,EAIEA,mBACAE,EALF,EAKEA,kBACAC,EANF,EAMEA,sBACAC,EAPF,EAOEA,wBACAC,EARF,EAQEA,kBACAE,EATF,EASEA,aAGF,EAAkFt1B,EAAM4yB,SAAhFC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,uBAAwBC,EAA7C,EAA6CA,gBAAiBG,EAA9D,EAA8DA,gBAC9D,GAA6ClzB,EAAM6F,KAA3CwtB,GAAR,GAAQA,eAAgBD,GAAxB,GAAwBA,iBAGxB9zB,qBAAU,WACJg5B,EAAgB/4B,SAClB+4B,EAAgB/4B,QAAQ+2B,UAEzB,IAGHh3B,qBAAU,WACJ+4B,GACFzD,EAA2ByD,KAE5B,CAACA,EAAczD,IAElB,OAA+C3D,aAC7CR,EACI3vB,EAAE,kHACFA,EACE,yHACA,CAAEy3B,YAAaH,IAErB,CAAEjH,UAAW,UAAWC,cAAe,CAAC,GAAI,MAPtCE,GAAR,GAAQA,UAAWE,GAAnB,GAAmBA,QAASE,GAA5B,GAA4BA,eActB8G,GAActF,IAAoBjD,EAAgB6D,MAAQsE,EAAqB,MAC/EK,GAAevF,IAAoBjD,EAAgB6D,MAAQV,GAAmBC,GAC9EqF,GAAiBxF,IAAoBjD,EAAgB6D,MAAQ,MAAQsE,EACrEO,GAAkBzF,IAAoBjD,EAAgB6D,MAAQT,GAAiBD,GAC/Exb,GAAcsb,IAAoBjD,EAAgB6D,MAAQc,EAA6BH,EAE7F,OACE,eAACiD,EAAD,CACEnnB,MAAOzP,EAAE,kBACTyQ,UAAW2mB,GAAU3mB,EACrB2mB,OAAM,OAAEA,QAAF,IAAEA,IAAU,KAClBU,iBAAiB,uBAJnB,UAME,eAAChB,EAAD,WACE,eAAC,IAAD,CAAM9F,cAAc,SAAS1f,GAAG,MAAhC,UACE,cAAC,KAAD,CAAMwD,MAAM,UAAUhB,MAAI,EAACvC,SAAS,OAAOmkB,cAAc,YAAzD,SACG11B,EAAE,iBAAkB,CAAE+3B,MAAOT,MAEhC,cAAC,IAAD,CACEU,cAAa,UAAKH,GAAL,YAAwBD,IACrCK,SAAUT,EACV3B,YAAY,OACZ50B,MAAO02B,GACPO,KAAMR,GACNxhB,UAAU,gBACVY,YAAaA,GACbqhB,mBAAoB/D,EACpBgE,QA/Ba,WACrB9D,EAAkBlF,EAAe+C,2BAgC3B,eAAC,IAAD,CAAM3c,eAAe,gBAAgBmc,GAAG,MAAxC,UACE,cAAC,IAAD,CACElc,MAAM,KACNsb,EAAE,WACF1pB,MAAM,OACN+I,QAAQ,WACRO,QAAS,kBAAMgjB,EAAyB,QAL1C,kBASA,cAAC,IAAD,CACEle,MAAM,KACNsb,EAAE,WACF1pB,MAAM,OACN+I,QAAQ,WACRO,QAAS,kBAAMgjB,EAAyB,SAL1C,mBASA,cAAC,IAAD,CACEuD,SAAUG,EAAoBgB,IAAI,KAAO32B,EACzC+T,MAAM,KACNsb,EAAE,WACF1pB,MAAM,QACN+I,QAAQ,WACRO,QAAS,kBACPgjB,EAAyB2E,YAAiBjB,EAAoBhxB,MAAM6sB,IAAoB5xB,aAP5F,SAUGtB,EAAE,cAAcu4B,sBAEnB,sBAAM/G,IAAKhB,GAAX,SACE,cAAC,IAAD,CAAUnpB,MAAM,OAAOoqB,OAAO,OAAO3c,MAAM,cAE5C8b,IAAkBF,MAErB,cAAC,KAAD,CAAMiB,GAAG,OAAO7c,MAAM,UAAUhB,MAAI,EAACvC,SAAS,OAAOmkB,cAAc,YAAnE,SACG11B,EAAE,gBAEL,eAACg3B,EAAD,CAAqBwB,YAAavG,EAAiBwG,YAAaxE,EAAoBxe,MAAM,KAA1F,UACE,cAAC,IAAD,CAAgBrF,QAAQ,WAAxB,SAAoCpQ,EAAE,QACtC,cAAC,IAAD,CAAgBoQ,QAAQ,WAAxB,SAAoCpQ,EAAE,QACtC,cAAC,IAAD,CAAgBoQ,QAAQ,WAAxB,SAAoCpQ,EAAE,SACtC,cAAC,IAAD,CAAgBoQ,QAAQ,WAAxB,SAAoCpQ,EAAE,QACtC,cAAC,IAAD,CAAgBoQ,QAAQ,WAAxB,SAAoCpQ,EAAE,WAEb,IAA1B6vB,GACC,qCACE,cAAC,KAAD,CAAM8B,GAAG,OAAO7c,MAAM,UAAUhB,MAAI,EAACvC,SAAS,OAAOmkB,cAAc,YAAnE,SACG11B,EAAE,uBAEL,eAAC,IAAD,CAAMuxB,WAAW,SAAjB,UACE,cAAC,IAAD,CAAMmH,KAAK,IAAX,SACE,cAAC,IAAD,CAAUxiB,UAAU,YAAYT,MAAM,KAAKkjB,QAAS5G,EAAa+D,SAAU3B,MAE7E,cAAC,IAAD,CAAMuE,KAAK,IAAX,SACE,eAAC1B,EAAD,CACEE,UAAWnF,EACXyG,YAAaxG,EACbyG,YAAapE,EACb5e,MAAM,KAJR,UAME,cAAC,IAAD,UAAiBzV,EAAE,QACnB,cAAC,IAAD,UAAiBA,EAAE,QACnB,cAAC,IAAD,UAAiBA,EAAE,SACnB,cAAC,IAAD,UAAiBA,EAAE,uBAO/B,cAAC,EAAD,CAAes1B,gBAAiBp2B,IAChC,cAAC,IAAD,UACE,cAAC,EAAD,CACEm2B,mBAAoBA,EACpBC,gBAAiBp2B,EACjBs1B,aAAcA,EACdF,kBAAmBA,SAIzB,cAAC,EAAD,CACE3E,OAAQA,EACRvnB,IAAKA,EACLwnB,WAAYA,EACZC,sBAAuBA,EACvBC,WAAYA,EACZC,UAAWA,EACXC,SAAUA,EACVznB,eAAgBA,S,qFCjRT,SAASqwB,EAAe33B,EAAU43B,GAC/C,MAA4ClnB,mBAAY1Q,GAAxD,mBAAO63B,EAAP,KAAuBC,EAAvB,KAgBA,OAdAv6B,qBAAU,WAER,IAAMw6B,EAAUplB,YAAW,WACzBmlB,EAAkB93B,KACjB43B,GAKH,OAAO,WACLI,aAAaD,MAEd,CAAC/3B,EAAO43B,IAEJC,I,kKCqDM7iB,IAtDC,WACd,IAAQjW,EAAMgW,cAANhW,EACF5B,EAAWC,cACjB,EAAiCyE,cAAzBo2B,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,WACVC,EAAeh6B,cAAfg6B,WA+CR,MAAO,CAAE7oB,MA7CKiG,uBACZ,SAAC6iB,GACC,IAAMC,EAAYC,IAAiBF,GAC/BC,EACFJ,EAASI,EAAD,uCAAY,WAAOrsB,GAAP,SAAAtO,EAAA,2DACdsO,aAAiBusB,KADH,gCAEOC,cAFP,eAIdP,EAASI,GAJK,sBAOhBtoB,OAAOG,aAAauE,WAAW3F,MAC3B9C,aAAiBysB,KAA2BzsB,aAAiB0sB,qBAC/DP,EAAWp5B,EAAE,kBAAmBA,EAAE,0BAElCiN,aAAiB2sB,KACjB3sB,aAAiB4sB,KAEbP,aAAqBQ,MACCR,EACRS,sBAAwB,MAE1CX,EAAWp5B,EAAE,uBAAwBA,EAAE,6CAEvCo5B,EAAWnsB,EAAMX,KAAMW,EAAM+sB,SApBf,2CAAZ,uDAyBRZ,EAAWp5B,EAAE,4BAA6BA,EAAE,oCAGhD,CAACA,EAAGk5B,EAAUE,IAaAnkB,OAVDuB,uBAAY,WACzBpY,EAAS2pB,eACToR,IAEInoB,OAAOG,aAAaY,QAAQ,mBAC9BwnB,IAAiBU,cAAcC,QAC/BX,IAAiBU,cAAcF,sBAAwB,QAExD,CAACZ,EAAY/6B,O,kJC3DLq7B,EAAY,uCAAG,8BAAA96B,EAAA,2DACpBw7B,EAAWnpB,OAAOopB,UADE,wBAGlBlf,EAAUzN,SAASrK,OAAgC,IAHjC,kBAKhB+2B,EAAS1M,QAAQ,CACrBrgB,OAAQ,0BACRZ,OAAQ,CACN,CACE0O,QAAQ,KAAD,OAAOA,EAAQ5Z,SAAS,KAC/B+4B,UAAW,gBACXC,eAAgB,CACdhuB,KAAM,KACN1G,OAAQ,KACR2R,SAAU,IAEZgjB,QAASC,IACTC,kBAAmB,CAAC,GAAD,OAAIC,IAAJ,UAjBH,iCAqBf,GArBe,uCAuBtB1tB,QAAQC,MAAM,2CAAd,MAvBsB,mBAwBf,GAxBe,uCA2BxBD,QAAQC,MAAM,gFA3BU,mBA4BjB,GA5BiB,yDAAH,qDAuCZ0tB,EAAa,uCAAG,WAAOhe,EAAsBoD,EAAqB/B,GAAlD,eAAArf,EAAA,sEACFqS,OAAOopB,SAAS3M,QAAQ,CAC/CrgB,OAAQ,oBACRZ,OAAQ,CACNomB,KAAM,QACNgI,QAAS,CACPj7B,QAASgd,EACT/W,OAAQma,EACRxI,SAAUyG,EACV6c,MAAM,GAAD,OAAKC,IAAL,0BAA+Bne,EAA/B,YATgB,cACrBoe,EADqB,yBAcpBA,GAdoB,2CAAH,2D,iCChD1B,8CAEO,SAASpkB,EAAW7U,GACzB,GAAIA,IAAaa,IAAO,MAAO,KAC/B,GAAIb,aAAoBC,IAAO,OAAOD,EAASnC,QAC/C,MAAM,IAAIF,MAAM,sB,+9ICAH,SAASu7B,EAAUC,GAAwB,IAAD,IAEvD,OADiBA,EAAItE,MAAM,KAAK,GAAG7b,eAEjC,IAAK,QACH,MAAO,CAACmgB,GACV,IAAK,OACH,MAAO,CAAC,QAAD,OAASA,EAAIC,OAAO,IAAMD,GACnC,IAAK,OACH,IAAM5e,EAAI,UAAG4e,EAAIxR,MAAM,8BAAb,aAAG,EAAmC,GAChD,MAAO,CAAC,oCAAD,OAAqCpN,EAArC,oCAAsEA,EAAtE,MACT,IAAK,OACH,IAAM/P,EAAI,UAAG2uB,EAAIxR,MAAM,8BAAb,aAAG,EAAmC,GAChD,MAAO,CAAC,oCAAD,OAAqCnd,EAArC,oCAAsEA,EAAtE,MACT,QACE,MAAO,IAnBb,mC,gFCaM2V,G,OAA2B,CAC/BwF,eAAe,EACf7b,WAAW,EACX7G,KAV2Bo2B,IAAUt6B,QAAO,SAACu6B,EAAOtU,GACpD,OAAO,2BACFsU,GADL,kBAEGtU,EAAKza,GAAKya,MAEZ,MAQUuU,EAAapY,YAAY,CACpC3W,KAAM,QACN2V,eACAiB,SAAU,CACRoY,WAAY,SAACp8B,GACXA,EAAM0M,WAAY,GAEpB2vB,YAAa,SAACr8B,GACZA,EAAM0M,WAAY,EAClB1M,EAAMuoB,eAAgB,GAExB+T,mBAAoB,SAACt8B,EAAOkkB,GAC1BlkB,EAAMuoB,eAAgB,EACtBvoB,EAAM0M,WAAY,EAClB1M,EAAM6F,KAAKqe,EAAOC,QAAQhX,IAAM+W,EAAOC,SAEzCoY,oBAAqB,SAACv8B,EAAOkkB,GAC3BlkB,EAAMuoB,eAAgB,EACtBvoB,EAAM0M,WAAY,EAClB1M,EAAM6F,KAAOqe,EAAOC,YAMnB,EAA6EgY,EAAWtX,QAAxF,EAAQuX,WAAR,EAAoBE,mBAApB,EAAwCD,YAAxC,EAAqDE,oBAuB7CJ,MAAf,S,iCCnEA,YAGMx2B,EAAsB,CAC1B,CACEN,IAAK,EACLsB,SAAU,WACVyX,YAAa,CACX,KAAM,8CAERvc,MAAOnB,IAAO87B,GACdne,WAAY3d,IAAO+7B,IACnB/a,aAAchhB,IAAO87B,IAEvB,CACEn3B,IAAK,EACLsB,SAAU,aACVyX,YAAa,CACX,KAAM,8CAERvc,MAAOnB,IAAO87B,GACdne,WAAY3d,IAAO+gB,KACnBC,aAAchhB,IAAO87B,KAIV72B,O,6NCDT+2B,EAAUz0B,IAAOV,IAAV,4CAGPo1B,EAAU10B,YAAO20B,IAAP30B,CAAH,8CAIP40B,EAAgB50B,YAAO60B,IAAP70B,CAAH,gDAInB,SAAS80B,EAAT,GAA+E,IAAzCC,EAAwC,EAAxCA,YAC5Bl8B,EAAMgW,cAANhW,EACR,OACE,eAAC47B,EAAD,WACE,cAACG,EAAD,UACE,cAAC,IAAD,MAEF,eAAC,IAAD,CAAYI,IAAI,OAAOC,QAAQ,SAA/B,UACE,cAAC,KAAD,CAAM7qB,SAAS,OAAf,SAAuBvR,EAAE,8BACzB,cAAC,IAAD,CAAYm8B,IAAI,OAAOC,QAAQ,SAA/B,SACE,cAAC,KAAD,CAAMtoB,MAAI,EAACD,OAAK,EAACwd,UAAU,SAA3B,SACG6K,MAGL,cAAC,KAAD,CAAMroB,OAAK,EAACiB,MAAM,aAAauc,UAAU,SAAzC,SACGrxB,EAAE,mDAOb,SAASq8B,EAAT,GAUI,IAAD,EATD5rB,EASC,EATDA,UACAyK,EAQC,EARDA,QACAmB,EAOC,EAPDA,KACAigB,EAMC,EANDA,cAOQC,EAAYnkB,cAAZmkB,QAEAv8B,EAAMgW,cAANhW,EAEFe,EAA2BwjB,YAAgB+X,EAAephB,GAEhE,OACE,cAAC0gB,EAAD,UACE,eAACC,EAAD,WACE,cAACE,EAAD,UACE,cAAC,IAAD,CAAaS,YAAa,GAAKn1B,MAAM,OAAOyN,MAAM,cAEpD,eAAC,IAAD,CAAYqnB,IAAI,OAAOC,QAAQ,SAA/B,UACE,cAAC,KAAD,CAAM7qB,SAAS,OAAf,SAAuBvR,EAAE,2BACxBkb,GAAWmB,GACV,cAAC,IAAD,CAAMogB,UAAQ,EAAC5oB,OAAK,EAACyB,KAAMonB,YAAergB,EAAM,cAAenB,GAA/D,SACGlb,EAAE,qBAGNs8B,IAAa,OAAIC,QAAJ,IAAIA,GAAJ,UAAIA,EAASpC,gBAAb,aAAI,EAAmBwC,aACnC,cAAC,IAAD,CACEvsB,QAAQ,WACRuhB,GAAG,OACHtqB,MAAM,cACNsJ,QAAS,kBAAMgqB,YAAc55B,EAAMpB,QAASoB,EAAM6E,OAAQ7E,EAAMwW,WAJlE,SAME,eAAC,IAAD,WACGvX,EAAE,0BAA2B,CAAE+3B,MAAOuE,EAAc12B,SACrD,cAAC,KAAD,CAAcyB,MAAM,OAAO0N,GAAG,aAIpC,cAAC,IAAD,CAAQpE,QAASF,EAAWkhB,GAAG,OAA/B,SACG3xB,EAAE,mBAQR,SAAS48B,EAAT,GAMH,IALFC,EAKC,EALDA,cACAC,EAIC,EAJDA,WAKA,OACE,eAAClB,EAAD,WACE,cAAC,IAAD,UAAMkB,MACN,cAAC,IAAD,UAAMD,SAKL,SAASE,EAAT,GAAsG,IAAnE/C,EAAkE,EAAlEA,QAASvpB,EAAyD,EAAzDA,UACzCzQ,EAAMgW,cAANhW,EACR,OACE,eAAC47B,EAAD,WACE,eAAC,IAAD,CAAYQ,QAAQ,SAApB,UACE,cAAC,IAAD,CAAWtnB,MAAM,UAAUzN,MAAM,SACjC,cAAC,KAAD,CAAMyN,MAAM,UAAUtC,MAAO,CAAE6e,UAAW,SAAUhqB,MAAO,OAA3D,SACG2yB,OAIL,cAAC,IAAD,CAAMxkB,eAAe,SAASwnB,GAAG,OAAjC,SACE,cAAC,IAAD,CAAQrsB,QAASF,EAAjB,SAA6BzQ,EAAE,kBAuDxBi9B,IAvC6E,SAAC,GAStF,IARLxtB,EAQI,EARJA,MACAgB,EAOI,EAPJA,UACAysB,EAMI,EANJA,gBACAC,EAKI,EALJA,cACA9gB,EAII,EAJJA,KACA6f,EAGI,EAHJA,YACA7nB,EAEI,EAFJA,QACAioB,EACI,EADJA,cAEQphB,EAAY9C,cAAZ8C,QAEFkiB,EAAgB5mB,uBAAY,WAC5B0mB,GACFA,IAEFzsB,MACC,CAACysB,EAAiBzsB,IAErB,OAAKyK,EAGH,cAAC,IAAD,CAAOzL,MAAOA,EAAOqoB,iBAAiB,uBAAuBrnB,UAAW2sB,EAAxE,SACGD,EACC,cAAClB,EAAD,CAA4BC,YAAaA,IACvC7f,EACF,cAACggB,EAAD,CACEnhB,QAASA,EACTmB,KAAMA,EACN5L,UAAWA,EACX6rB,cAAeA,IAGjBjoB,MAde,O,iICpKR,SAAS0E,EAAOskB,GAK7B,IAAMC,EAAYr9B,YAAUo9B,GACtBE,ECFO,SAAoB59B,GAAiE,IAAD,MAC3F69B,EAAmB5E,YAAYj5B,EAAS,KACxC89B,EAAkB39B,mBAAQ,WAC9B,IAAK09B,IAAqBv9B,YAAUu9B,GAAmB,MAAO,MAACh+B,GAC/D,IACE,OAAOg+B,EAAmB,CAACE,mBAAS,GAAD,OAAIF,EAAiB1iB,cAAcogB,OAAO,GAA1C,mBAAgE,MAAC17B,GACpG,MAAOyN,GACP,MAAO,MAACzN,MAET,CAACg+B,IACEG,EAAoBC,aAAwB,GAC5CC,EAAkBC,YAAoBH,EAAmB,WAAYF,GACrEM,EAAqB,UAAGF,EAAgB38B,cAAnB,aAAG,EAAyB,GACjD88B,EAAmBC,YACvBF,IAA0BrR,YAAOqR,GAAyBA,OAAwBv+B,GAClF,GAEI8M,EAAOwxB,YAAoBE,EAAkB,OAAQP,GAErDS,EAAUV,IAAqB79B,EACrC,MAAO,CACLw+B,QAASD,EAAU,KAAH,oBAAU5xB,EAAKpL,cAAf,aAAU,EAAc,UAAxB,QAA8B,KAC9CP,QAASu9B,GAAWL,EAAgBl9B,SAAW2L,EAAK3L,SDpBhCy9B,CAAWd,QAAa99B,GACxC6+B,EELO,SAAuBC,GAAwE,IAAD,MACrGC,EAAgB3F,YAAY0F,EAAS,KACrCb,EAAkB39B,mBAAQ,WAC9B,IAAKy+B,EAAe,MAAO,MAAC/+B,GAC5B,IACE,OAAO++B,EAAgB,CAACb,mBAASa,IAAkB,MAAC/+B,GACpD,MAAOyN,GACP,MAAO,MAACzN,MAET,CAAC++B,IACEZ,EAAoBC,aAAwB,GAC5CC,EAAkBC,YAAoBH,EAAmB,WAAYF,GACrEM,EAAqB,UAAGF,EAAgB38B,cAAnB,aAAG,EAAyB,GACjD88B,EAAmBC,YACvBF,IAA0BrR,YAAOqR,GAAyBA,OAAwBv+B,GAClF,GAEIg/B,EAAOV,YAAoBE,EAAkB,OAAQP,GAErDS,EAAUK,IAAkBD,EAClC,MAAO,CACL3+B,QAASu+B,EAAU,KAAH,oBAAUM,EAAKt9B,cAAf,aAAU,EAAc,UAAxB,QAA8B,KAC9CP,QAASu9B,GAAWL,EAAgBl9B,SAAW69B,EAAK79B,SFjBvC89B,CAAcpB,GAE7B,MAAO,CACL18B,QAAS48B,EAAc58B,SAAW09B,EAAO19B,QACzChB,QAAS29B,GAAae,EAAO1+B,QAC7B2M,KAAMixB,EAAcY,QAAUZ,EAAcY,SAAWb,GAAae,EAAO1+B,SAAU09B,GAAwB,Q,0KGhB1G,SAASqB,EACdC,EACAC,GAEsB,IADtBC,EACqB,uDADGC,IAExB,GAAIH,IAAWC,EAAQ,OAAO,EAC9B,GAAIA,IAAWD,EAAQ,OAAO,EAC9B,GAAKA,GAAWC,EAAhB,CAEA,GACED,EAAOI,YAAcH,EAAOG,YAC3BC,YAAeL,EAAOM,YAAYn9B,SAAU88B,EAAOK,YAAYn9B,YAC/Dk9B,YAAeJ,EAAOM,aAAap9B,SAAU88B,EAAOM,aAAap9B,UAElE,MAAM,IAAIrC,MAAM,6BAGlB,OAAIo/B,EAAaM,QAAQL,KAChBH,EAAOS,eAAellB,SAAS0kB,EAAOQ,gBAExCT,EAAOS,eAAeC,IAAIC,SAAST,EAAaU,IAAIC,MAAsBtlB,SAAS0kB,EAAOQ,iBAGpFV,I,kECRf,SAASe,EAAkBpb,EAAsBC,GAC/C,IAAQpJ,EAAY9C,cAAZ8C,QAER,EAAyBA,EACrB,CAACqJ,YAAgBF,EAAWnJ,GAAUqJ,YAAgBD,EAAWpJ,IACjE,MAAC1b,OAAWA,GAFhB,mBAAOilB,EAAP,KAAeC,EAAf,KAIMgb,EAAiB5/B,mBAAQ,WAAO,IAAD,UACnC,IAAKob,EAAS,MAAO,GAErB,IAAMykB,EAAM,UAAGC,IAA8B1kB,UAAjC,QAA6C,GACnD2kB,EAAcpb,GAAM,oBAAGqb,IAAiB5kB,UAApB,aAAG,EAA4BuJ,EAAO9kB,gBAAtC,QAAuD,GAC3EogC,EAAcrb,GAAM,oBAAGob,IAAiB5kB,UAApB,aAAG,EAA4BwJ,EAAO/kB,gBAAtC,QAAuD,GAEjF,MAAM,GAAN,mBAAWggC,GAAX,YAAsBE,GAAtB,YAAsCE,MACrC,CAAC7kB,EAASuJ,EAAQC,IAEfsb,EAA8BlgC,mBAClC,kBAAMmgC,IAAQP,GAAO,SAACQ,GAAD,OAA4BR,EAAMv/B,KAAI,SAACggC,GAAD,MAAe,CAACD,EAAMC,WACjF,CAACT,IAGGU,EAAwCtgC,mBAC5C,kBACE2kB,GAAUC,EACN,CAEE,CAACD,EAAQC,IAFX,mBAIKgb,EAAMv/B,KAAI,SAAC+/B,GAAD,MAA0B,CAACzb,EAAQyb,OAJlD,YAMKR,EAAMv/B,KAAI,SAAC+/B,GAAD,MAA0B,CAACxb,EAAQwb,OANlD,YAQKF,IAEFjgC,QAAO,SAACH,GAAD,OAAsCwgB,QAAQxgB,EAAO,IAAMA,EAAO,OACzEG,QAAO,mCAAEsgC,EAAF,KAAMC,EAAN,YAAcD,EAAG1gC,UAAY2gC,EAAG3gC,WACvCI,QAAO,YAAyB,IAAD,mBAAtBwgC,EAAsB,KAAbC,EAAa,KAC9B,IAAKtlB,EAAS,OAAO,EACrB,IAAMulB,EAAcC,IAAaxlB,GAE3BylB,EAAiC,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAcF,EAAQ5gC,SAC1DihC,EAAiC,OAAGH,QAAH,IAAGA,OAAH,EAAGA,EAAcD,EAAQ7gC,SAEhE,OAAKghC,IAAiBC,KAElBD,IAAiBA,EAAa37B,MAAK,SAACk7B,GAAD,OAAUM,EAAQ7b,OAAOub,UAC5DU,IAAiBA,EAAa57B,MAAK,SAACk7B,GAAD,OAAUK,EAAQ5b,OAAOub,UAIpE,KACN,CAACzb,EAAQC,EAAQgb,EAAOM,EAAW9kB,IAG/B2lB,EAAWzc,YAASgc,GAG1B,OAAOtgC,mBACL,kBACEmD,OAAOC,OACL29B,EAEG9gC,QAAO,SAACmB,GAAD,OAAgDkf,QAAQlf,EAAO,KAAO8iB,IAAUsB,QAAUpkB,EAAO,OAExGL,QAAwC,SAACC,EAAD,GAAqB,IAAD,EAAVggC,EAAU,oBAE3D,OADAhgC,EAAKggC,EAAK7oB,eAAetY,SAAzB,UAAoCmB,EAAKggC,EAAK7oB,eAAetY,gBAA7D,QAAyEmhC,EAClEhgC,IACN,OAET,CAAC+/B,IASE,SAASxnB,EAAgB0nB,EAAmCC,GACjE,IAAMC,EAAexB,EAAiB,OAACsB,QAAD,IAACA,OAAD,EAACA,EAAkBj/B,SAAUk/B,GAEnE,EAAwBE,cAAjBC,EAAP,oBAEA,OAAOrhC,mBAAQ,WACb,GAAIihC,GAAoBC,GAAeC,EAAargC,OAAS,EAAG,CAC1C,IAAD,EAAnB,GAAIugC,EACF,iBACEC,IAAMhoB,iBAAiB6nB,EAAcF,EAAkBC,EAAa,CAAEK,QAAS,EAAGC,cAAe,IAAK,UADxG,QAEE,KAKJ,IADA,IAAIC,EAA+B,KAC1BvgC,EAAI,EAAGA,GApBL,EAoBoBA,IAAK,CAAC,IAAD,EAC5BwgC,EAA0B,UAC9BJ,IAAMhoB,iBAAiB6nB,EAAcF,EAAkBC,EAAa,CAAEK,QAASrgC,EAAGsgC,cAAe,IAAK,UADxE,QAE9B,KAEE5C,EAAc6C,EAAgBC,EAAcC,OAC9CF,EAAiBC,GAGrB,OAAOD,EAGT,OAAO,OACN,CAACN,EAAcF,EAAkBC,EAAaG,IAM5C,SAAS5nB,EAAiBmoB,EAAuBC,GACtD,IAAMV,EAAexB,EAAkBiC,EAAD,OAAaC,QAAb,IAAaA,OAAb,EAAaA,EAAmB7/B,UAEtE,EAAwBo/B,cAAjBC,EAAP,oBAEA,OAAOrhC,mBAAQ,WACb,GAAI4hC,GAAcC,GAAqBV,EAAargC,OAAS,EAAG,CAC1C,IAAD,EAAnB,GAAIugC,EACF,iBACEC,IAAM9nB,kBAAkB2nB,EAAcS,EAAYC,EAAmB,CAAEN,QAAS,EAAGC,cAAe,IAAK,UADzG,QAEE,KAKJ,IADA,IAAIC,EAA+B,KAC1BvgC,EAAI,EAAGA,GAtDL,EAsDoBA,IAAK,CAAC,IAAD,EAC5BwgC,EAAY,UAChBJ,IAAM9nB,kBAAkB2nB,EAAcS,EAAYC,EAAmB,CAAEN,QAASrgC,EAAGsgC,cAAe,IAAK,UADvF,QAEhB,KACE5C,EAAc6C,EAAgBC,EAAcC,OAC9CF,EAAiBC,GAGrB,OAAOD,EAET,OAAO,OACN,CAACG,EAAYC,EAAmBV,EAAcE,IAG5C,SAASS,EAA4BF,EAAuBV,GACjE,IAAMa,EAAkDC,cAChD5mB,EAAY9C,cAAZ8C,QAEF6mB,EAAUxd,YAAgBmd,EAAYxmB,GACtC8mB,EAAWzd,YAAgByc,EAAa9lB,GAG9C,GAAI2mB,EAAmB,CACrB,GAAIE,GAAW9+B,OAAOkI,KAAK02B,GAAmBvf,SAASyf,EAAQpiC,SAC7D,OAAO,EAET,GAAIqiC,GAAY/+B,OAAOkI,KAAK02B,GAAmBvf,SAAS0f,EAASriC,SAC/D,OAAO,EAIX,OAAO,I,ihaClLT,oEAAO,IAAMsiC,EAA2B,KAE3Bt0B,EAAiC,G,oGCCjCu0B,EAAyB,CACpCzyB,MAAO,SACP0yB,YACE,4WACFtH,MAAO,oB,wCCEHuH,EAAaj7B,YAAOk7B,IAAPl7B,CAAH,oPAKZ,qBAAGH,MAAkB+vB,aAAa1P,MAKlC,qBAAGrgB,MAAkB+vB,aAAauL,MAMhCC,EAAW,WACf,IAAQviC,EAAMgW,cAANhW,EACAwiC,EAAapnB,cAAbonB,SACFC,EAAe/7B,cACfg8B,EAAsBD,EAAa5O,GAAG,GAAhB,WACpB4O,EAAa/N,WAAWuB,oBAAez2B,EAAW,CACpD02B,sBAAuB,EACvBC,sBAAuB,KAEzB,GAEEwM,ED1BqB,SAAC7qB,EAAc9X,GAC1C,OAAQ8X,GACN,IAAK,IACH,MAAO,CACLrI,MAAM,GAAD,OAAKzP,EAAE,QAAP,cAAoBA,EAAE,YAE/B,IAAK,eACH,MAAO,CACLyP,MAAM,GAAD,OAAKzP,EAAE,kBAAP,cAA8BA,EAAE,YAEzC,IAAK,cACH,MAAO,CACLyP,MAAM,GAAD,OAAKzP,EAAE,cAAP,cAA0BA,EAAE,YAErC,IAAK,SACH,MAAO,CACLyP,MAAM,GAAD,OAAKzP,EAAE,SAAP,cAAqBA,EAAE,YAEhC,IAAK,SACH,MAAO,CACLyP,MAAM,GAAD,OAAKzP,EAAE,SAAP,cAAqBA,EAAE,YAEhC,IAAK,WACH,MAAO,CACLyP,MAAM,GAAD,OAAKzP,EAAE,WAAP,cAAuBA,EAAE,YAElC,IAAK,gBACH,MAAO,CACLyP,MAAM,GAAD,OAAKzP,EAAE,gBAAP,cAA4BA,EAAE,YAEvC,IAAK,OACH,MAAO,CACLyP,MAAM,GAAD,OAAKzP,EAAE,yBAAP,cAAqCA,EAAE,YAEhD,IAAK,SACH,MAAO,CACLyP,MAAM,GAAD,OAAKzP,EAAE,eAAP,cAA2BA,EAAE,YAEtC,IAAK,iBACH,MAAO,CACLyP,MAAM,GAAD,OAAKzP,EAAE,eAAP,cAA2BA,EAAE,YAEtC,IAAK,WACH,MAAO,CACLyP,MAAM,GAAD,OAAKzP,EAAE,gBAAP,cAA4BA,EAAE,YAEvC,QACE,MAAO,CACLyP,MAAM,GAAD,OAAKzP,EAAE,aCtBD4iC,CAAcJ,EAAUxiC,IAAM,GAC/C,6BAA2CkiC,GAAiBS,GAApDlzB,EAAR,EAAQA,MACFozB,GADN,EAAeV,YAAf,EAA4BtH,MACV6H,EAAsB,CAACjzB,GAAOqzB,KAAK,OAASrzB,GAE9D,OACE,cAAC,IAAD,UACE,gCAAQozB,OAcCE,IAT8C,SAAC,GAA4B,IAA1BvvB,EAAyB,EAAzBA,SAAaC,EAAY,iBACvF,OACE,qCACE,cAAC,EAAD,IACA,cAAC2uB,EAAD,2BAAgB3uB,GAAhB,aAAwBD,U,4NC/CxBonB,EAAU,CACdoI,SAAUC,KAGCC,EAAS,uCAAG,WAAOC,EAAoB5+B,EAAKpD,GAAhC,qBAAAxC,EAAA,6DACjBgQ,EAAWL,cACXrN,EAAQ,IAAIqE,IAAUnE,GAAQkF,MAAM+8B,KAAuB9hC,WAF1C,SAIN6hC,EAAmBE,QAAQ9+B,EAAKtD,EAAhC,2BAA4C25B,GAA5C,IAAqDjsB,cAJ/C,cAIjBmO,EAJiB,gBAKDA,EAAGwmB,OALF,cAKjBvmB,EALiB,yBAMhBA,EAAQ1S,QANQ,2CAAH,0DASTk5B,EAAW,uCAAG,WAAOJ,EAAoB5+B,EAAKpD,GAAhC,qBAAAxC,EAAA,6DACnBgQ,EAAWL,cACXrN,EAAQ,IAAIqE,IAAUnE,GAAQkF,MAAM+8B,KAAuB9hC,WAFxC,SAIR6hC,EAAmBK,SAASj/B,EAAKtD,EAAjC,2BAA6C25B,GAA7C,IAAsDjsB,cAJ9C,cAInBmO,EAJmB,gBAKHA,EAAGwmB,OALA,cAKnBvmB,EALmB,yBAMlBA,EAAQ1S,QANU,2CAAH,0DASXo5B,EAAW,uCAAG,WAAON,EAAoB5+B,GAA3B,mBAAA5F,EAAA,6DACnBgQ,EAAWL,cADQ,SAGR60B,EAAmBE,QAAQ9+B,EAAK,IAAhC,2BAA0Cq2B,GAA1C,IAAmDjsB,cAH3C,cAGnBmO,EAHmB,gBAIHA,EAAGwmB,OAJA,cAInBvmB,EAJmB,yBAKlBA,EAAQ1S,QALU,2CAAH,wD,mEC1BxB,gHAOaq5B,EAAkB,WAC7B,IAAQhiC,EAAYoB,cAAZpB,QACFtD,EAAWC,cAEjBG,qBAAU,WACRJ,EAAS6pB,YAAavmB,MACrB,CAACA,EAAStD,KAGFulC,EAAa,WACxB,MAAwE1kC,aAAY,SAACC,GAAD,OAAkBA,EAAMynB,WAApGc,EAAR,EAAQA,cAAe7b,EAAvB,EAAuBA,UAAW7G,EAAlC,EAAkCA,KAAM2hB,EAAxC,EAAwCA,cACxC,MAAO,CAAEC,QAAS5hB,EAAM6+B,WAAYnc,GAAiBf,EAAee,gBAAe7b,e,yGCXhFi4B,EAMAC,E,8GANAD,K,4BAAAA,E,oBAAAA,E,uBAAAA,M,cAMAC,K,6BAAAA,M,KAIL,I,UAqKeC,EArKM,WACnB,IAWIC,EAWAC,EAtBJ,EAA0DrqB,cAA1D,mBAAOsqB,EAAP,KAA8BC,EAA9B,KACA,EAAsBC,cAAtB,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAA0C3yB,mBAAS,IAAnD,mBAAO4yB,EAAP,KAAsBC,EAAtB,KACA,EAA0C7yB,mBAAS,IAAnD,mBAAO8yB,EAAP,KAAsBC,EAAtB,KAEQ1kC,EAAMgW,cAANhW,EAEF2kC,EACc,KAAlBJ,IAAyBL,EAAwB,KAAKh7B,QAAQ,KAAO8c,OAAO/c,WAAWs7B,GAAer7B,QAAQ,GAC1G07B,EAAyC,KAAlBH,IAAyBJ,EAAM,IAAI/iC,aAAemjC,EAM7ET,EAHoB,KAAlBO,GAAyBI,EAElBA,GAAwBT,EAAwB,GACzCL,EAAcgB,SACrBF,GAAwBT,EAAwB,IACzCL,EAAciB,eAEdtlC,EANAqkC,EAAckB,aAa9Bd,EAHoB,KAAlBQ,GAAyBG,OAGXplC,EAFAskC,EAAciB,aAKhC,IAAMC,EAAsB,SAAC/jC,GAC3BujC,EAAiBvjC,GAEjB,IACE,IAAMgkC,EAA6Bjf,OAAOvY,UAAqC,IAA3BuY,OAAO/c,WAAWhI,IAAcK,aAC/E0kB,OAAOnL,MAAMoqB,IAA+BA,EAA6B,KAC5Ed,EAAyBc,GAE3B,MAAOh4B,GACPD,QAAQC,MAAMA,KAIZi4B,EAAsB,SAACjkC,GAC3ByjC,EAAiBzjC,GAEjB,IACE,IAAMkkC,EAA8C,GAAzBnf,OAAOvY,SAASxM,IACtC+kB,OAAOnL,MAAMsqB,IAAeA,EAAa,GAC5Cb,EAAOa,GAET,MAAOl4B,GACPD,QAAQC,MAAMA,KAIlB,OACE,eAAC,IAAD,CAAM+jB,cAAc,SAApB,UACE,eAAC,IAAD,CAAMA,cAAc,SAAS1f,GAAG,OAAhC,UACE,eAAC,IAAD,CAAMA,GAAG,OAAT,UACE,cAAC,KAAD,CAAMwD,MAAM,UAAZ,SAAuB9U,EAAE,wBACzB,cAAColC,EAAA,EAAD,CACEC,KAAMrlC,EACJ,6HAEFqwB,UAAU,YACVtb,GAAG,WAGP,eAAC,IAAD,CAAMuwB,SAAS,OAAf,UACE,cAACp1B,EAAA,EAAD,CACEyhB,GAAG,MACHpc,GAAG,MACHE,MAAM,KACN9E,QAAS,WACP6zB,EAAiB,IACjBL,EAAyB,KAE3B/zB,QAAmC,KAA1B8zB,EAA+B,UAAY,WARtD,kBAYA,cAACh0B,EAAA,EAAD,CACEyhB,GAAG,MACHpc,GAAG,MACHE,MAAM,KACN9E,QAAS,WACP6zB,EAAiB,IACjBL,EAAyB,KAE3B/zB,QAAmC,KAA1B8zB,EAA+B,UAAY,WARtD,kBAYA,cAACh0B,EAAA,EAAD,CACEqF,GAAG,MACHoc,GAAG,MACHlc,MAAM,KACN9E,QAAS,WACP6zB,EAAiB,IACjBL,EAAyB,MAE3B/zB,QAAmC,MAA1B8zB,EAAgC,UAAY,WARvD,kBAYA,eAAC,IAAD,CAAM3S,WAAW,SAAjB,UACE,cAAC,IAAD,CAAKlqB,MAAM,OAAOsqB,GAAG,MAArB,SACE,cAAC,IAAD,CACElc,MAAM,KACNogB,aAAcqO,EAAwB,KAAKh7B,QAAQ,GACnDjI,MAAOsjC,EACPgB,OAAQ,WACNP,GAAqBd,EAAwB,KAAKh7B,QAAQ,KAE5D4sB,SAAU,SAAC0P,GAAD,OAAOR,EAAoBQ,EAAEC,OAAOxkC,QAC9CykC,WAAYf,EACZgB,WAAY,CAAC,GAAI,GAAI,KAAKrjB,SAAS4hB,GACnC1xB,MAAO,CAAEozB,UAAW,YAGxB,cAAC,KAAD,CAAM9wB,MAAM,UAAUhB,MAAI,EAACiB,GAAG,MAA9B,uBAKDivB,GACD,cAAC,KAAD,CAAMzyB,SAAS,OAAOuD,MAAOkvB,IAAkBH,EAAckB,aAAe,MAAQ,UAAWpT,GAAG,MAAlG,SACGqS,IAAkBH,EAAckB,aAC7B/kC,EAAE,qCACFgkC,IAAkBH,EAAcgB,SAChC7kC,EAAE,6BACFA,EAAE,yCAIZ,eAAC,IAAD,CAAMwV,eAAe,gBAAgB+b,WAAW,SAASjgB,GAAG,OAA5D,UACE,eAAC,IAAD,CAAMigB,WAAW,SAAjB,UACE,cAAC,KAAD,UAAOvxB,EAAE,wBACT,cAAColC,EAAA,EAAD,CACEC,KAAMrlC,EAAE,oFACRqwB,UAAU,YACVtb,GAAG,WAGP,cAAC,IAAD,UACE,cAAC,IAAD,CAAK1N,MAAM,OAAOsqB,GAAG,MAArB,SACE,cAAC,IAAD,CACElc,MAAM,KACNX,MAAOmvB,EAAgB,WAAQzkC,EAC/B+lC,OAAQ,WACNL,GAAqBb,EAAM,IAAI/iC,aAEjCu0B,aAAcwO,EAAM,IAAI/iC,WACxBL,MAAOwjC,EACP3O,SAAU,SAAC0P,GAAD,OAAON,EAAoBM,EAAEC,OAAOxkC,QAC9CuR,MAAO,CAAEozB,UAAW,qB,SC1KnBz+B,cAAO0+B,IAAP1+B,CAAf,uQAEwB,qBAAGH,MAAkBS,OAAOwL,WCwErC6yB,EAjEiC,SAAC,GAG1C,IAFLC,EAEI,EAFJA,0BACAC,EACI,EADJA,qCAEA,EAA6BC,cAApBC,EAAT,oBACA,EAAkDv0B,oBAAS,GAA3D,mBAAOw0B,EAAP,KAA0BC,EAA1B,KAEQpmC,EAAMgW,cAANhW,EAER,OACE,eAAC62B,EAAA,EAAD,CACEpnB,MAAOzP,EAAE,eACTo3B,OAAQ,kBAAM2O,GAA0B,IACxCt1B,UAAW,kBAAMs1B,GAA0B,IAC3CjO,iBAAiB,uBACjBtlB,MAAO,CAAE6zB,SAAU,SALrB,UAOE,cAAC,KAAD,CAASj2B,QAAQ,UAAUkB,GAAG,OAA9B,SACE,cAAC,KAAD,UACGtR,EACC,8IAIN,cAAC,KAAD,CAAMsR,GAAG,OAAT,SAAiBtR,EAAE,4DACnB,eAAC,IAAD,CAAMuxB,WAAW,SAASjgB,GAAG,OAA7B,UACE,cAACu0B,EAAD,CACEv5B,KAAK,YACLsmB,KAAK,WACL+F,QAASwN,EACTrQ,SAAU,kBAAMsQ,GAAsBD,IACtC1wB,MAAM,OAER,cAAC,KAAD,CAAMV,GAAG,OAAOD,MAAM,aAAatC,MAAO,CAAE8zB,WAAY,QAAxD,SACGtmC,EAAE,mCAGP,cAAC,IAAD,CACEsR,GAAG,MACHjF,GAAG,sBACHsE,QAAS,WAEwE,YAA3EK,OAAOu1B,OAAP,2DACFL,IACAH,GAA0B,GACtBI,GACFH,GAAqC,KAT7C,SAcGhmC,EAAE,yBAEL,cAAC,IAAD,CACEoQ,QAAQ,YACRO,QAAS,WACPo1B,GAA0B,IAH9B,SAMG/lC,EAAE,gB,QCNIwmC,EAzDK,WAClB,IAAQxmC,EAAMgW,cAANhW,EACR,EAAgCymC,cAAhC,mBAAO93B,EAAP,KAAiB+3B,EAAjB,KAEA,OACE,eAAC,IAAD,CAAM1V,cAAc,SAApB,UACE,eAAC,IAAD,CAAM1f,GAAG,OAAOigB,WAAW,SAA3B,UACE,cAAC,KAAD,CAAMzc,MAAM,UAAZ,SAAuB9U,EAAE,sCACzB,cAAColC,EAAA,EAAD,CACEC,KAAMrlC,EACJ,0GAEFqwB,UAAU,YACVtb,GAAG,WAGP,eAAC,IAAD,CAAMuwB,SAAS,OAAO9vB,eAAe,gBAArC,UACE,cAACtF,EAAA,EAAD,CACEyhB,GAAG,MACHlc,MAAM,KACN9E,QAAS,WACP+1B,EAAY93B,IAAeC,UAE7BuB,QAASzB,IAAaC,IAAeC,QAAU,UAAY,WAC3D,eAAcF,IAAaC,IAAeC,QAAU,UAAY,WAPlE,SASG7O,EAAE,wBAAyB,CAAE2O,SAAUg4B,IAAU93B,YAEpD,cAACqB,EAAA,EAAD,CACEyhB,GAAG,MACHlc,MAAM,KACNF,GAAG,OACHR,GAAG,OACHpE,QAAS,WACP+1B,EAAY93B,IAAe9E,OAE7BsG,QAASzB,IAAaC,IAAe9E,KAAO,UAAY,WACxD,eAAc6E,IAAaC,IAAe9E,KAAO,UAAY,WAT/D,SAWG9J,EAAE,oBAAqB,CAAE2O,SAAUg4B,IAAU78B,SAEhD,cAACoG,EAAA,EAAD,CACEyhB,GAAG,MACHlc,MAAM,KACN9E,QAAS,WACP+1B,EAAY93B,IAAeg4B,UAE7Bx2B,QAASzB,IAAaC,IAAeg4B,QAAU,UAAY,WAC3D,eAAcj4B,IAAaC,IAAeg4B,QAAU,UAAY,WAPlE,SASG5mC,EAAE,uBAAwB,CAAE2O,SAAUg4B,IAAUC,mB,SCtCrDC,GANuB1/B,IAAOV,IAAV,yEAMXU,YAAO0vB,KAAP1vB,CAAH,oDA4FG2/B,EAxFqC,SAAC,GAAmB,IAAjBr2B,EAAgB,EAAhBA,UACrD,EAA4DkB,oBAAS,GAArE,mBAAOo1B,EAAP,KAA+BhB,EAA/B,KACA,EAAkFiB,aAAgB,EAAO,CACvGC,gBAAiB,iDADnB,mBAAOC,EAAP,KAA0ClB,EAA1C,KAGA,EAAuCC,cAAvC,mBAAOkB,EAAP,KAAmBjB,EAAnB,KACA,EAA0ChF,cAA1C,mBAAOC,EAAP,KAAsBiG,EAAtB,KACA,EAAwCC,cAAxC,mBACQpwB,GADR,UAC8BZ,cAAtBY,mBAEAjX,EAAMgW,cAANhW,EAER,GAAI+mC,EACF,OACE,cAAC,EAAD,CACEhB,0BAA2BA,EAC3Bt1B,UAAWA,EACXu1B,qCAAsCA,IAiB5C,OACE,cAACa,EAAD,CACEp3B,MAAOzP,EAAE,YACT83B,iBAAiB,uBACjBrnB,UAAWA,EACX+B,MAAO,CAAE6zB,SAAU,QAAS1zB,UAAW,QAJzC,SAME,eAAC,IAAD,CAAMqe,cAAc,SAApB,UACE,eAAC,IAAD,CAAMsW,GAAG,OAAOtW,cAAc,SAA9B,UACE,cAAC,KAAD,CAAMld,MAAI,EAAC4hB,cAAc,YAAYnkB,SAAS,OAAOuD,MAAM,UAAUxD,GAAG,OAAxE,SACGtR,EAAE,YAEL,cAAC,EAAD,OAEF,eAAC,IAAD,CAAMg9B,GAAG,OAAOhM,cAAc,SAA9B,UACE,cAAC,KAAD,CAAMld,MAAI,EAAC4hB,cAAc,YAAYnkB,SAAS,OAAOuD,MAAM,UAAUxD,GAAG,OAAxE,SACGtR,EAAE,uBAEL,cAACunC,EAAD,OAEF,eAAC,IAAD,CAAM/xB,eAAe,gBAAgB+b,WAAW,SAASjgB,GAAG,OAA5D,UACE,eAAC,IAAD,CAAMigB,WAAW,SAAjB,UACE,cAAC,KAAD,UAAOvxB,EAAE,iBACT,cAAColC,EAAA,EAAD,CACEC,KAAMrlC,EAAE,uFACRqwB,UAAU,YACVtb,GAAG,WAGP,cAACyyB,EAAA,EAAD,CAAe7O,QAASwO,EAAxB,SACE,cAAC,KAAD,CAAQ96B,GAAG,4BAA4BoJ,MAAM,KAAKkjB,QAASwO,EAAYrR,SA1ClD,WACzBqR,GAGOD,GAFTjwB,EAAkB,MAClBivB,KAKAH,GAA0B,WAqCxB,eAAC,IAAD,CAAMvwB,eAAe,gBAAgB+b,WAAW,SAASjgB,GAAG,OAA5D,UACE,eAAC,IAAD,CAAMigB,WAAW,SAAjB,UACE,cAAC,KAAD,UAAOvxB,EAAE,uBACT,cAAColC,EAAA,EAAD,CAAgBC,KAAMrlC,EAAE,yCAA0CqwB,UAAU,YAAYtb,GAAG,WAE7F,cAACyyB,EAAA,EAAD,CAAe7O,QAASwI,EAAxB,SACE,cAAC,KAAD,CACE90B,GAAG,iCACHssB,QAASwI,EACT1rB,MAAM,KACNqgB,SAAU,WACRsR,GAAkBjG,iB,OCpFnBsG,EAfqB,SAACh0B,GACnC,OACE,eAAC,KAAD,yBAAKi0B,QAAQ,aAAgBj0B,GAA7B,cACE,sBACEyC,UAAU,QACVyxB,EAAE,qPAEJ,sBACEzxB,UAAU,QACVyxB,EAAE,0iECKKC,EAZQ,WACrB,MAAiChyB,aAAS,cAAC,EAAD,KAAnCiyB,EAAP,oBAEA,OACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAYl3B,QAASk3B,EAAwBz3B,QAAQ,OAAOqF,MAAM,KAAKF,GAAG,MAA1E,SACE,cAAC,EAAD,CAASkc,OAAQ,GAAIpqB,MAAO,GAAIyN,MAAM,oBCMxCgzB,EAAqB3gC,YAAOmoB,IAAPnoB,CAAH,yHAyCT4gC,EAlCoB,SAAC,GAA2D,IAAzDt4B,EAAwD,EAAxDA,MAAOu4B,EAAiD,EAAjDA,SAAUC,EAAuC,EAAvCA,OAAQC,EAA+B,EAA/BA,OAA+B,IAAvBC,gBAAuB,SAC5F,EAAqBlC,cAAdkB,EAAP,oBAEA,OACE,eAACW,EAAD,WACE,eAAC,IAAD,CAAMvW,WAAW,SAAShc,GAAI4yB,EAAW,EAAI,OAA7C,UACGD,GACC,cAAC,IAAD,CAAYE,GAAIC,IAAMrvB,GAAIkvB,EAA1B,SACE,cAAC,IAAD,CAAe7gC,MAAM,WAGzB,eAAC,IAAD,CAAM2pB,cAAc,SAApB,UACE,cAAC,IAAD,CAASoX,GAAG,KAAK92B,GAAG,MAApB,SACG7B,IAEH,eAAC,IAAD,CAAM8hB,WAAW,SAAjB,UACG0W,GAAU,cAAC7C,EAAA,EAAD,CAAgBC,KAAM4C,EAAQ1yB,GAAG,QAC5C,cAAC,KAAD,CAAMT,MAAM,aAAavD,SAAS,OAAlC,SACGy2B,cAKPG,GACA,cAAC,IAAD,CAAM5W,WAAW,SAAjB,SACE,cAAC,KAAD,CAAiB+W,KAAMnB,EAAvB,SACE,cAAC,EAAD,YC9CCoB,EAAcphC,YAAOD,IAAPC,CAAH,iKAeT,SAASqhC,EAAT,GAA+D,IAA5Ch1B,EAA2C,EAA3CA,SAChC,OAAO,cAAC+0B,EAAD,UAAc/0B,M,iCCpBvB,8CAKai1B,EAAaxlB,YAAY,CACpC3W,KAAM,QACN2V,aAJ+B,CAAEymB,aAAc,EAAGC,aAAc,GAKhEzlB,SAAU,CACRpkB,SAAU,SAACI,EAAOkkB,GACW,IAAvBlkB,EAAMypC,eACRzpC,EAAMypC,aAAevlB,EAAOC,SAG9BnkB,EAAMwpC,aAAetlB,EAAOC,YAMnBvkB,EAAa2pC,EAAW1kB,QAAxBjlB,SAEA2pC,MAAf,S,iCCtBA,wDAGajO,EAAQ,CAACp3B,0BAA8BA,0BAA8BA,2BAMnEwlC,IAJI,WACjB,OAAOC,IAAOrO,K,iCCNhB,sCAAMjgB,EAAiB,kDAEhB,SAASuuB,EAAgBC,GAC9B,IAAMtf,EAAQsf,EAAWtf,MAAMlP,GAC/B,GAAKkP,EACL,MAAO,CAAE6U,QAAQ,GAAD,OAAK7U,EAAM,GAAG3O,cAAd,OAAkCkuB,QAASvf,EAAM,M,kKCI7Dwf,EAAqB,IAAIC,IAAI,CAAEC,WAAW,IAAQC,QAAQC,GAOjD,SAAeC,EAA9B,oC,4CAAe,WACbC,EACAC,GAFa,uCAAA7qC,EAAA,2DAIP8qC,EAAYX,YAAgBS,IAJrB,0CAScC,EAAsBC,EAAUnL,SAT9C,OASToL,EATS,6DAWT18B,QAAQC,MAAR,sCAA6Cw8B,EAAUnL,SAAvD,MACM,IAAI7+B,MAAJ,sCAAyCgqC,EAAUnL,UAZhD,kBAgBTqL,EAAgBC,YAAiBF,GAhBxB,yDAkBT18B,QAAQC,MAAM,yCAA0Cy8B,GAClD,IAAIjqC,MAAJ,kDAAqDiqC,IAnBlD,QAqBXG,EAAO7O,YAAU,GAAD,OAAI2O,GAAJ,iBAAoBF,EAAUT,eAA9B,QAAyC,KArB9C,wBAuBXa,EAAO7O,YAAUuO,GAvBN,QAyBJvoC,EAAI,EAzBA,aAyBGA,EAAI6oC,EAAKjpC,QAzBZ,wBA0BLkpC,EAAMD,EAAK7oC,GACX+oC,EAAS/oC,IAAM6oC,EAAKjpC,OAAS,EAC/BuJ,OA5BO,sBA8BQkc,MAAMyjB,GA9Bd,QA8BT3/B,EA9BS,6DAgCT6C,QAAQC,MAAM,uBAAwBs8B,EAAtC,OACIQ,EAjCK,uBAiCS,IAAItqC,MAAJ,kCAAqC8pC,IAjC9C,kDAqCNp/B,EAASmc,GArCH,qBAsCLyjB,EAtCK,uBAsCS,IAAItqC,MAAJ,kCAAqC8pC,IAtC9C,gEA0CQp/B,EAASoc,OA1CjB,WA0CLA,EA1CK,OA2CN0iB,EAAmB1iB,GA3Cb,uBA4CHyjB,EA5CG,oBA6CPf,EAAmBgB,cA7CZ,aA6CP,EAA2BppC,QAAe,SAACC,EAAMmM,GAAW,IAAD,EACnDsyB,EAAG,UAAOtyB,EAAci9B,SAArB,sBAAiCj9B,EAAM+sB,eAAvC,QAAkD,IAC3D,OAAOl5B,EAAKF,OAAS,EAAd,UAAqBE,EAArB,aAA8By+B,GAA9B,UAAyCA,KAC/C,WAhDI,QAgDG,gBACN,IAAI9/B,MAAJ,wCAA2CuqC,IAjDxC,iCAmDJzjB,GAnDI,QAyBoBvlB,IAzBpB,8BAqDP,IAAIvB,MAAM,mCArDH,0E,4CCZT0qC,EAAgB,CACpB,CACEC,UAAU,EACVC,OAAQ,CACN,CACE/9B,KAAM,OACNsmB,KAAM,YAGVtmB,KAAM,WACNg+B,QAAS,CACP,CACEh+B,KAAM,kBACNsmB,KAAM,YAGV2X,SAAS,EACTC,gBAAiB,OACjB5X,KAAM,aAGJ6X,EAAoB,6CAEpBC,EAAe,CACnB,CACEN,UAAU,EACVC,OAAQ,CACN,CACEM,aAAc,UACdr+B,KAAM,OACNsmB,KAAM,YAGVtmB,KAAM,cACNg+B,QAAS,CACP,CACEK,aAAc,QACdr+B,KAAM,GACNsmB,KAAM,UAGV2X,SAAS,EACTC,gBAAiB,OACjB5X,KAAM,aAKV,SAASoL,EAAiBH,EAAyB1D,GACjD,OAAO,IAAIyQ,IAAS/M,EAAiB6M,EAAcvQ,G,4CAQtC,WAAqCmE,EAAiBnE,GAAtD,mBAAAx7B,EAAA,6DACPksC,EAAuB,IAAID,IAASH,EAAmBN,EAAehQ,GACtE9d,EAAOqhB,mBAASY,GAFT,SAGiBuM,EAAqBC,SAASzuB,GAH/C,cAGPwhB,EAHO,yBAING,EAAiBH,EAAiB1D,GAAU4Q,YAAY1uB,IAJlD,4C,sBCRA2uB,IAzCf,WACE,IAAQzO,EAAY0O,cAAZ1O,QACArhB,EAAY9C,cAAZ8C,QACF9c,EAAWkY,cAEX40B,EAAc10B,uBAClB,SAAC8nB,GACC,GAAIpjB,IAAYpM,IAAQC,QACtB,MAAM,IAAItP,MAAM,4CAElB,ODuCS,SAAf,oCCvCa+pC,CAAsBlL,EAAS/B,KAExC,CAACrhB,EAASqhB,IAIZ,OAAO/lB,sBAAW,uCAChB,WAAO+yB,GAAP,6BAAA5qC,EAAA,6DAAwBwsC,IAAxB,iCACQC,EAAYC,cACdF,GACF/sC,EAASktC,IAAeC,QAAQ,CAAEH,YAAWtB,IAAKP,KAHtD,kBAKSD,EAAaC,EAAS2B,GAC1Bh3B,MAAK,SAACs3B,GAIL,OAHIL,GACF/sC,EAASktC,IAAe7nB,UAAU,CAAEqmB,IAAKP,EAASiC,YAAWJ,eAExDI,KAERC,OAAM,SAACx+B,GAKN,MAJAD,QAAQC,MAAR,oCAA2Cs8B,GAAWt8B,GAClDk+B,GACF/sC,EAASktC,IAAeI,SAAS,CAAE5B,IAAKP,EAAS6B,YAAWO,aAAc1+B,EAAM+sB,WAE5E/sB,MAjBZ,2CADgB,sDAqBhB,CAAC7O,EAAU8sC,M,wLC5CF3rC,EAAgBipB,6BAA+BhpB,GAE/CosC,EAA2B,SAAC,GAAkB,IAAhBp4B,EAAe,EAAfA,SACzC,EAA4B7B,mBAAoC,IAAhE,mBAAOk6B,EAAP,KAAeC,EAAf,KAEMC,EAAQv1B,uBACZ,YAAsD,IAAnD/G,EAAkD,EAAlDA,MAAO0yB,EAA2C,EAA3CA,YAAavP,EAA8B,EAA9BA,KACrBkZ,GAAU,SAACE,GACT,IAAM3/B,EAAK4/B,oBAAUx8B,GAGfy8B,EAAgBF,EAAWjsC,QAAO,SAACosC,GAAD,OAAeA,EAAU9/B,KAAOA,KAExE,MAAM,CACJ,CACEA,KACAoD,QACA0yB,cACAvP,SALJ,mBAOKsZ,SAIT,CAACJ,IAoBH,OACE,cAACvsC,EAAcwqB,SAAf,CAAwB9oB,MAAO,CAAE4qC,SAAQO,MAN7B,kBAAMN,EAAU,KAMoBO,OALnC,SAAChgC,GACdy/B,GAAU,SAACE,GAAD,OAAgBA,EAAWjsC,QAAO,SAACosC,GAAD,OAAeA,EAAU9/B,KAAOA,SAIpB+sB,WAlBvC,SAAC3pB,EAAe0yB,GACjC,OAAO4J,EAAM,CAAEt8B,QAAO0yB,cAAavP,KAAM0Z,KAAWC,UAiBgBC,UAfpD,SAAC/8B,EAAe0yB,GAChC,OAAO4J,EAAM,CAAEt8B,QAAO0yB,cAAavP,KAAM0Z,KAAWG,QAc2BC,aAZ5D,SAACj9B,EAAe0yB,GACnC,OAAO4J,EAAM,CAAEt8B,QAAO0yB,cAAavP,KAAM0Z,KAAWrgB,WAWyC0gB,aAT1E,SAACl9B,EAAe0yB,GACnC,OAAO4J,EAAM,CAAEt8B,QAAO0yB,cAAavP,KAAM0Z,KAAWM,YAQpD,SACGp5B,K,SCvCQq5B,EARO,WACpB,MAA2BztC,cAAnBysC,EAAR,EAAQA,OAAQQ,EAAhB,EAAgBA,OAIhB,OAAO,cAAC,KAAD,CAAgBR,OAAQA,EAAQiB,SAFlB,SAACzgC,GAAD,OAAgBggC,EAAOhgC,Q,uPCFxC0gC,EAAc5lC,IAAO6lC,MAAV,snBACN,gBAAG//B,EAAH,EAAGA,MAAOjG,EAAV,EAAUA,MAAV,OAAuBiG,EAAQjG,EAAMS,OAAOwlC,QAAUjmC,EAAMS,OAAO49B,QAS9D,gBAAG6H,EAAH,EAAGA,MAAH,OAAeA,GAASA,KAqB3B,qBAAGlmC,MAAkBS,OAAOgoB,cAInC0d,EAAatjB,OAAO,0BAEbujB,EAAQC,IAAMvsC,MAAK,YAWyC,IAVvEG,EAUsE,EAVtEA,MACA6V,EASsE,EATtEA,YACA+e,EAQsE,EARtEA,YACGyX,EAOmE,iBAO9DttC,EAAMgW,cAANhW,EAER,OACE,cAAC+sC,EAAD,2BACMO,GADN,IAEErsC,MAAOA,EACP60B,SAAU,SAACC,GAZE,IAACwX,GACM,MADNA,EAcHxX,EAAM0P,OAAOxkC,MAAM6oB,QAAQ,KAAM,OAblBqjB,EAAWt8B,KAAK28B,YAAaD,MACvDz2B,EAAYy2B,IAeZ5X,UAAU,UACVlmB,MAAOzP,EAAE,gBACTytC,aAAa,MACbC,YAAY,MAEZ9a,KAAK,OACLgD,QAAQ,sBACRC,YAAaA,GAAe,MAC5B8X,UAAW,EACXC,UAAW,GACXC,WAAW,cCpEXC,EAAW3mC,IAAOV,IAAV,iHAID,qBAAGsnC,SAA2B,8BAAgC,kCAErEC,EAAuB7mC,YAAO+I,KAAQC,MAAM,CAAEC,QAAS,OAAQqF,MAAO,MAA/CtO,CAAH,kDAGpB8mC,EAAW9mC,IAAOV,IAAV,6LAIH,qBAAGO,MAAkBS,OAAO49B,QAKjC6I,EAAa/mC,IAAOV,IAAV,qKAIG,qBAAG0nC,UAA6B,MAAQ,UAClC,qBAAGnnC,MAAkBS,OAAOC,cAG/C26B,EAAYl7B,IAAOV,IAAV,kFAoBA,SAAS2nC,EAAT,GAec,IAAD,EAd1BntC,EAc0B,EAd1BA,MACA6V,EAa0B,EAb1BA,YACAu3B,EAY0B,EAZ1BA,MACAC,EAW0B,EAX1BA,cACAC,EAU0B,EAV1BA,MACAC,EAS0B,EAT1BA,iBACA1sC,EAQ0B,EAR1BA,SAQ0B,IAP1B2sC,6BAO0B,aAN1BC,mBAM0B,aAL1B12B,YAK0B,MALnB,KAKmB,MAJ1Bm2B,iBAI0B,SAH1BQ,EAG0B,EAH1BA,cACAtiC,EAE0B,EAF1BA,GACAuiC,EAC0B,EAD1BA,gBAEQltC,EAAY0W,cAAZ1W,QACFmtC,EAA0BjsC,YAAkB,OAAClB,QAAD,IAACA,SAAWlC,EAAZ,OAAuBsC,QAAvB,IAAuBA,SAAYtC,GAC7EQ,EAAMgW,cAANhW,EACF8uC,EAAkBP,GAASvuC,EAAE,SAEnC,EAAiC4V,aAC/B,cAACm5B,EAAA,EAAD,CACEP,iBAAkBA,EAClBQ,iBAAkBltC,EAClBmtC,sBAAuBN,EACvBC,gBAAiBA,KALdM,EAAP,oBAQA,OACE,cAAChB,EAAD,CAAY7hC,GAAIA,EAAhB,SACE,eAACg2B,EAAD,CAAW8L,UAAWA,EAAtB,WACIA,GACA,cAACF,EAAD,UACE,eAACkB,EAAA,EAAD,WACE,cAAC,KAAD,CAAM59B,SAAS,OAAf,SAAuBu9B,IACtBptC,GACC,cAAC,KAAD,CAAMiP,QAAS09B,EAAO98B,SAAS,OAAOiB,MAAO,CAAEkf,QAAS,SAAU0d,OAAQ,WAA1E,UACIV,GAAiB5sC,GAAY+sC,EAC3B7uC,EAAE,oBAAqB,CAAEmB,OAAM,iBAAE0tC,QAAF,IAAEA,OAAF,EAAEA,EAAyBQ,cAAc,UAAzC,QAA+C,KAC9E,YAMd,eAACvB,EAAD,CAAUt7B,MAAO27B,EAAY,CAAE7mC,QAAS,IAAKE,aAAc,OAAU,GAAIumC,SAAUU,EAAnF,WACIN,GACA,qCACE,cAAC,EAAD,CACEj4B,UAAU,qBACVjV,MAAOA,EACP6V,YAAa,SAACw4B,GACZx4B,EAAYw4B,MAGf5tC,GAAWI,GAAYwsC,GAA2B,OAAVC,GACvC,cAAC,IAAD,CAAQ59B,QAAS09B,EAAO54B,MAAM,KAAKrF,QAAQ,OAA3C,oBAMN,cAAC49B,EAAD,CACED,WAAYjsC,EACZoU,UAAU,8BACVvF,QAAS,WACF89B,GACHS,KALN,SASE,eAAC,IAAD,CAAM3d,WAAW,SAAS/b,eAAe,gBAAzC,UACGwC,EACC,cAAC,IAAD,CAAoBu3B,UAAWv3B,EAAKoN,OAAQoqB,UAAWx3B,EAAKqN,OAAQ+E,KAAM,GAAIqlB,QAAM,IAClF3tC,EACF,cAAC,IAAD,CAAcA,SAAUA,EAAUsoB,KAAK,OAAO5X,MAAO,CAAEk9B,YAAa,SAClE,KACH13B,EACC,eAAC,KAAD,CAAM3L,GAAG,OAAT,iBACG2L,QADH,IACGA,OADH,EACGA,EAAMoN,OAAOxf,OADhB,WACyBoS,QADzB,IACyBA,OADzB,EACyBA,EAAMqN,OAAOzf,UAGtC,cAAC,KAAD,CAAMyG,GAAG,OAAT,UACIvK,GAAYA,EAAS8D,QAAU9D,EAAS8D,OAAOhF,OAAS,GAAxD,UACKkB,EAAS8D,OAAO0M,MAAM,EAAG,GAD9B,cACsCxQ,EAAS8D,OAAO0M,MAClDxQ,EAAS8D,OAAOhF,OAAS,EACzBkB,EAAS8D,OAAOhF,SAHpB,OAKEkB,QALF,IAKEA,OALF,EAKEA,EAAU8D,SAAW5F,EAAE,wBAG7ByuC,GAAyB,cAAC,IAAD,mB,iCCvJzC,uFAIO,SAASkB,EAAa/vC,EAAiBub,GAC5C,GAAsB,IAAlBA,EAAOva,OAAc,OAAOhB,EAEhC,IAAMgwC,EAAmB3vC,YAAUkb,GAEnC,GAAIy0B,EACF,OAAOhwC,EAAOG,QAAO,SAACgB,GAAD,OAAWA,EAAMpB,UAAYiwC,KAGpD,IAAMC,EAAmB10B,EACtBL,cACA6b,MAAM,OACN52B,QAAO,SAACyc,GAAD,OAAOA,EAAE5b,OAAS,KAE5B,GAAgC,IAA5BivC,EAAiBjvC,OACnB,OAAOhB,EAGT,IAAMkwC,EAAgB,SAACtzB,GACrB,IAAMuzB,EAASvzB,EACZ1B,cACA6b,MAAM,OACN52B,QAAO,SAACiwC,GAAD,OAAQA,EAAGpvC,OAAS,KAE9B,OAAOivC,EAAiBI,OAAM,SAAClf,GAAD,OAAoB,IAAbA,EAAEnwB,QAAgBmvC,EAAOtvC,MAAK,SAACyvC,GAAD,OAAQA,EAAGC,WAAWpf,IAAMmf,EAAGE,SAASrf,UAG7G,OAAOnxB,EAAOG,QAAO,SAACgB,GACpB,IAAQ6E,EAAiB7E,EAAjB6E,OAAQ0G,EAASvL,EAATuL,KAChB,OAAQ1G,GAAUkqC,EAAclqC,IAAa0G,GAAQwjC,EAAcxjC,MAIhE,SAAS+jC,EAAuBzwC,EAA6B0wC,GAClE,OAAOxwC,mBAAQ,WACb,IAAKF,EACH,MAAO,GAGT,IAAM2wC,EAAcD,EACjBx1B,cACA6b,MAAM,OACN52B,QAAO,SAACyc,GAAD,OAAOA,EAAE5b,OAAS,KAE5B,GAAI2vC,EAAY3vC,OAAS,EACvB,OAAOhB,EAGT,IAAM4wC,EAAwB,GACxBC,EAA2B,GAC3BnD,EAAgB,GAatB,OAVA1tC,EAAOO,KAAI,SAACY,GAAW,IAAD,IACpB,OAAI,UAAAA,EAAM6E,cAAN,eAAckV,iBAAkBy1B,EAAY,GACvCC,EAAa5iC,KAAK7M,IAE3B,UAAIA,EAAM6E,cAAV,aAAI,EAAckV,cAAcq1B,WAAWG,EAAYx1B,cAAc41B,SAC5DD,EAAgB7iC,KAAK7M,GAEvBusC,EAAK1/B,KAAK7M,MAGb,GAAN,OAAWyvC,EAAiBC,EAAoBnD,KAC/C,CAAC1tC,EAAQ0wC,M,iLC5DRK,EAAS/H,cACT1tB,EAAUzN,SAASrK,OAAgC,IAEnDwtC,EAAW,IAAIC,IAAkB,CAAEC,kBAAmB,CAAC51B,KAEvD+e,EAAgB,IAAIH,IAAuB,CAC/CiX,IAAI,eAAI71B,EAAUy1B,GAClBK,OAAQ,gDACRC,QAAQ,EACRC,gBAVuB,OAanBC,EAAe,IAAIC,eAAa,CAAEN,kBAAmB,CAAC51B,KAE/Cqe,GAA4D,mBACtEhqB,IAAeM,SAAW+gC,GAD4C,cAEtErhC,IAAe2B,cAAgB+oB,GAFuC,cAGtE1qB,IAAe8hC,IAAMF,GAHiD,GAM5DG,EAAa,SAACnX,GACzB,IAAMoC,EAAU,IAAIz+B,IAAOC,UAAUwzC,aAAapX,GAElD,OADAoC,EAAQ2U,gBAvBe,KAwBhB3U,I,svBC/BM,EACD,CACV,KAAM,8CAFK,EAOF,CACT,KAAM,8CARK,EAUF,CACT,KAAM,8CAXK,EAaG,CACd,KAAM,8CAdK,EAgBG,CACd,KAAM,8CAjBK,EAmBC,CACZ,KAAM,8CApBK,EAsBA,CACX,KAAM,8CAvBK,EAyBG,CACd,KAAM,8CA1BK,EA4BC,CACZ,KAAM,8CA7BK,EA+BO,CAClB,KAAM,8CAhCK,EAkCF,CACT,KAAM,8CAnCK,EAqCF,CACT,KAAM,8CAtCK,EAwCA,CACX,KAAM,8CAzCK,EA2CI,CACf,KAAM,8CA5CK,EA8CU,CACrB,KAAM,8CA/CK,EAiDW,CACtB,KAAM,8CAlDK,EAoDQ,CACnB,KAAM,8CArDK,EAuDA,CACX,KAAM,8C,QCnDG9e,EAAa,SAAC9d,GAEzB,OAAOA,EAAQub,MAAWvb,EAAQub,MAAWvb,EAAQmP,IAAQC,UAGlDyiC,EAAiB,WAC5B,OAAO/zB,EAAW7d,IAAO+gB,KAAKhhB,UAEnB+d,EAAuB,WAClC,OAAOD,EAAWrb,IAEPqvC,EAAsB,WACjC,OAAOh0B,EAAWrb,IAEPsvC,EAAiB,WAC5B,OAAOj0B,EAAW7d,IAAO+7B,IAAIh8B,UAElB4M,EAAsB,WACjC,OAAOkR,EAAWrb,IAEPuvC,EAA2B,WACtC,OAAOl0B,EAAWrb,IAEPwvC,EAA2B,WACtC,OAAOn0B,EAAWrb,IAEPyvC,EAAyB,WACpC,OAAOp0B,EAAWrb,IAEP0vC,EAAwB,WACnC,OAAOr0B,EAAWrb,IAEP2vC,EAA2B,WACtC,OAAOt0B,EAAWrb,IAEP4vC,EAAyB,WACpC,OAAOv0B,EAAWrb,IAEP6vC,EAA+B,WAC1C,OAAOx0B,EAAWrb,IAEP8vC,EAAsB,WACjC,OAAOz0B,EAAWrb,IAEP+vC,EAAsB,WACjC,OAAO10B,EAAWrb,IAEPgwC,EAAwB,WACnC,OAAO30B,EAAWrb,IAEPiwC,EAA4B,WACvC,OAAO50B,EAAWrb,IAEPkwC,EAAkC,WAC7C,OAAO70B,EAAWrb,IAEPmwC,EAAmC,WAC9C,OAAO90B,EAAWrb,IAEPowC,EAAgC,WAC3C,OAAO/0B,EAAWrb,IAEPqwC,EAAwB,WACnC,OAAOh1B,EAAWrb,K,8CClEdswC,E,KAAOvrC,EAAOwrC,KAAV,oUAqBKD,O,4ECdTE,EAAiB,CACrBC,QAASC,IACTC,UAAWD,KAyBE9L,IAnBS,SAACzP,EAAmByb,GAC1C,iCAAqDJ,GAAmBI,GAAhE/L,EAAR,EAAQA,gBAAiB4L,EAAzB,EAAyBA,QAASE,EAAlC,EAAkCA,UAClC,EAA0BphC,oBAAS,WACjC,IACE,IAAMshC,EAAc9hC,aAAaY,QAAQk1B,GAEzC,OAAOgM,EAAcJ,EAAQK,KAAK73B,MAAM43B,IAAgB1b,EACxD,MAAOtqB,GACP,OAAOsqB,MANX,mBAAOt2B,EAAP,KAAckyC,EAAd,KAcA,OAJA30C,qBAAU,WACR2S,aAAaC,QAAQ61B,EAAiBiM,KAAKE,UAAUL,EAAU9xC,OAC9D,CAACA,EAAOgmC,EAAiB8L,IAErB,CAAC9xC,EAAOkyC,K,iCChCjB,4BAceE,IARf,SAAwBtyC,GAAyC,IAAD,IACxDgqB,EAAWuoB,YAAgB,OAACvyC,QAAD,IAACA,OAAD,EAACA,EAAOpB,SAAS,GAE5C4zC,EAAsB,UAAGzV,YAAoB/S,EAAU,sBAAjC,iBAAG,EAA8C7pB,cAAjD,aAAG,EAAuD,GAEtF,OAAOH,GAASwyC,EAAc,IAAIhyC,IAAYR,EAAOwyC,EAAYjyC,iBAAc9B,I,gn3BCH3E0mB,EAAkBC,cAEXU,EAAO,uCAAG,WAAOjB,GAAP,yBAAAjnB,EAAA,+EAE2DunB,EAAgBstB,eAAe5tB,GAF1F,uBAER6tB,EAFQ,EAEX,GAAgBC,EAFL,EAEE,GAAmB/tB,EAFrB,EAEkB,GAAoBguB,EAFtC,EAEmC,GAChDC,EAAiBzY,IAAUn2B,MAAK,SAAC6uC,GAAD,OAAgBA,EAAWxnC,KAAOuZ,KAHrD,kBAKZkuB,IAAM,GAAIF,EAAgB,CAC/BD,aACArnC,KAAMmnC,EACNM,MAAOL,EAAYhf,WACnBzO,OAAQN,EAAa+O,cATJ,2DAYZ,MAZY,0DAAH,sDAmBPsf,EAAQ,uCAAG,sCAAAr1C,EAAA,sEAEds1C,EAAY9Y,IAAUt6B,QAAO,SAACu6B,EAAOtU,GACzC,OAAO,2BACFsU,GADL,kBAEGtU,EAAKza,GAAKya,MAEZ,IAPiB,SAQEZ,EAAgBguB,cARlB,OAWpB,IAHMC,EARc,OAUd/nC,EAAQ,GACLpL,EAAI,EAAGA,GAAKmzC,EAASnzC,IAC5BoL,EAAMwB,KAAK,CACTjO,QAASgyC,cACTrlC,KAAM,iBACNE,OAAQ,CAACxL,KAfO,gBAkBGyL,YAAY2nC,EAAYhoC,GAlB3B,cAkBdioC,EAlBc,OAoBdC,EAAkBD,EAASxzC,QAAO,SAACu6B,EAAOtU,EAAM/Z,GACpD,IAAW0mC,EAA6D3sB,EAAhE,GAAgB4sB,EAAgD5sB,EAAnD,GAAmBnB,EAAgCmB,EAAnC,GAAoB6sB,EAAe7sB,EAAlB,GAEtD,OAAO,2BACFsU,GADL,kBAEGruB,EAAQ,EAAI,CACXT,KAAMmnC,EACNM,MAAOL,EAAYhf,WACnBzO,OAAQN,EAAa+O,WACrBif,kBAGH,IAhCiB,kBAkCbG,IAAM,GAAIG,EAAWK,IAlCR,2DAoCb,MApCa,0DAAH,sD,iCC9BrB,YAGMC,EAAgB,CACpB,CACEloC,GAAI,EACJC,KAAM,cACN61B,YAAa,gFACb/a,OAAQ,CACNkb,GAAI,qBACJkS,GAAI,qBACJntB,GAAI,qBACJsD,IAAK,sBACL8pB,KAAK,GAAD,OAAKC,IAAL,oEAENhtC,WAAY,qBACZitC,UAAW,UACXZ,MAAO,EACP9tB,OAAQ,GAEV,CACE5Z,GAAI,EACJC,KAAM,oBACN61B,YAAa,yFACb/a,OAAQ,CACNkb,GAAI,2BACJkS,GAAI,2BACJntB,GAAI,2BACJsD,IAAK,4BACL8pB,KAAK,GAAD,OAAKC,IAAL,0EAENhtC,WAAY,2BACZitC,UAAW,UACXZ,MAAO,EACP9tB,OAAQ,GAEV,CACE5Z,GAAI,EACJC,KAAM,iBACN61B,YAAa,sFACb/a,OAAQ,CACNkb,GAAI,wBACJkS,GAAI,wBACJntB,GAAI,wBACJsD,IAAK,yBACL8pB,KAAK,GAAD,OAAKC,IAAL,uEAENhtC,WAAY,wBACZitC,UAAW,UACXZ,MAAO,EACP9tB,OAAQ,IAIGsuB,O,kJC1CTK,EAAmC,SACvCC,EACAC,EACAC,GAGA,OAA6B,IAAzBD,EAAcl0C,OACTm0C,EAAgB50C,KAAI,SAAC4sB,GAC1B,IAAMioB,EAAqBH,EAAa7vC,MAAK,SAACiwC,GAAD,OAAkBA,EAAapnC,UAAYkf,EAAU3iB,aAClG,MAAO,CACLG,QAASwiB,EAAUxiB,QACnBF,OAAQ0iB,EAAU1iB,OAClBD,UAAW2iB,EAAU3iB,UAAU9I,WAC/B4zC,QAAS/mC,YAAoB6mC,EAAmB9mC,aAChD+e,aAAa,GAAD,OAAK+nB,EAAmB9mC,YAAYtN,OAAOU,YACvD8M,QAAS4mC,EAAmB9mC,gBAMX4mC,EAAc30C,KAAI,SAACitB,EAAYrgB,GACpD,IAAMggB,EAAYgoB,EAAgBhoC,GAElC,GAAIggB,EAAW,CACb,IAAMioB,EAAqBH,EAAa7vC,MAAK,SAACiwC,GAAD,OAAkBA,EAAapnC,UAAYkf,EAAU3iB,aAElG,OAAK2iB,EAAUnhB,UAURwhB,EATE,CACL7iB,QAASwiB,EAAUxiB,QACnBF,OAAQ0iB,EAAU1iB,OAClBD,UAAW2iB,EAAU3iB,UAAU9I,WAC/B4zC,QAAS/mC,YAAoB6mC,EAAmB9mC,aAChD+e,aAAcG,EAAWH,aACzB7e,QAAS4mC,EAAmB9mC,aAKlC,OAAOkf,MAKE+nB,EAAmB,uCAAG,WACjCzzC,GADiC,uCAAA/C,EAAA,6DAEjC2uB,EAFiC,+BAjDK,IAoDtCC,EAHiC,+BAG1B,EACPC,EAJiC,+BAIL,GAGtB4nB,EAAY,CAChB1zC,UACAysB,UAAW,GACXlB,aAAc,GACdmB,OAAQ,IAXuB,kBAeRX,kBACrBjqB,IACAkqB,cAF6B,IAAD,miBAqB5B,CAAEhsB,QAASA,EAAQoZ,cAAewS,QAAOC,OAAMC,UApClB,OAezBrjB,EAfyB,OAsCzBkrC,EAAUlrC,EAASuE,KAMvBA,EAHG2mC,EAGI,CACL3zC,QAAS2zC,EAAQhpC,GACjB8hB,UAAWknB,EAAQlnB,UACnBlB,aAAcooB,EAAQpoB,aACtBmB,OAAQinB,EAAQjnB,OAAOjuB,KAAI,SAACyI,GAAW,IAAD,MACpC,MAAO,CACLwB,UAAS,OAAExB,QAAF,IAAEA,GAAF,UAAEA,EAAO0sC,eAAT,aAAE,EAAgBjpC,GAC3B9B,QAAO,OAAE3B,QAAF,IAAEA,GAAF,UAAEA,EAAO0sC,eAAT,aAAE,EAAgB/qC,QACzB2qC,QAAO,OAAEtsC,QAAF,IAAEA,OAAF,EAAEA,EAAOssC,QAChBjoB,aAAY,OAAErkB,QAAF,IAAEA,OAAF,EAAEA,EAAOqkB,aACrB5iB,OAAM,OAAEzB,QAAF,IAAEA,GAAF,UAAEA,EAAO0sC,eAAT,aAAE,EAAgBjrC,YAZvB+qC,EA1CsB,kDA4D/BpoC,QAAQC,MAAR,MACAyB,EAAO0mC,EA7DwB,iCAgE1B1mC,GAhE0B,0DAAH,sDAmE1BggB,EAAkB,uCAAG,WAAOhtB,EAAiB2L,GAAxB,6BAAA1O,EAAA,6DACnB42C,EAAwBhoC,YAAiBF,GADtB,SAEamoC,YAAkCD,EAAuB7zC,GAFtE,cAEnB+zC,EAFmB,OAGnBC,EAAqBD,EAAwB11C,QAAO,SAAC6I,GAAD,OAAWA,EAAMsF,YAAYtN,OAAS,KAC1F+0C,EAA0BD,EAAmBv1C,KAAI,SAACyI,GAAD,OAAWA,EAAMiF,WAJ/C,SAMO3B,YAAuBypC,GAN9B,cAMnBC,EANmB,iBAOGT,EAAoBzzC,GAPvB,eAOnBorB,EAPmB,OAQnB+oB,EAAkBjB,EAAiCc,EAAoB5oB,EAAcsB,OAAQwnB,GAC7FE,EATmB,2BASgBhpB,GAThB,IAS+BsB,OAAQynB,IATvC,kBAUlBC,GAVkB,4CAAH,wDAaTpnB,O,iCCxIf,qEAOe,SAASqnB,IACtB,IAAQ76B,EAAY9C,cAAZ8C,QACF86B,EAAsB/2C,aAAkD,qBAAGyP,KAAQ9O,UAEzF,OAAOE,mBAAQ,WAAO,IAAD,EACnB,OAAKob,EACEjY,OAAOC,OAAP,iBAAc8yC,QAAd,IAAcA,OAAd,EAAcA,EAAsB96B,UAApC,QAA2D,IAAI/a,IAAI81C,KADrD,KAEpB,CAACD,EAAqB96B,M,gGCPdg7B,GAJE/uC,YAAOqgC,KAAPrgC,CAAf,sDACsB,gBAAGH,EAAH,EAAGA,MAAH,SAAU2xB,QAAyB3xB,EAAMS,OAAOwL,QAAUjM,EAAMS,OAAOulC,SAGhE7lC,IAAOV,IAAV,gIAEF,gBAAGO,EAAH,EAAGA,MAAH,SAAU2xB,QAAyB3xB,EAAMS,OAAOwL,QAAUjM,EAAMS,OAAOulC,W,2ECLzFmJ,EAAUhvC,YAAO60B,IAAP70B,CAAH,2IACF,gBAAGijB,EAAH,EAAGA,KAAH,OAAeA,GAAI,UAAOA,EAAP,OAAoB,WACtC,gBAAGA,EAAH,EAAGA,KAAH,OAAeA,GAAI,UAAO,IAAOA,EAAd,OAA2B,UAS3CgsB,IALQ,SAAC3iC,GACtB,IAAQ2W,EAAS3W,EAAT2W,KACR,OAAO,cAAC+rB,EAAD,CAAS/rB,KAAMA,M,0GCcThS,IAfY,WACzB,MAA2CtV,cAAnCy5B,EAAR,EAAQA,QAASrhB,EAAjB,EAAiBA,QAAYm7B,EAA7B,iBACMC,EAASn4C,iBAAOo+B,GACtB,EAAgC5qB,mBAAS4qB,GAAW1+B,KAApD,mBAAOs8B,EAAP,KAAiBoc,EAAjB,KASA,OAPA/3C,qBAAU,WACJ+9B,IAAY+Z,EAAO73C,UACrB83C,EAAYha,GAAW1+B,KACvBy4C,EAAO73C,QAAU89B,KAElB,CAACA,IAEG,aAAEA,QAASpC,EAAUjf,QAAO,OAAEA,QAAF,IAAEA,IAAWzN,SAASrK,OAAgC,KAAQizC,K,mHCjB7FG,EAAYrvC,IAAOsvC,IAAV,gMAUG,qBAAGzvC,MAAkBS,OAAOwL,WAqC/ByjC,EAnBH,WACV,IAfsBlU,EAehBmU,EAAWv7B,cACTpb,EAAMgW,cAANhW,EACFw4B,GAjBgBgK,EAiBamU,EAASnU,UAfjClgB,SAAS,UAClBkgB,EAASlgB,SAAS,YAClBkgB,EAASlgB,SAAS,SAClBkgB,EAASlgB,SAAS,YAClBkgB,EAASlgB,SAAS,UAClBkgB,EAASlgB,SAAS,cAEX,EAEF,EAQP,OACE,cAACk0B,EAAD,UACE,eAAC,IAAD,CAAYhe,YAAaA,EAAa/iB,MAAM,KAAKrF,QAAQ,SAAzD,UACE,cAAC,IAAD,CAAgB/D,GAAG,gBAAgB2M,GAAG,QAAQovB,GAAIC,IAAM,cAA6B,IAAhB7P,EAArE,SACGx4B,EAAE,UAEL,cAAC,IAAD,CAAgBqM,GAAG,gBAAgB2M,GAAG,QAAQovB,GAAIC,IAAM,cAA6B,IAAhB7P,EAArE,SACGx4B,EAAE,qB,eCzCPoiC,EAAaj7B,IAAOV,IAAV,qmBAQE,qBAAGO,MAAkBS,OAAOmvC,UAAUC,aAIpD,qBAAG7vC,MAAkB+vB,aAAa+f,MAIlC,qBAAG9vC,MAAkB+vB,aAAa1P,MAKlC,qBAAGrgB,MAAkB+vB,aAAauL,MAgBvBS,IAV8C,SAAC,GAA4B,IAA1BvvB,EAAyB,EAAzBA,SAAaC,EAAY,iBACvF,OACE,eAAC2uB,EAAD,2BAAgB3uB,GAAhB,cACE,cAACsjC,EAAD,IACCvjC,EACD,cAAC,IAAD,CAAMwjC,SAAU,U,gCCrCtB,0GAEYz+B,EAFZ,S,SAEYA,K,wBAAAA,E,yBAAAA,M,KAKL,IAAMvB,EAAY6E,YAAyE,sBACrFo7B,EAAiBp7B,YAAmB,wB,+JCQ3Cq7B,EAAuB,SAACn2C,GAC5B,IAAMpB,EAAU8d,YAA4B,OAAjB1c,EAAM6E,OAAkBhG,IAAO+7B,IAAIh8B,QAAUoB,EAAMpB,SAC9E,MAAM,kBAAN,OAAyBA,EAAzB,SAGWw3C,EAAgD,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,aAAcC,EAA+B,EAA/BA,eAAmB5jC,EAAY,iBAC3G,OACE,cAAC,KAAD,aACE6jC,WAAYJ,EAAqBE,GACjCG,aAAcL,EAAqBG,IAC/B5jC,M,iCCYK+jC,IA5BK,I,yJCDPC,EAA8B,SAAC5xB,GAC1C,IAAM6xB,EAAYz0C,OAAOC,OAAOy0C,KAAY3yC,MAAK,SAAC4yC,GAEhD,OADgBn6B,YAAWm6B,EAAej4C,WACvBkmB,KAGrB,OAAO6xB,EAAYA,EAAUG,cAAgB,MAMlCC,EAAc,SAACC,GAC1B,OAAIA,EAAS5H,WAAW,WAChB,GAAN,OAAUuE,IAAV,YAA0BqD,EAASzlC,MAAM,IAGpCylC,GAGIC,EAAmB,SAACplB,GAC/B,OAAOnV,YAAWk6B,IAAW/kB,GAAMjzB,UAGxBs4C,EAAe,uCAAG,WAAOpyB,EAAoBC,GAA3B,qBAAAnnB,EAAA,sEAErBosB,EAAWmtB,YAAkBryB,GAFR,SAGJkF,EAASotB,SAASryB,GAHd,cAGrBiyB,EAHqB,gBAIG1xB,MAAMyxB,EAAYC,IAJrB,WAIrBK,EAJqB,QAMN9xB,GANM,0CAOlB,MAPkB,yBAUL8xB,EAAgB7xB,OAVX,eAUrB8xB,EAVqB,yBAWpBA,GAXoB,yCAa3BrrC,QAAQC,MAAM,kBAAd,MAb2B,kBAcpB,MAdoB,0DAAH,wDAkBf8Z,EAAe,uCAAG,WAAOlB,EAAoBC,GAA3B,iBAAAnnB,EAAA,sEACPs5C,EAAgBpyB,EAAYC,GADrB,UACvBuyB,EADuB,OAEvBR,EAAgBJ,EAA4B5xB,GAI7CwyB,EANwB,yCAOpB,MAPoB,UAUxBR,EAVwB,yCAWpB,MAXoB,UAcxBQ,EAAQR,GAdgB,0CAepB,MAfoB,iCAkBtBS,IAAKtzC,MAAK,SAACgiB,GAChB,OAAOqxB,EAAQR,GAAev1B,SAAS0E,EAAIuxB,gBAnBhB,4CAAH,yD,4DCjCb3sB,IAXQ,WACrB,MAA2Cja,mBAASqL,KAAKw7B,OAAzD,mBAAO3sB,EAAP,KAAoB4sB,EAApB,KAOA,MAAO,CAAE5sB,cAAa6sB,oBANMC,YAAiB9sB,GAMFC,eAJpBtV,uBAAY,WACjCiiC,EAAoBz7B,KAAKw7B,SACxB,CAACC,O,sGCNS,SAASG,IACtB,IAAMvU,EAAMplC,aAA8B,SAACC,GAAD,OAAWA,EAAMwP,KAAKmqC,gBAC1DC,ECJO,WAA4D,IAAD,IAClEn7B,EAAYxb,cAClB,iBAAO27B,YAAoBngB,EAAW,mCAAtC,iBAAO,EAA4Dzc,cAAnE,aAAO,EAAqE,GDErD63C,GACvB,OAAOj5C,mBAAQ,WACb,GAAIg5C,GAAkBzU,EAAK,OAAOyU,EAAevZ,IAAI8E,KAEpD,CAACyU,EAAgBzU,M,okiCECT2U,EAAoB,SAAC3zC,GAChC,MAAO,CACLD,UAAWC,EAAW,IAAIC,IAAUD,EAASD,WAAaG,IAC1D8xB,oBAAqBhyB,EAAW,IAAIC,IAAUD,EAASgyB,qBAAuB9xB,IAC9EE,cAAeJ,EAAW,IAAIC,IAAUD,EAASI,eAAiBF,IAClE0zC,cAAe5zC,EAAW,IAAIC,IAAUD,EAAS4zC,eAAiB1zC,MAIzD2zC,EAAgB,SAACC,GAC5B,IAAQC,EAAiDD,EAAjDC,YAAaC,EAAoCF,EAApCE,aAAch0C,EAAsB8zC,EAAtB9zC,SAAaioC,EAAhD,YAAyD6L,EAAzD,GAEA,OAAO,2BACF7L,GADL,IAEEjoC,SAAU2zC,EAAkB3zC,GAC5B+zC,YAAa,IAAI9zC,IAAU8zC,GAC3BC,aAAc,IAAI/zC,IAAU+zC,MAInBC,EAAyB,SAACz0C,GACrC,OAAOA,EAAMhE,QAAO,SAAC04C,EAAQp0C,GAC3B,IAAMq0C,EAAoB/7B,YAAWtY,EAAKoY,WAAW5d,SAAS0R,oBACxDsL,EAAec,YAAWtY,EAAKpE,MAAMpB,SAAS0R,oBASpD,OAPKkoC,EAAOC,KACVD,EAAOC,GAAqB,IAAIl0C,IAAUH,EAAKoY,WAAWxX,WAAW2uB,YAElE6kB,EAAO58B,KACV48B,EAAO58B,GAAgB,IAAIrX,IAAUH,EAAKpE,MAAMgF,WAAW2uB,YAGtD6kB,IACN,M,iKC1CCvvC,EAAkBC,cAEXwvC,EAA4B,SAACC,GACxC,kBAAmDA,EAAnD,GAAOC,EAAP,KAAkBC,EAAlB,KAAiCC,EAAjC,KAEA,OAAa,OAATF,QAAS,IAATA,OAAA,EAAAA,EAAW/4C,QAAS,EACf+4C,EAAUx5C,KAAI,SAAC25C,EAAU/sC,GAC9B,MAAO,CACLV,GAAIytC,EAASx4C,WACby4C,OAAQH,EAAc7sC,GAAOzL,WAC7B+I,OAAQwvC,EAAe9sC,OAItB,IAGIitC,EAAwB,uCAAG,WACtCt4C,EACA0I,EACAglC,EACA6K,GAJsC,eAAAt7C,EAAA,+EAOjBqL,EAAgBgwC,yBAAyBt4C,EAAS0I,EAAWglC,EAAQ6K,GAPpD,cAO9Bl1C,EAP8B,yBAQ7B00C,EAA0B10C,IARG,uCAUpCiI,QAAQC,MAAM,2BAAd,MAVoC,kBAW7B,MAX6B,yDAAH,4DAexBitC,EAA2B,uCAAG,WAAOx4C,EAAiB0I,GAAxB,qBAAAzL,EAAA,sDACrCywC,EAAS,EACT+K,EAAclY,IACZmY,EAAa,GAHsB,UAKlCD,IAAgBlY,IALkB,iCAOhB+X,EAAyBt4C,EAAS0I,EAAWglC,EAAQnN,KAPrC,OAOjC93B,EAPiC,OAQvCilC,GAAUnN,IACVkY,EAAchwC,EAASvJ,OACvBw5C,EAAWxsC,KAAX,MAAAwsC,EAAU,YAASjwC,IAVoB,gDAalCiwC,GAbkC,4CAAH,wDAgB3B5E,EAAiC,uCAAG,WAC/C6E,EACA34C,GAF+C,qBAAA/C,EAAA,sDAIzC27C,EAA2B,GACxBt5C,EAAI,EALkC,YAK/BA,EAAIq5C,EAAWz5C,QALgB,wBAMvCiN,EAAUwsC,EAAWr5C,GANkB,SAQfk5C,EAA4Bx4C,EAASmM,GARtB,OAQvC0sC,EARuC,OAS7CD,EAAyB1sC,KAAK,CAC5BC,UACAK,YAAaqsC,IAX8B,OAKRv5C,GAAK,EALG,gDAcxCs5C,GAdwC,4CAAH,yD,qFCnDxCE,EAA6B,oBAAqBrmC,SAExD,SAAS7V,IACP,OAAKk8C,GAI+B,YAA7BrmC,SAASsmC,gBAMH,SAASl8C,IACtB,MAAkCoT,mBAASrT,KAA3C,mBAAOo8C,EAAP,KAAkBC,EAAlB,KAeA,OAbAn8C,qBAAU,WACR,GAAKg8C,EAAL,CAEA,IAAMI,EAAyB,WAC7BD,EAAar8C,MAIf,OADA6V,SAAS0mC,iBAAiB,mBAAoBD,GACvC,WACLzmC,SAAS2mC,oBAAoB,mBAAoBF,OAElD,CAACD,IAEGD,I,iCC/BT,gEAIA,IAAMn6C,EAAkB,IAAI2jB,IAAU62B,GAEN,IAAI72B,IAAU82B,GAE/Bz6C,O,iCCRf,0EAeA,IAAM06C,EAAgB,IAAIC,YAMX,SAAStR,EAAiBmB,GACvC,IAAMoQ,EAlBR,SAAyBC,GAGvB,IADAA,EAAMA,EAAIjL,WAAW,MAAQiL,EAAIlgB,OAAO,GAAKkgB,GACrCx6C,OAAS,IAAM,EAAG,MAAM,IAAInB,MAAM,8CAE1C,IADA,IAAM47C,EAAM,IAAIC,WAAWF,EAAIx6C,OAAS,GAC/BI,EAAI,EAAGA,EAAIq6C,EAAIz6C,OAAQI,IAC9Bq6C,EAAIr6C,GAAKyM,SAAS2tC,EAAIlgB,OAAW,EAAJl6B,EAAO,GAAI,IAE1C,OAAOq6C,EAUME,CAAgBxQ,GACvByQ,EAAQC,mBAASN,GACvB,OAAQK,GACN,IAAK,UACH,IAAMz2C,EAAO22C,mBAASP,GAChBQ,EAAM,IAAIC,IAAI72C,GACpB,MAAM,UAAN,OAAiB82C,sBAAYF,EAAIG,YAEnC,IAAK,UACH,IAAM/2C,EAAO22C,mBAASP,GAChBQ,EAAM,IAAIC,IAAI72C,GACd+2C,EAAYC,iBAAOJ,EAAIG,WAC7B,MAAuB,aAAnBA,EAAUxvC,KACN,UAAN,OAAiB2uC,EAAcc,OAAOD,EAAUE,QAAQtL,QAEpD,UAAN,OAAiBmL,sBAAYF,EAAIG,YAEnC,QACE,MAAM,IAAIr8C,MAAJ,8BAAiC+7C,O,yKCrCvCrM,EAAMhoC,YAAOC,IAAPD,CAAH,6UAQE,gBAAGE,EAAH,EAAGA,MAAH,cAAeA,QAAf,IAAeA,IAAS,UAGlB,gBAAG6lC,EAAH,EAAGA,MAAH,cAAeA,QAAf,IAAeA,IAAS,YACpB,gBAAG9Q,EAAH,EAAGA,QAAH,cAAiBA,QAAjB,IAAiBA,IAAW,gBACpC,qBAAG90B,WACJ,qBAAGC,UACI,qBAAGC,gBAaTy0C,EAAa90C,YAAOgoC,EAAPhoC,CAAH,+DASV+0C,GALU/0C,IAAOV,IAAV,wEAKGU,YAAOgoC,EAAPhoC,CAAH,uUAER,gBAAGg1B,EAAH,EAAGA,IAAH,OAAaA,GAAG,WAAQA,MACf,gBAAGC,EAAH,EAAGA,QAAH,OAAiBA,GAAWA,KAcnC,qBAAGD,QAIJggB,EAAWh1C,YAAOgoC,EAAPhoC,CAAH,mEAET,gBAAGg1B,EAAH,EAAGA,IAAH,OAAaA,GAAG,WAAQA,MAGrBgT,O,+JC7DTtlC,EAAiBwjC,IAAM7kB,cAAc,CAAEze,KAAM,EAAGD,KAAM,IAsBtDsyC,EAAyB,SAAC,GAAkB,IAAhB5oC,EAAe,EAAfA,SAChC,EAAwB7B,mBAAS,GAAjC,mBAAO5H,EAAP,KAAasyC,EAAb,KACA,EAAwB1qC,mBAAS,GAAjC,mBAAO7H,EAAP,KAAawyC,EAAb,KACMC,EAtBsB,WAC5B,IAAMA,EAAwBp+C,kBAAO,GAcrC,OAZAK,qBAAU,WACR,IAAMg+C,EAAqB,WACzBD,EAAsB99C,SAAW0V,SAASsoC,QAK5C,OAFAzrC,OAAO6pC,iBAAiB,mBAAoB2B,GAErC,WACLxrC,OAAO8pC,oBAAoB,mBAAoB0B,MAEhD,IAEID,EAOuBG,GAoB9B,OAlBAl+C,qBAAU,WACR,IAAMm+C,EAAWj+C,YAAW,sBAAC,sBAAAC,EAAA,sDACvB49C,EAAsB99C,SACxB69C,GAAQ,SAAC7vB,GAAD,OAAUA,EAAO,KAFA,2CA/BX,KAoClB,OAAO,kBAAM1tB,cAAc49C,MAC1B,CAACJ,IAEJ/9C,qBAAU,WACR,IAAMm+C,EAAWj+C,YAAW,sBAAC,sBAAAC,EAAA,sDACvB49C,EAAsB99C,SACxB49C,GAAQ,SAAC5vB,GAAD,OAAUA,EAAO,KAFA,2CAvCX,KA4ClB,OAAO,kBAAM1tB,cAAc49C,MAC1B,CAACJ,IAEG,cAAC1yC,EAAekgB,SAAhB,CAAyB9oB,MAAO,CAAE8I,OAAMD,QAAxC,SAAiD0J,M,gCClD1D,gNAEY+E,EAFZ,S,SAEYA,K,cAAAA,E,iBAAAA,M,KAKL,IAAM7B,EAAiBmF,YAAmD,uBACpEhF,EAAmBgF,YAAmB,yBACtC7E,EAAY6E,YAAmD,kBAC/DF,EAAmBE,YAM7B,yBACU1E,EAAe0E,YAA2C,sB,iCCjBvE,WAiBe88B,IAVU,SAAC13C,GACxB,IAAMuwB,EAAMrzB,mBAMZ,OAJAK,qBAAU,WACRgzB,EAAI/yB,QAAUwC,IACb,CAACA,IAEGuwB,EAAI/yB,U,2KCEPm+C,EAAgBz1C,IAAOV,IAAV,6NAMR,qBAAGO,MAAkBS,OAAO49B,QACjB,qBAAGr+B,MAAkBS,OAAO4L,oBAI5CwpC,EAAoC,SAAC,GAA+B,IAA7Bh7C,EAA4B,EAA5BA,WAAY4O,EAAgB,EAAhBA,UAC/CyK,EAAY9C,cAAZ8C,QACFtb,EACJsb,GAAWrZ,EACPA,EAAW1B,KAAI,SAAC2B,GACd,OAAOyiB,YAAgBziB,EAAUoZ,MAEnC,GAEA2mB,EAAkDC,cAExD,OACE,cAAC,KAAD,CAAOryB,MAAM,qBAAqB42B,SAAS,QAAQ51B,UAAWA,EAA9D,SACE,eAAC,IAAD,CAAY0rB,IAAI,KAAhB,UACGv8B,EAAOO,KAAI,SAACY,GAAW,IAAD,EACrB,OACEA,GACA8gC,GACA5+B,OAAOkI,KAAK02B,GAAmBvf,SAASvhB,EAAMpB,UAC5C,eAAC,IAAD,CAAyDw8B,IAAI,OAA7D,UACE,eAAC,IAAD,CAASA,IAAI,MAAM+Q,MAAM,SAAzB,UACE,cAAC,IAAD,CAAcprC,SAAUf,EAAOqpB,KAAK,SACpC,cAAC,KAAD,UAAOrpB,EAAM6E,YAEdsV,GACC,cAAC,IAAD,CAAMuhB,UAAQ,EAAC5oB,OAAK,EAACiB,MAAM,cAAcQ,KAAMonB,YAAe37B,EAAMpB,QAAS,UAAWub,GAAxF,SACGna,EAAMpB,YAPb,UAAiBoB,EAAMpB,eAAvB,aAAiB,EAAe6iB,OAAO,qBAc7C,cAAC,IAAD,CAAY2Z,IAAI,KAAhB,SACE,cAAC,KAAD,uLAUK,SAAS2gB,EAAT,GAA8F,IAAzDj7C,EAAwD,EAAxDA,WAClD,EAAyB+T,aAAS,cAACinC,EAAD,CAAkBh7C,WAAYA,KAAzDk7C,EAAP,oBAEA,OACE,cAACH,EAAD,UACE,cAAC,IAAD,CAAQxsC,QAAQ,OAAOO,QAASosC,EAAhC,oD,iGCzEAC,EAA6C,GA+BpC7yB,IAtBmB,SAAC,GAA4B,IAA1BO,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,IAAQ2iB,EAAW,iBAC5D,EAAoB37B,mBAAiB,GAA5Bya,EAAT,oBAEM6wB,EAA0BvyB,EAAK1lB,MAAK,SAACwX,GAAD,OAAQwgC,EAASxgC,MAE3D,OAAIygC,EAEA,+CACM3P,GADN,IAEE3iB,IAAKA,EACLsyB,IAAKA,EACLC,QAAS,WACHD,IAAKD,EAASC,IAAO,GACzB7wB,GAAQ,SAACprB,GAAD,OAAOA,EAAI,SAMpB,cAAC,IAAD,eAAcssC,M,4DC5BRnmC,gBAAO0vB,KAAP1vB,CAAf,oD,0ICAMivB,EAASC,YAAH,sHASN8mB,EAAYh2C,IAAOi2C,IAAV,iIACGhnB,GACN,qBAAGhM,QACJ,qBAAGA,QAEA,gBAAGizB,EAAH,EAAGA,OAAQr2C,EAAX,EAAWA,MAAX,cAAuBq2C,QAAvB,IAAuBA,IAAUr2C,EAAMS,OAAOwL,WAQ7C,SAASqqC,EAAT,GAQX,IAAD,IAPDlzB,YAOC,MAPM,OAON,EANDizB,EAMC,EANDA,OACG/P,EAKF,iBACD,OACE,cAAC6P,EAAD,yBAAWzV,QAAQ,YAAY6V,KAAK,OAAOC,MAAM,6BAA6BpzB,KAAMA,EAAMizB,OAAQA,GAAY/P,GAA9G,aACE,sBACE3F,EAAE,6HACFnL,YAAY,MACZihB,cAAc,QACdC,eAAe,e,yHCqERC,IA7Ff,YAAqE,IAA9C/9C,EAA6C,EAA7CA,OAAQg+C,EAAqC,EAArCA,qBACrB1iC,EAAY9C,cAAZ8C,QAEAlb,EAAMgW,cAANhW,EAER,EAAkC2R,oBAAS,GAA3C,mBAAOksC,EAAP,KAAkBC,EAAlB,KAEMC,EAAWC,cAGXC,EAAoBC,cAE1B,OACE,eAAC,IAAD,CAAY/hB,IAAI,KAAhB,UACE,cAAC,KAAD,CAAS/rB,QAAQ,UAAjB,SACE,eAAC,KAAD,WACGpQ,EACC,mLAEF,uBACA,uBACCA,EAAE,+EAINJ,EAAOO,KAAI,SAACY,GAAW,IAAD,IACfo9C,EAAOjjC,IAAO,OAAI+iC,QAAJ,IAAIA,GAAJ,UAAIA,EAAoB/iC,UAAxB,iBAAI,EAA+Bna,EAAMpB,gBAAzC,aAAI,EAA+Cw+C,MACjEx+C,EAAUoB,EAAMpB,QAAN,UACToB,EAAMpB,QAAQy+C,UAAU,EAAG,GADlB,cAC0Br9C,EAAMpB,QAAQy+C,UAAUr9C,EAAMpB,QAAQiB,OAAS,IACrF,KACJ,OACE,eAAC,IAAD,CAA0BwwB,iBAAiB,cAAcitB,QAAQ,MAAjE,eACY7+C,IAAT2+C,EACC,eAAC,KAAD,CACE/tC,QAAQ,UACRkuC,SAAO,EACP7oC,MAAM,KACN8oC,UAAWJ,EAAK1zB,SAAW,cAAC,IAAD,CAAUA,QAAS0zB,EAAK1zB,QAASL,KAAK,SAJnE,UAMGpqB,EAAE,OANL,IAMcm+C,EAAK7xC,QAGnB,cAAC,KAAD,CAAK8D,QAAQ,UAAUkuC,SAAO,EAAC7oC,MAAM,KAAK8oC,UAAW,cAAC,IAAD,CAAWzpC,MAAM,YAAtE,SACG9U,EAAE,oBAGP,eAAC,IAAD,CAAMuxB,WAAW,SAAjB,UACE,cAAC,KAAD,CAAMhc,GAAG,MAAT,SAAgBxU,EAAMuL,OACtB,eAAC,KAAD,eAAQvL,EAAM6E,OAAd,UAEDsV,GACC,eAAC,IAAD,CAAM1F,eAAe,gBAAgBnO,MAAM,OAA3C,UACE,cAAC,KAAD,CAAMkO,GAAG,MAAT,SAAgB5V,IAChB,eAAC,IAAD,CAAM2V,KAAMonB,YAAe37B,EAAMpB,QAAS,UAAWub,GAAUuhB,UAAQ,EAAvE,cACIz8B,EAAE,mBADN,YAtBKe,EAAMpB,YA+BrB,eAAC,IAAD,CAAM6V,eAAe,gBAAgB+b,WAAW,SAAhD,UACE,eAAC,IAAD,CAAMA,WAAW,SAAS5gB,QAAS,kBAAMmtC,GAAcD,IAAvD,UACE,cAAC,IAAD,CACEpoC,MAAM,KACNnJ,KAAK,YACLsmB,KAAK,WACL+F,QAASklB,EACT/nB,SAAU,kBAAMgoB,GAAcD,MAEhC,cAAC,KAAD,CAAM9oC,GAAG,MAAMvC,MAAO,CAAE8zB,WAAY,QAApC,SACGtmC,EAAE,qBAGP,cAAC,IAAD,CACEoQ,QAAQ,SACR8mB,UAAW2mB,EACXltC,QAAS,WACP/Q,EAAOO,KAAI,SAACY,GAAD,OAAWg9C,EAASh9C,MAC3B68C,GACFA,EAAqBh+C,EAAO,KAGhCsW,UAAU,wBATZ,SAWGlW,EAAE,oB,iCCtGb,sDAOO,SAASw+C,EAAeC,GAC7B,GAAKA,EACL,OAAIA,EAAe38C,WAAaa,IAC1BvB,IAAKs9C,YAAYD,EAAepf,IAAKsf,KAChCn8C,IAAeC,MAAMrB,IAAKw9C,SAASH,EAAepf,IAAKsf,MAEzDn8C,IAAeC,MAAMrB,IAAKC,OAAO,IAEnCo9C,I,gCCfT,+LAIal5C,EAAW,IAAID,IAAU,GACzBib,EAAU,IAAIjb,IAAU,GAExB6Y,GADW,IAAI7Y,IAAU,GACf,IAAIA,IAAU,KAExBiG,EAA8B,SAACszC,GAAD,OACzCC,EAAkBD,GAAUlgC,UAEjBmgC,EAAoB,SAACD,GAAD,OAA2C,IAAIv5C,IAAUu5C,EAASv9C,c,2ICNpF,SAASipB,EAAiB0Q,GACvC,IAAM8jB,EAAMj/C,mBAAQ,kBAAOm7B,EAAM6N,YAAgB7N,QAAOz7B,IAAY,CAACy7B,IAC/D+jB,ECCO,SAA2B1gB,GAA4E,IAAD,MAC7Gb,EAAkB39B,mBAAQ,WAC9B,IAAKw+B,EAAS,MAAO,MAAC9+B,GACtB,IACE,OAAO8+B,EAAU,CAACZ,mBAASY,IAAY,MAAC9+B,GACxC,MAAOyN,GACP,MAAO,MAACzN,MAET,CAAC8+B,IACEX,EAAoBC,aAAwB,GAC5CG,EAAwBD,YAAoBH,EAAmB,WAAYF,GAC3EI,EAAe,UAAGE,EAAsB78B,cAAzB,aAAG,EAA+B,GACjD88B,EAAmBC,YACvBJ,GAAmBnR,YAAOmR,QAAmBr+B,EAAYq+B,GACzD,GAEIkN,EAAcjN,YAAoBE,EAAkB,cAAeP,GAEzE,MAAO,CACLsN,YAAW,oBAAEA,EAAY7pC,cAAd,aAAE,EAAqB,UAAvB,QAA6B,KACxCP,QAASo9B,EAAsBp9B,SAAWoqC,EAAYpqC,SDrB5Bs+C,CAAiB,OAACF,QAAD,IAACA,OAAD,EAACA,EAAKzgB,SACnD,OAAOx+B,mBAAQ,WACb,OAAIi/C,EACKC,EAAoBjU,YAAc/P,YAAU4O,YAAiBoV,EAAoBjU,cAAgB,GAEnG9P,EAAMD,YAAUC,GAAO,KAC7B,CAAC8jB,EAAKC,EAAoBjU,YAAa9P,M,kQEL/BikB,EAAmB,SAAC/9C,GAAsC,IAAnBoW,EAAkB,uDAAP,GAC7D,OAAO,IAAIjS,IAAUnE,GAAQkF,MAAM8X,IAAQC,IAAI7G,KAGpC/Q,EAAmB,SAACrF,GAAsC,IAAnBoW,EAAkB,uDAAP,GAC7D,OAAO,IAAIjS,IAAUnE,GAAQg+C,UAAUhhC,IAAQC,IAAI7G,KAMxC+gB,EAAmB,SAAC5M,GAAuC,IAAnBnU,EAAkB,uDAAP,GAC9D,OAAO/Q,EAAiBklB,EAASnU,GAAUmd,YAGhC0qB,EAAwB,SAAC1zB,GAAiE,IAA7CnU,EAA4C,uDAAjC,GAAI8nC,EAA6B,uCACpG,OAAO74C,EAAiBklB,EAASnU,GAAUrO,QAAQm2C,IAGxCC,EAAe,SAACvF,GAAwD,IAAxCwF,EAAuC,uDAAxB,EAAGC,EAAqB,uDAAN,EACtE5kB,EAAU,CACd1E,sBAAuBqpB,EACvBppB,sBAAuBqpB,GAEzB,OAAOzF,EAAO9jB,oBAAez2B,EAAWo7B,K,iCCjC1C,wEAEYriB,EAFZ,S,SAEYA,K,sCAAAA,E,sBAAAA,E,wBAAAA,E,yBAAAA,M,KAOL,IAAMvB,EAAY6E,YAAmD,uB,4HCPtE4jC,EAASt4C,IAAOV,IAAV,yGAKCu1B,EAAe70B,YAAOs4C,EAAPt4C,CAAH,gVAsBZ20B,EAAa30B,IAAOV,IAAV,+JAML,gBAAG01B,EAAH,EAAGA,IAAH,OAAsB,OAARA,EAAgB,MAAmB,OAARA,GAAgB,SAAoB,OAARA,GAAgB,QAAWA,KAC/F,gBAAGC,EAAH,EAAGA,QAAH,OAAiBA,GAAWA,KAOhCqjB,O,mPC7BTC,EAA8B,SAACjsC,GACnC,IAAQzT,EAAMgW,cAANhW,EACR,OACE,cAAC,KAAD,yBAAKoQ,QAAQ,YAAYkuC,SAAO,EAACC,UAAW,cAAC,KAAD,CAAcl3C,MAAM,OAAOyN,MAAM,YAAYS,GAAG,SAAc9B,GAA1G,aACGzT,EAAE,YAKH2/C,EAAmC,SAAClsC,GACxC,IAAQzT,EAAMgW,cAANhW,EACR,OACE,cAAC,KAAD,yBAAKoQ,QAAQ,UAAUkuC,SAAO,EAACC,UAAW,cAAC,IAAD,CAAel3C,MAAM,OAAOyN,MAAM,UAAUS,GAAG,SAAc9B,GAAvG,aACGzT,EAAE,iBAKH4/C,EAA8B,SAACnsC,GACnC,IAAQzT,EAAMgW,cAANhW,EACR,OACE,cAAC,KAAD,yBAAKoQ,QAAQ,aAAakuC,SAAO,GAAK7qC,GAAtC,aACGzT,EAAE,YAKH6/C,EAAoC,SAACpsC,GACzC,IAAQzT,EAAMgW,cAANhW,EACR,OACE,cAAC,KAAD,yBAAKoQ,QAAQ,YAAYkuC,SAAO,EAACC,UAAW,cAAC,KAAD,CAAal3C,MAAM,OAAOyN,MAAM,YAAYS,GAAG,SAAc9B,GAAzG,aACGzT,EAAE,cAKH8/C,EAAyC,SAACrsC,GAC9C,IAAQzT,EAAMgW,cAANhW,EACR,OACE,cAAC,KAAD,yBAAKoQ,QAAQ,UAAUkuC,SAAO,EAACC,UAAW,cAAC,IAAD,CAAel3C,MAAM,OAAOyN,MAAM,UAAUS,GAAG,SAAc9B,GAAvG,aACGzT,EAAE,a,gCCtDT,ifAcO,SAASC,EAAUgB,GACxB,IACE,OAAOwc,qBAAWxc,GAClB,SACA,OAAO,GAIJ,SAASy7B,EACd33B,EACA6tB,GAES,IADT1X,EACQ,uDADWpM,IAAQC,QAE3B,OAAQ6jB,GACN,IAAK,cACH,MAAM,GAAN,OAAUmtB,IAAkB7kC,GAA5B,eAA2CnW,EAA3C,0BAEF,IAAK,QACH,MAAM,GAAN,OAAUi7C,IAAmB9kC,GAA7B,kBAA+CnW,GAEjD,IAAK,QACH,MAAM,GAAN,OAAUi7C,IAAmB9kC,GAA7B,kBAA+CnW,GAEjD,IAAK,YACH,MAAM,GAAN,OAAUi7C,IAAmB9kC,GAA7B,4BAAyDnW,GAE3D,QACE,MAAM,GAAN,OAAUg7C,IAAkB7kC,GAA5B,oBAAgDnW,IAM/C,SAASk7C,EAAetgD,GAAqC,IAApBugD,EAAmB,uDAAX,EAChDxkC,EAASzb,EAAUN,GACzB,IAAK+b,EACH,MAAMjc,MAAM,gCAAD,OAAiCE,EAAjC,OAEb,MAAM,GAAN,OAAU+b,EAAO0iC,UAAU,EAAG8B,EAAQ,GAAtC,cAA8CxkC,EAAO0iC,UAAU,GAAK8B,IAI/D,SAASC,EAAmBl/C,GACjC,OAAOA,EAAMm/C,IAAI96C,IAAUgX,KAAK,KAAOijB,IAAIj6B,IAAUgX,KAAK,OAAQ7V,IAAInB,IAAUgX,KAAK,MAIhF,SAAS+jC,EAAqBC,GACnC,OAAO,IAAIC,IAAQn/C,IAAKC,OAAOi/C,GAAMl/C,IAAKC,OAAO,MAG5C,SAASm/C,EAAwBv/C,EAAuBw/C,GAC7D,GAAIA,EAAW,GAAKA,EAAW,IAC7B,MAAMhhD,MAAM,8BAAD,OAA+BghD,IAE5C,MAAO,CACLr/C,IAAKs/C,OAAOt/C,IAAKk+B,SAASr+B,EAAMo+B,IAAKj+B,IAAKC,OAAO,IAAQo/C,IAAYr/C,IAAKC,OAAO,MACjFD,IAAKs/C,OAAOt/C,IAAKk+B,SAASr+B,EAAMo+B,IAAKj+B,IAAKC,OAAO,IAAQo/C,IAAYr/C,IAAKC,OAAO,OAe9E,SAASs/C,EAAYhhD,EAAiBihD,EAAUrkB,EAAuB76B,GAC5E,IAAKzB,EAAUN,IAAYA,IAAYkhD,IACrC,MAAMphD,MAAM,gCAAD,OAAiCE,EAAjC,OAGb,OAAO,IAAIirC,IAASjrC,EAASihD,EAVxB,SAA6BrkB,EAAuB76B,GACzD,OAAOA,EANF,SAAmB66B,EAAuB76B,GAC/C,OAAO66B,EAAQukB,UAAUp/C,GAASq/C,mBAKjBD,CAAUvkB,EAAS76B,GAAW66B,EASbykB,CAAoBzkB,EAAS76B,IAI1D,SAASu/C,EAAkBC,EAAW3kB,EAAuB76B,GAClE,OAAOi/C,EAAYQ,IAAgBC,IAAuB7kB,EAAS76B,GAG9D,SAAS8rC,EAAa6T,GAC3B,OAAOA,EAAOv3B,QAAQ,sBAAuB,QAGxC,SAASw3B,EAAcC,EAAgCz/C,GAA+B,IAAD,EAC1F,OAAIA,IAAaa,KACVyd,QAAQte,aAAoBC,MAApB,UAA6Bw/C,EAAcz/C,EAASoZ,gBAApD,aAA6B,EAAkCpZ,EAASnC,WAGlF,IAAM6hD,EAAgB,WAC3B,MAAO,iBAAkBxwC,QAAUF,UAAU2wC,eAAiB,GAAK3wC,UAAU4wC,iBAAmB,GAGrFjvC,EACX,SAACqF,EAAc6pC,GAAf,OACA,SAAC36C,GAAD,OACE8hB,IAAI9hB,EAAO8Q,EAAM6pC,M,8WCnHrB,kCAAO,IAAMC,EAAW,CACtBC,UAAW,CACTC,SAAG,IACHC,SAAG,MAIMC,EAAW,SAAChV,GACvB,OAAOA,EAAMljB,QAAQ,qBAAqB,SAACm4B,GAAD,OAAOL,EAASC,UAAUI,IAAMA,O,4vCCKtEC,EAAO9gD,IAAKC,OAAO,GAElB,SAAS8gD,IACd,OAAOljD,aAAwC,SAACC,GAAD,OAAWA,EAAMkjD,Q,sDCkDnDC,MA1Df,YAcI,IAAD,gBAbDC,EAaC,EAbDA,YACAC,EAYC,EAZDA,MACA1gD,EAWC,EAXDA,WACA2gD,EAUC,EAVDA,cACAC,EASC,EATDA,oBACAC,EAQC,EARDA,MASQ1iD,EAAMgW,cAANhW,EACR,OACE,qCACE,eAACmvC,EAAA,EAAD,WACE,cAAC,KAAD,UAAOnvC,EAAE,oBAAqB,CAAE+3B,MAAK,UAAEl2B,EAAW0W,IAAMoqC,mBAAnB,aAAE,EAA8B/8C,WACrE,eAACupC,EAAA,EAAD,WACE,cAAC,IAAD,CAAcrtC,SAAUD,EAAW0W,IAAMoqC,YAAanwC,MAAO,CAAEk9B,YAAa,SAC5E,cAAC,KAAD,oBAAO8S,EAAcjqC,IAAMoqC,mBAA3B,aAAO,EAAiCtT,cAAc,WAG1D,eAACF,EAAA,EAAD,WACE,cAAC,KAAD,UAAOnvC,EAAE,oBAAqB,CAAE+3B,MAAK,UAAEl2B,EAAW0W,IAAMqqC,mBAAnB,aAAE,EAA8Bh9C,WACrE,eAACupC,EAAA,EAAD,WACE,cAAC,IAAD,CAAcrtC,SAAUD,EAAW0W,IAAMqqC,YAAapwC,MAAO,CAAEk9B,YAAa,SAC5E,cAAC,KAAD,oBAAO8S,EAAcjqC,IAAMqqC,mBAA3B,aAAO,EAAiCvT,cAAc,WAG1D,eAACF,EAAA,EAAD,WACE,cAAC,KAAD,UAAOnvC,EAAE,WACT,cAAC,KAAD,gCACQ6B,EAAW0W,IAAMoqC,mBADzB,aACQ,EAA8B/8C,OADtC,qBACkD28C,QADlD,IACkDA,OADlD,EACkDA,EAAOlT,cAAc,GADvE,sBAEIxtC,EAAW0W,IAAMqqC,mBAFrB,aAEI,EAA8Bh9C,aAIpC,cAACupC,EAAA,EAAD,CAAY38B,MAAO,CAAEgD,eAAgB,YAArC,SACE,cAAC,KAAD,gCACQ3T,EAAW0W,IAAMqqC,mBADzB,aACQ,EAA8Bh9C,OADtC,qBACkD28C,QADlD,IACkDA,OADlD,EACkDA,EAAOM,SAASxT,cAAc,GADhF,sBAEIxtC,EAAW0W,IAAMoqC,mBAFrB,aAEI,EAA8B/8C,YAIpC,eAACupC,EAAA,EAAD,WACE,eAAC,KAAD,WAAOnvC,EAAE,iBAAT,OACA,eAAC,KAAD,WAAOsiD,EAAc,MAAH,OAAWG,QAAX,IAAWA,OAAX,EAAWA,EAAqBpT,cAAc,GAAhE,UAEF,cAAC,IAAD,CAAQ1+B,QAAS+xC,EAAO/wB,GAAG,OAA3B,SACiB3xB,EAAdsiD,EAAgB,uBAA4B,wB,SCFtCQ,MAjDf,YAUI,IAAD,wBATDjhD,EASC,EATDA,WACAygD,EAQC,EARDA,YACAG,EAOC,EAPDA,oBACAF,EAMC,EANDA,MAOQviD,EAAMgW,cAANhW,EACR,OACE,cAAC,IAAD,CAAYm8B,IAAI,KAAhB,SACE,eAAC,IAAD,CAASC,QAAQ,eAAeD,IAAI,MAApC,UACE,eAAC,IAAD,CAAYC,QAAQ,SAApB,UACE,cAAC,KAAD,2BAAOmmB,QAAP,IAAOA,OAAP,EAAOA,EAAOlT,cAAc,UAA5B,QAAkC,MAClC,cAAC,KAAD,CAAM99B,SAAS,OAAOyrB,GAAI,EAA1B,SACGh9B,EAAE,wBAAyB,CAC1B+iD,OAAM,oBAAElhD,EAAW0W,IAAMqqC,mBAAnB,aAAE,EAA8Bh9C,cAAhC,QAA0C,GAChDo9C,OAAM,oBAAEnhD,EAAW0W,IAAMoqC,mBAAnB,aAAE,EAA8B/8C,cAAhC,QAA0C,UAItD,eAAC,IAAD,CAAYw2B,QAAQ,SAApB,UACE,cAAC,KAAD,2BAAOmmB,QAAP,IAAOA,GAAP,UAAOA,EAAOM,gBAAd,aAAO,EAAiBxT,cAAc,UAAtC,QAA4C,MAC5C,cAAC,KAAD,CAAM99B,SAAS,OAAOyrB,GAAI,EAA1B,SACGh9B,EAAE,wBAAyB,CAC1B+iD,OAAM,oBAAElhD,EAAW0W,IAAMoqC,mBAAnB,aAAE,EAA8B/8C,cAAhC,QAA0C,GAChDo9C,OAAM,oBAAEnhD,EAAW0W,IAAMqqC,mBAAnB,aAAE,EAA8Bh9C,cAAhC,QAA0C,UAItD,eAAC,IAAD,CAAYw2B,QAAQ,SAApB,UACE,eAAC,KAAD,WACGkmB,GAAeC,EACZ,MADH,WAEuB,OAAnBE,QAAmB,IAAnBA,OAAA,EAAAA,EAAqBvoC,SAAS+oC,MAAY,QAA1C,OAAoDR,QAApD,IAAoDA,OAApD,EAAoDA,EAAqBv5C,QAAQ,UAFrF,QAE4F,IAH/F,OAMA,cAAC,KAAD,CAAMqI,SAAS,OAAOyrB,GAAI,EAA1B,SACGh9B,EAAE,4B,0BCTA,SAASkjD,EAAT,GAK0D,IAAD,6CAJtEz5B,MACEjd,OAAU22C,GAG0D,GAH1DA,YAAaC,GAG6C,GAH7CA,YAEzBC,GACsE,EADtEA,QAEA,GAAsCjrC,cAA9B1W,GAAR,GAAQA,QAASwZ,GAAjB,GAAiBA,QAASqhB,GAA1B,GAA0BA,QAClBv8B,GAAMgW,cAANhW,EACF2O,GAAWkc,cAEXxG,GAAYzL,YAAYuqC,IACxB7+B,GAAY1L,YAAYwqC,IAExBE,GAAoBljC,QACxBlF,KACImJ,IAAa2a,YAAe3a,GAAWk/B,IAAKroC,MAC3CoJ,IAAa0a,YAAe1a,GAAWi/B,IAAKroC,OAG7CisB,GAAaqc,cAGnB,GAA0DrB,IAAlD9pC,GAAR,GAAQA,iBAAkBtB,GAA1B,GAA0BA,WAAY0sC,GAAtC,GAAsCA,gBACtC,GHpBK,SACLp/B,EACAC,GAaC,IAAD,MAoGIrX,EAKiC,EAIqC,EA5G1E,EAA6BmL,cAArB1W,EAAR,EAAQA,QAASwZ,EAAjB,EAAiBA,QAEjB,EAA0DinC,IAAlD9pC,EAAR,EAAQA,iBAAkBtB,EAA1B,EAA0BA,WAAY0sC,EAAtC,EAAsCA,gBAEhCC,EAAiBrrC,IAAqBE,IAAMoqC,WAAapqC,IAAMqqC,WAAarqC,IAAMoqC,WAGlF9gD,EAA8C/B,mBAClD,2CACGyY,IAAMoqC,WADT,OACsBt+B,QADtB,IACsBA,SAAa7kB,GADnC,cAEG+Y,IAAMqqC,WAFT,OAEsBt+B,QAFtB,IAEsBA,SAAa9kB,GAFnC,IAIA,CAAC6kB,EAAWC,IAId,EAA0BiB,YAAQ1jB,EAAW0W,IAAMoqC,YAAa9gD,EAAW0W,IAAMqqC,aAAjF,mBAAOe,EAAP,KAAkB3rC,EAAlB,KAEMu7B,EAAcF,YAAc,OAACr7B,QAAD,IAACA,OAAD,EAACA,EAAMC,gBAEnCqqC,EACJqB,IAAc3/B,IAAUgB,YAAc5E,QAAQmzB,GAAenyC,IAAKwiD,MAAMrQ,EAAYlU,IAAK6iB,IAGrF7hD,EAAWuB,YAAmB,OAACF,QAAD,IAACA,SAAWlC,EAAW,CACzDqC,EAAW0W,IAAMoqC,YACjB9gD,EAAW0W,IAAMqqC,cAEbnpC,GAAuD,mBAC1DlB,IAAMoqC,WAAatiD,EAAS,IAD8B,cAE1DkY,IAAMqqC,WAAaviD,EAAS,IAF8B,GAMvDwjD,EAAgDzsC,YAAeL,EAAYlV,EAAWwW,IACtFyrC,EAA8ChkD,mBAAQ,WAC1D,GAAIwiD,EACF,OAAImB,GAAmB5hD,EAAW6hD,GACzBtsC,YAAeqsC,EAAiB5hD,EAAW6hD,SAEpD,EAEF,GAAIG,EAAJ,CAEE,IAAME,EAA2BC,YAAsBH,EAAmB3oC,GAC1E,EAAyB,CAACqJ,YAAgBF,EAAWnJ,GAAUqJ,YAAgBD,EAAWpJ,IAAnFuJ,EAAP,KAAeC,EAAf,KACA,GAAID,GAAUC,GAAUq/B,GAA4B/rC,EAAM,CACxD,IAAMisC,EAAoBP,IAAmBnrC,IAAMqqC,WAAat+B,EAAYD,EACtE6/B,EACJR,IAAmBnrC,IAAMqqC,WACrB5qC,EAAKmsC,QAAQ1/B,GAAQ2/B,MAAML,GAC3B/rC,EAAKmsC,QAAQz/B,GAAQ0/B,MAAML,GACjC,OAAOE,IAAsBthD,IAAQH,IAAeC,MAAMyhD,EAAqB7kB,KAAO6kB,MAKzF,CAAC5B,EAAamB,EAAiB5hD,EAAY6hD,EAAgBG,EAAmBx/B,EAAWnJ,EAASoJ,EAAWtM,IAE1GwqC,EAAkE1iD,mBACtE,2CACGyY,IAAMoqC,WAAatqC,IAAqBE,IAAMoqC,WAAakB,EAAoBC,GADlF,cAEGvrC,IAAMqqC,WAAavqC,IAAqBE,IAAMoqC,WAAamB,EAAkBD,GAFhF,IAIA,CAACC,EAAiBD,EAAmBxrC,IAGjCkqC,EAAQziD,mBAAQ,WACpB,GAAIwiD,EAAa,CACf,IAA4B+B,EAAyD7B,EAA5EjqC,IAAMoqC,YAAkD2B,EAAoB9B,EAAvCjqC,IAAMqqC,YACpD,OAAIyB,GAAmBC,EACd,IAAIC,IAAMF,EAAgBviD,SAAUwiD,EAAgBxiD,SAAUuiD,EAAgBhlB,IAAKilB,EAAgBjlB,UAE5G,EAEF,IAAMmlB,EAAmBjgC,YAAgBF,EAAWnJ,GACpD,OAAOlD,GAAQwsC,EAAmBxsC,EAAKmsC,QAAQK,QAAoBhlD,IAClE,CAAC0b,EAASmJ,EAAWi+B,EAAatqC,EAAMwqC,IAGrCiC,EAAkB3kD,mBAAQ,WAC9B,IAA4BukD,EAAyD7B,EAA5EjqC,IAAMoqC,YAAkD2B,EAAoB9B,EAAvCjqC,IAAMqqC,YACpD,EAAqC,CACnCoB,YAAsBK,EAAiBnpC,GACvC8oC,YAAsBM,EAAiBppC,IAFlCwpC,EAAP,KAAqBC,EAArB,KAIA,GAAI3sC,GAAQu7B,GAAemR,GAAgBC,EACzC,OAAO3sC,EAAK4sC,mBAAmBrR,EAAamR,EAAcC,KAG3D,CAACnC,EAAetnC,EAASlD,EAAMu7B,IAE5BkP,EAAsB3iD,mBAAQ,WAClC,GAAI2kD,GAAmBlR,EACrB,OAAO,IAAIgN,IAAQkE,EAAgBplB,IAAKkU,EAAYhU,IAAIklB,GAAiBplB,OAG1E,CAAColB,EAAiBlR,IAGhB7xC,IACHuL,EAAQ,kBAGN02C,IAAc3/B,IAAUe,UAC1B9X,EAAK,UAAGA,SAAH,QAAY,gBAGdu1C,EAAcjqC,IAAMoqC,aAAgBH,EAAcjqC,IAAMqqC,cAC3D31C,EAAK,UAAGA,SAAH,QAAY,mBAGnB,IAEwF,EAIA,EAN5Do3C,EAAyD7B,EAA5EjqC,IAAMoqC,YAAkD2B,EAAoB9B,EAAvCjqC,IAAMqqC,YAUpD,OARIyB,IAAe,OAAI5qC,QAAJ,IAAIA,GAAJ,UAAIA,EAAmBlB,IAAMoqC,mBAA7B,aAAI,EAAsCzoC,SAASmqC,MACpEp3C,EAAK,iCAAmBpL,EAAW0W,IAAMoqC,mBAApC,aAAmB,EAA8B/8C,OAAjD,aAGH0+C,IAAe,OAAI7qC,QAAJ,IAAIA,GAAJ,UAAIA,EAAmBlB,IAAMqqC,mBAA7B,aAAI,EAAsC1oC,SAASoqC,MACpEr3C,EAAK,iCAAmBpL,EAAW0W,IAAMqqC,mBAApC,aAAmB,EAA8Bh9C,OAAjD,aAGA,CACL89C,iBACA7hD,aACAmW,OACA2rC,YACAlqC,mBACA+oC,gBACAD,QACAD,cACAmC,kBACAhC,sBACAx1C,SGrHE43C,CAAkB,OAACxgC,SAAD,IAACA,WAAa7kB,EAAd,OAAyB8kB,SAAzB,IAAyBA,WAAa9kB,GAX1DkkD,GADF,GACEA,eACA7hD,GAFF,GAEEA,WACAmW,GAHF,GAGEA,KACA2rC,GAJF,GAIEA,UACAlqC,GALF,GAKEA,iBACA+oC,GANF,GAMEA,cACAD,GAPF,GAOEA,MACAD,GARF,GAQEA,YACAmC,GATF,GASEA,gBACAhC,GAVF,GAUEA,oBACAx1C,GAXF,GAWEA,MAGF,GH3DK,SAA+Bq1C,GAIpC,IAAMlkD,EAAWkY,cAejB,MAAO,CACLwuC,cAdoBtuC,uBACpB,SAACO,GACC3Y,EAAS4Y,YAAU,CAAEP,MAAO8B,IAAMoqC,WAAY5rC,aAAYurC,aAA6B,IAAhBA,OAEzE,CAAClkD,EAAUkkD,IAWXyC,cAToBvuC,uBACpB,SAACO,GACC3Y,EAAS4Y,YAAU,CAAEP,MAAO8B,IAAMqqC,WAAY7rC,aAAYurC,aAA6B,IAAhBA,OAEzE,CAAClkD,EAAUkkD,KG2C4B0C,CAAsB1C,IAAvDwC,GAAR,GAAQA,cAAeC,GAAvB,GAAuBA,cAEjBE,IAAWh4C,GAGjB,GAA0C0E,oBAAkB,GAA5D,qBAAOwrB,GAAP,MAAsB+nB,GAAtB,MAGMC,GAAWvM,cACjB,GAA0Bh/B,cAAnBC,GAAP,qBACA,GAA4BlI,mBAAiB,IAA7C,qBAAOyzC,GAAP,MAAeC,GAAf,MAGMC,IAAgB,mBACnBjtC,GAAmBtB,IADA,cAEnB2sC,GAAiBpB,GAAcmB,GAAH,oBAAqBjB,GAAckB,WAAnC,aAAqB,EAA+BrU,cAAc,UAAlE,QAAwE,IAFjF,GAMhBkW,GAAiD,CAAChtC,IAAMoqC,WAAYpqC,IAAMqqC,YAAY/hD,QAC1F,SAAC2kD,EAAa/uC,GACZ,OAAO,2BACF+uC,GADL,kBAEG/uC,EAAQ+nC,YAAe/kC,GAAiBhD,QAG7C,IAGIgvC,GAAmD,CAACltC,IAAMoqC,WAAYpqC,IAAMqqC,YAAY/hD,QAC5F,SAAC2kD,EAAa/uC,GAAW,IAAD,IACtB,OAAO,2BACF+uC,GADL,kBAEG/uC,EAFH,UAEW8uC,GAAW9uC,UAFtB,aAEW,EAAmB0oB,QAAnB,UAA2BqjB,GAAc/rC,UAAzC,QAAmD,SAGhE,IAIF,GAAsCivC,YAAmBlD,GAAcjqC,IAAMoqC,YAAaxB,KAA1F,qBAAOwE,GAAP,MAAkBC,GAAlB,MACA,GAAsCF,YAAmBlD,GAAcjqC,IAAMqqC,YAAazB,KAA1F,qBAAO0E,GAAP,MAAkBC,GAAlB,MAEMlqC,GAAiBK,cA3E+C,SA6EvDymC,KA7EuD,8EA6EtE,0DAAA/jD,EAAA,yDACOuc,IAAYqhB,IAAY76B,GAD/B,oDAEQqkD,EAAS9E,YAAkB/lC,GAASqhB,GAAS76B,IAEvBskD,EAAqDxD,GAAxEjqC,IAAMoqC,YAAgDsD,EAAkBzD,GAArCjqC,IAAMqqC,YAC7CoD,GAAkBC,GAAkB5hC,IAAcC,IAAc6gC,GALvE,2EAUK5sC,IAAMoqC,WAAanC,YAAwBwF,EAAe1D,GAAc,EAAIzoC,IAAiB,IAVlG,cAWKtB,IAAMqqC,WAAapC,YAAwByF,EAAe3D,GAAc,EAAIzoC,IAAiB,IAF1FqsC,EATR,EAmBM7hC,KAAc1hB,KAAS2hB,KAAc3hB,KACjCwjD,EAAc7hC,KAAc3hB,IAClCyjD,EAAWL,EAAOM,YAAYC,gBAC9Bl5C,EAAS24C,EAAOO,gBAChBC,EAAO,qBACLhiC,YAAgB4hC,EAAc9hC,GAAYC,GAAWpJ,WADhD,aACL,EAA+Dvb,eAD1D,QACqE,IACzEwmD,EAAcH,EAAgBC,GAAe5mB,IAAI/9B,WAClD4kD,EAAWC,EAAc5tC,IAAMoqC,WAAapqC,IAAMqqC,YAAYthD,WAC9D4kD,EAAWC,EAAc5tC,IAAMqqC,WAAarqC,IAAMoqC,YAAYrhD,WAC9DI,GACAyjD,GAASqB,eAEXvlD,EAAQqE,IAAUgX,MAAM6pC,EAAcF,EAAgBD,GAAe3mB,IAAI/9B,cAEzE8kD,EAAWL,EAAOM,YAAYI,aAC9Br5C,EAAS24C,EAAOU,aAChBF,EAAO,qBACLhiC,YAAgBF,GAAWnJ,WADtB,aACL,EAAqCvb,eADhC,QAC2C,GAD3C,oBAEL4kB,YAAgBD,GAAWpJ,WAFtB,aAEL,EAAqCvb,eAFhC,QAE2C,GAChDqmD,EAAc3mB,IAAI/9B,WAClB2kD,EAAc5mB,IAAI/9B,WAClB4kD,EAAW3tC,IAAMoqC,YAAYrhD,WAC7B4kD,EAAW3tC,IAAMqqC,YAAYthD,WAC7BI,GACAyjD,GAASqB,eAEXvlD,EAAQ,MAEVikD,IAAiB,GA/CnB,UAgDQkB,EAAQ,WAAR,cAAYG,GAAZ,QAAkBtlD,EAAQ,CAAEA,SAAU,MACzCiT,MAAK,SAACwyC,GAAD,OACJt5C,EAAM,WAAN,cAAUm5C,GAAV,mCACMtlD,EAAQ,CAAEA,SAAU,IAD1B,IAEE+hC,SAAUmd,YAAmBuG,GAC7B/3C,iBACCuF,MAAK,SAAC/J,GAAc,IAAD,QACpB+6C,IAAiB,GAEjBtpC,GAAezR,EAAU,CACvB+R,QAAQ,OAAD,iBAASsmC,GAAcjqC,IAAMoqC,mBAA7B,aAAS,EAAiCtT,cAAc,GAAxD,sBACLxtC,GAAW0W,IAAMoqC,mBADZ,aACL,EAA8B/8C,OADzB,0BAEC48C,GAAcjqC,IAAMqqC,mBAFrB,aAEC,EAAiCvT,cAAc,GAFhD,sBAEsDxtC,GAAW0W,IAAMqqC,mBAFvE,aAEsD,EAA8Bh9C,UAG7Fy/C,GAAUl7C,EAASkS,YAGtBovB,OAAM,SAACkb,GACNzB,IAAiB,GAEC,QAAX,OAAHyB,QAAG,IAAHA,OAAA,EAAAA,EAAKv3C,OACPpC,QAAQC,MAAM05C,MAtEtB,6CA7EsE,sBAwJtE,IAAMC,GAAc,WAAO,IAAD,QACxB,OAAOtE,GACL,eAAC,IAAD,CAAM/wB,WAAW,SAAjB,UACE,cAAC,KAAD,CAAMhgB,SAAS,OAAOm+B,YAAY,OAAlC,6BACM7tC,GAAW0W,IAAMoqC,mBADvB,aACM,EAA8B/8C,OADpC,sBAC8C/D,GAAW0W,IAAMqqC,mBAD/D,aAC8C,EAA8Bh9C,UAE5E,cAAC,IAAD,CACE2pC,UAAW1tC,GAAW0W,IAAMoqC,YAC5BnT,UAAW3tC,GAAW0W,IAAMqqC,YAC5Bx4B,KAAM,QAIV,eAAC,IAAD,WACE,eAAC,IAAD,CAAMmH,WAAW,SAAjB,UACE,cAAC,KAAD,CAAMhgB,SAAS,OAAOm+B,YAAY,OAAlC,gBACG+U,SADH,IACGA,QADH,EACGA,GAAiBpV,cAAc,KAElC,cAAC,IAAD,CACEE,UAAW1tC,GAAW0W,IAAMoqC,YAC5BnT,UAAW3tC,GAAW0W,IAAMqqC,YAC5Bx4B,KAAM,QAGV,cAAC+kB,EAAA,EAAD,UACE,cAAC,KAAD,CAAM59B,SAAS,OAAf,6BACM1P,GAAW0W,IAAMoqC,mBADvB,aACM,EAA8B/8C,OADpC,sBAC8C/D,GAAW0W,IAAMqqC,mBAD/D,aAC8C,EAA8Bh9C,OAD5E,oBAIF,cAAC,KAAD,CAAMiO,OAAK,EAACwd,UAAU,OAAOjB,GAAG,OAAhC,SACGpwB,GAAE,mGAAoG,CACrGygD,SAAU5mC,GAAkB,YAOhCgtC,GAAc,WAClB,OACE,cAAC,EAAD,CACEtE,MAAOA,GACP1gD,WAAYA,GACZ2gD,cAAeA,GACfF,YAAaA,GACbI,MAAOA,GACPD,oBAAqBA,MAKrBvmB,GAAcl8B,GAAE,wDAAyD,CAC7E8mD,QAAO,oBAAEtE,GAAcjqC,IAAMoqC,mBAAtB,aAAE,EAAiCtT,cAAc,UAAjD,QAAuD,GAC9D0X,QAAO,sBAAEllD,GAAW0W,IAAMoqC,mBAAnB,cAAE,GAA8B/8C,cAAhC,UAA0C,GACjDohD,QAAO,sBAAExE,GAAcjqC,IAAMqqC,mBAAtB,cAAE,GAAiCvT,cAAc,UAAjD,UAAuD,GAC9D4X,QAAO,sBAAEplD,GAAW0W,IAAMqqC,mBAAnB,cAAE,GAA8Bh9C,cAAhC,UAA0C,KAG7CshD,GAAwB1wC,uBAC5B,SAAC2wC,GACC,IAAMC,EAAiBzwC,YAAWwwC,GAC9BC,IAAmBhE,GACrBC,GAAQz1C,KAAR,eAAqBw1C,GAArB,YAAoCD,KAEpCE,GAAQz1C,KAAR,eAAqBw5C,EAArB,YAAuChE,OAG3C,CAACA,GAAaC,GAASF,KAEnBkE,GAAwB7wC,uBAC5B,SAAC8wC,GACC,IAAMC,EAAiB5wC,YAAW2wC,GAC9BnE,KAAgBoE,EACdnE,GACFC,GAAQz1C,KAAR,eAAqBw1C,GAArB,YAAoCmE,IAEpClE,GAAQz1C,KAAR,eAAqB25C,IAGvBlE,GAAQz1C,KAAR,eAAqBu1C,IAAe,KAApC,YAA4CoE,MAGhD,CAACpE,GAAaE,GAASD,KAGnBoE,GAA4BhxC,uBAAY,WAExC4uC,IACFN,GAAc,IAEhBO,GAAU,MACT,CAACP,GAAeM,KAEbqC,GAAmB7lB,YAA2B,OAAC//B,SAAD,IAACA,QAAD,EAACA,GAAY8gD,WAAb,OAAyB9gD,SAAzB,IAAyBA,QAAzB,EAAyBA,GAAY+gD,YAEzF,GAAqChtC,aACnC,cAACqnB,EAAA,EAAD,CACExtB,MAAqBzP,GAAdsiD,GAAgB,0BAA+B,oBACtDplB,gBAAiBsqB,GACjBrqB,cAAeA,GACf9gB,KAAM+oC,GACN/wC,QAAS,kBAAM,cAAC,IAAD,CAA0ByoB,WAAY8pB,GAAa/pB,cAAegqB,MACjF3qB,YAAaA,GACbI,cAAa,OAAEtkB,SAAF,IAAEA,QAAF,EAAEA,GAAMC,kBAEvB,GACA,EACA,qBAZKyvC,GAAP,qBAeA,OACE,eAAC3kB,EAAA,EAAD,WACE,eAAC4kB,EAAA,EAAD,WACE,cAACA,EAAA,EAAD,CACEl4C,MAAOzP,GAAE,iBACTgoC,SAAUhoC,GAAE,sCACZioC,OAAQjoC,GACN,2IAEFkoC,OAAO,UAET,cAAC,IAAD,UACE,eAAC,IAAD,CAAY/L,IAAI,OAAhB,UACGmmB,IACC,cAAC7C,EAAA,EAAD,UACE,cAAC,KAAD,CAASrvC,QAAQ,UAAjB,SACE,gCACE,cAAC,KAAD,CAAM0D,MAAI,EAACxC,GAAG,MAAd,SACGtR,GAAE,2CAEL,cAAC,KAAD,CAAMsR,GAAG,MAAT,SAAgBtR,GAAE,kEAClB,cAAC,KAAD,UAAOA,GAAE,qEAKjB,cAACouC,EAAA,EAAD,CACEntC,MAAOqkD,GAAiB/sC,IAAMoqC,YAC9B7rC,YAAaguC,GACbzW,MAAO,WAAO,IAAD,IACXyW,GAAa,oBAACS,GAAWhtC,IAAMoqC,mBAAlB,aAAC,EAA8BiF,iBAA/B,QAA4C,KAE3DpZ,iBAAkB0Y,GAClB5Y,eAAgBmX,GAAaltC,IAAMoqC,YACnC7gD,SAAUD,GAAW0W,IAAMoqC,YAC3Bt2C,GAAG,6BACHuiC,iBAAe,IAEjB,cAAC6Q,EAAA,EAAD,CAAcvpC,UAAU,OAAxB,SACE,cAAC2xC,EAAA,EAAD,CAASxgD,MAAM,WAEjB,cAAC+mC,EAAA,EAAD,CACEntC,MAAOqkD,GAAiB/sC,IAAMqqC,YAC9B9rC,YAAaiuC,GACbvW,iBAAkB6Y,GAClBhZ,MAAO,WAAO,IAAD,IACX0W,GAAa,oBAACQ,GAAWhtC,IAAMqqC,mBAAlB,aAAC,EAA8BgF,iBAA/B,QAA4C,KAE3DtZ,eAAgBmX,GAAaltC,IAAMqqC,YACnC9gD,SAAUD,GAAW0W,IAAMqqC,YAC3Bv2C,GAAG,6BACHuiC,iBAAe,IAEhB/sC,GAAW0W,IAAMoqC,aAAe9gD,GAAW0W,IAAMqqC,aAAee,KAAc3/B,IAAUe,SACvF,mCACE,eAAC,IAAD,CAAWzd,QAAQ,MAAME,aAAa,OAAtC,UACE,cAAC2nC,EAAA,EAAD,CAAY7nC,QAAQ,OAApB,SACE,cAAC,KAAD,CAAMiK,SAAS,OAAf,SACiBvR,GAAdsiD,GAAgB,gCAAqC,6BAE5C,IACd,cAAC,IAAD,CAAWh7C,QAAQ,OAAOE,aAAa,OAAvC,SACE,cAAC,EAAD,CACE3F,WAAYA,GACZ4gD,oBAAqBA,GACrBH,YAAaA,GACbC,MAAOA,YAOhBkF,GACC,cAACv3C,EAAA,EAAD,CAAQgnB,UAAQ,EAAC5lB,GAAG,MAApB,SACGtR,GAAE,uBAEF0B,GAGH,eAAC,IAAD,CAAYy6B,IAAI,KAAhB,WACIwpB,KAAcmC,IAAcC,cAC5BpC,KAAcmC,IAAch8C,SAC5B+5C,KAAciC,IAAcC,cAC5BlC,KAAciC,IAAch8C,UAC5Bm5C,IACE,eAAC9V,EAAA,EAAD,WACGwW,KAAcmC,IAAcE,UAC3B,cAAC93C,EAAA,EAAD,CACES,QAASi1C,GACT1uB,SAAUyuB,KAAcmC,IAAch8C,QACtCzE,MAAOw+C,KAAciC,IAAcE,SAAW,MAAQ,OAHxD,SAKGrC,KAAcmC,IAAch8C,QAC3B,cAAC4mC,EAAA,EAAD,UAAO1yC,GAAE,mBAAoB,CAAE+3B,MAAK,WAAEl2B,GAAW0W,IAAMoqC,mBAAnB,cAAE,GAA8B/8C,WAEpE5F,GAAE,iBAAkB,CAAE+3B,MAAK,WAAEl2B,GAAW0W,IAAMoqC,mBAAnB,cAAE,GAA8B/8C,WAIhEigD,KAAciC,IAAcE,UAC3B,cAAC93C,EAAA,EAAD,CACES,QAASm1C,GACT5uB,SAAU2uB,KAAciC,IAAch8C,QACtCzE,MAAOs+C,KAAcmC,IAAcE,SAAW,MAAQ,OAHxD,SAKGnC,KAAciC,IAAch8C,QAC3B,cAAC4mC,EAAA,EAAD,UAAO1yC,GAAE,mBAAoB,CAAE+3B,MAAK,WAAEl2B,GAAW0W,IAAMqqC,mBAAnB,cAAE,GAA8Bh9C,WAEpE5F,GAAE,iBAAkB,CAAE+3B,MAAK,WAAEl2B,GAAW0W,IAAMqqC,mBAAnB,cAAE,GAA8Bh9C,cAMvE,cAACsK,EAAA,EAAD,CACEE,SACG60C,IAAazC,GAAcjqC,IAAMoqC,aAAiBH,GAAcjqC,IAAMqqC,YACnE,SACA,UAENjyC,QAAS,WACHw2B,GACFub,KAEAgF,MAGJxwB,UAAW+tB,IAAWU,KAAcmC,IAAcE,UAAYnC,KAAciC,IAAcE,SAb5F,gBAeG/6C,SAfH,IAeGA,MAASjN,GAAE,eApDhB,cAAC+V,EAAA,EAAD,YA2DN0xC,GAOA,cAAC3K,EAAA,EAAD,CAA2Bj7C,WAAY,CAACA,GAAW8gD,WAAY9gD,GAAW+gD,cAN1E5qC,KAASsqC,IAAeqB,KAAc3/B,IAAUe,QAC9C,cAAC,IAAD,CAAYvS,MAAO,CAAED,SAAU,QAASlL,MAAO,OAAQg/B,SAAU,QAAS4hB,UAAW,QAArF,SACE,cAAC,IAAD,CAAqBC,cAAe5E,GAAmBtrC,KAAMA,OAE7D,U,u7BC/bL,IAAMmpC,EAAiB,6CAQjBvhB,EAA6C,eACvD9wB,IAAQC,QAAU,CAACo5C,IAAKr5C,IAAQC,SAAUq5C,IAAGt5C,IAAQC,SAAUs5C,IAAIv5C,IAAQC,WAOjE+wB,EAAgF,eAC1FhxB,IAAQC,QAAU,IAQR2xB,EAA4E,eACtF5xB,IAAQC,QAAU,IAIRu5C,EAA+B,eACzCx5C,IAAQC,QAAU,CAACo5C,IAAKr5C,IAAQC,SAAUq5C,IAAGt5C,IAAQC,WAI3Cw5C,EAA4C,eACtDz5C,IAAQC,QAAU,CAACo5C,IAAKr5C,IAAQC,SAAUq5C,IAAGt5C,IAAQC,WAG3Cy5C,EAAkE,eAC5E15C,IAAQC,QAAU,CAAC,CAACo5C,IAAKr5C,IAAQC,SAAUq5C,IAAGt5C,IAAQC,YAM5C05C,EAA2B,GAE3BC,EAA4B,KAE5BC,EAAevnD,IAAKC,OAAO,GAG3B4hD,EAAW,IAAI1C,IAAQn/C,IAAKC,OAAO,GAAID,IAAKC,OAAO,MACnDunD,EAAYxnD,IAAKC,OAAO,KAExBwnD,EAAoC,IAAItI,IAAQn/C,IAAKC,OAAO,KAAMunD,GAClEE,EAAuC,IAAIvI,IAAQn/C,IAAKC,OAAO,KAAMunD,GACrEG,EAAqC,IAAIxI,IAAQn/C,IAAKC,OAAO,KAAMunD,GAEnEI,EAAgD,IAAIzI,IAAQn/C,IAAKC,OAAO,KAAOunD,GAE/EK,EAA2C,IAAI1I,IAAQn/C,IAAKC,OAAO,MAAOunD,GAG1EjK,EAAgBv9C,IAAK8nD,aAAa9nD,IAAKC,OAAO,IAAKD,IAAKC,OAAO,KAC/DogC,EAAmC,IAAI8e,IAAQn/C,IAAKC,OAAO,IAAKD,IAAKC,OAAO,MAE5Ey9B,EAAe,IAAIyhB,IAAQ,KAC3B/gB,EAAsB,IAAI+gB,IAAQ,KAGlC4I,EAA8B,CACzC,6CACA,6CACA,6CACA,6CACA,+C,wFCvEa9mB,IANuB,SAAC,GAAD,IAAG7uB,EAAH,EAAGA,SAAaC,EAAhB,wBACpC,cAAC,IAAD,yBAAKyd,GAAI,CAAC,OAAQ,QAASk4B,GAAG,OAAO/iB,SAAS,UAAa5yB,GAA3D,aACGD,O,gCCLL,unCA2DMmtC,EAAc,SAAC0I,EAAU1pD,EAAiB2pD,GAC9C,IAAMC,EAAgB,OAAGD,QAAH,IAAGA,IAAUzrD,IACnC,OAAO,IAAIC,IAAO8sC,SAASjrC,EAAS0pD,EAAKE,IAG9Bh9B,EAAmB,SAAC5sB,EAAiB2pD,GAChD,OAAO3I,EAAY6I,EAAU7pD,EAAS2pD,IAE3BpR,EAAoB,SAACv4C,EAAiB2pD,GACjD,OAAO3I,EAAY8I,EAAW9pD,EAAS2pD,IAK5BI,EAAmB,SAAC/pD,EAAiB2pD,GAChD,OAAO3I,EAAYgJ,EAAUhqD,EAAS2pD,IAE3BM,EAAmB,SAACjqD,EAAiB2pD,GAChD,OAAO3I,EAAYkJ,EAAUlqD,EAAS2pD,IAE3BQ,EAAsB,SAACz9C,EAAYi9C,GAC9C,IAAMl3C,EAAS23C,IAAY/kD,MAAK,SAACm0C,GAAD,OAAUA,EAAK6Q,SAAW39C,KACpDg9C,EAAMj3C,EAAO63C,eAAiBC,IAAaC,QAAUC,EAAcC,EACzE,OAAO1J,EAAY0I,EAAK5rC,YAAWrL,EAAOk4C,iBAAkBhB,IAEjDiB,EAAwB,SAACl+C,EAAYi9C,GAChD,IAAMl3C,EAAS23C,IAAY/kD,MAAK,SAACm0C,GAAD,OAAUA,EAAK6Q,SAAW39C,KAC1D,OAAOs0C,EAAY6J,EAAY/sC,YAAWrL,EAAOk4C,iBAAkBhB,IAExDmB,EAA4B,SAACnB,GACxC,OAAO3I,EAAY+J,EAAgB3Y,cAA4BuX,IAEpDqB,EAAkB,SAACrB,GAC9B,OAAO3I,EAAYiK,EAASpZ,cAAkB8X,IAEnCnjC,EAAqB,SAACmjC,GACjC,OAAO3I,EAAYvM,EAAYzC,cAA4B2X,IAEhDuB,EAA2B,SAACvB,GACvC,OAAO3I,EAAYmK,EAAmBlZ,cAA4B0X,IAEvDyB,EAA0B,SAACzB,GACtC,OAAO3I,EAAYqK,EAAiBnZ,cAA0ByX,IAEnD2B,EAA0B,SAAC3B,GACtC,OAAO3I,EAAYuK,EAAiBlZ,cAA0BsX,IAEnDr/C,EAAuB,SAACq/C,GACnC,OAAO3I,EAAYj0C,EAAcH,cAAuB+8C,IAE7C6B,EAAwB,SAAC7B,GACpC,OAAO3I,EAAYyK,EAAY1tC,cAAwB4rC,IAE5C+B,EAAyB,SAAC/B,GACrC,OAAO3I,EAAY2K,EAAgBxZ,cAAyBwX,IAEjDiC,EAAgC,SAACjC,GAC5C,OAAO3I,EAAY6K,EAAuBvZ,cAAgCqX,IAE/DmC,EAAuB,SAACnC,GACnC,OAAO3I,EAAY+K,EAAcxZ,cAAuBoX,IAE7CqC,EAAuB,SAACrC,GACnC,OAAO3I,EAAYiL,EAAczZ,cAAuBmX,IAG7CuC,EAAyB,SAACvC,GACrC,OAAO3I,EAAYmL,EAAgB1Z,cAAyBkX,IAGjDyC,GAA6B,SAACzC,GACzC,OAAO3I,EAAYqL,EAAoB3Z,cAA6BiX,IAEzD2C,GAAuB,SAAC3C,GACnC,OAAO3I,EAAYuL,EAAcza,cAAuB6X,IAE7C6C,GAAmC,SAAC7C,GAC/C,OAAO3I,EAAYyL,EAA0B9Z,cAAmCgX,IAErE+C,GAAoC,SAAC/C,GAChD,OAAO3I,EAAY2L,EAA2B/Z,cAAoC+W,IAEvEiD,GAAiC,SAACjD,GAC7C,OAAO3I,EAAY6L,EAAwBha,cAAiC8W,IAEjEmD,GAAyB,SAACnD,GACrC,OAAO3I,EAAY+L,EAAgBja,cAAyB6W,K,sKC/HjDqD,EAAkBtqC,YAC7B,+BAD6C,uCAE7C,WAAO3gB,GAAP,iBAAA/C,EAAA,6DAEQiuD,EAAoB3pD,OAAOkI,KAAKwsC,KAAYx3C,IAAxB,iBAAA8C,OAAA,IAAAA,CAAA,UAA4B,WAAO4pD,GAAP,+BAAAluD,EAAA,6DACnCmuD,EAAenV,IAAWkV,GAAnCltD,QACFA,EAAU8d,YAAWqvC,GACrB/hC,EAAWmtB,YAAkBv4C,GAE7BotD,EAL8C,+BAAApuD,EAAA,MAK1B,WAAOoO,GAAP,mBAAApO,EAAA,+EAEoBosB,EAASiiC,oBAAoBtrD,EAASqL,GAF1D,cAEhBkgD,EAFgB,OAGhBnnC,EAAUmnC,EAAUv4B,WAHJ,SAKE3N,YAAgBpnB,EAASmmB,GAL3B,cAKhBonC,EALgB,yBAMf,CAACpnC,EAASonC,EAAU3U,aANL,yCAQtBvrC,QAAQC,MAAM,oBAAd,MARsB,kBASf,MATe,0DAL0B,+DAkBpB8d,EAASyB,UAAU9qB,GAlBC,UAkB9CyrD,EAlB8C,OAqBlC,KAFZ3gC,EAAY2gC,EAAkBz4B,YAnBgB,0CAsB3C,IAtB2C,QA4BpD,IAHM04B,EAAuB,GAGpBpsD,EAAI,EAAGA,EAAIwrB,EAAWxrB,IAC7BosD,EAAqBx/C,KAAKm/C,EAAkB/rD,IA7BM,iBAgC9Bue,QAAQC,IAAI4tC,GAhCkB,eAgC9CC,EAhC8C,yBAiC7CA,GAjC6C,4CAA5B,uDAF5B,SAsC8B9tC,QAAQC,IAAIotC,GAtC1C,cAsCQU,EAtCR,yBAwCSA,EAAcC,QAxCvB,2CAF6C,uDA8ClCC,EAAoBvqC,YAAY,CAC3C3W,KAAM,eACN2V,aAzDsC,CACtCwF,eAAe,EACf7b,WAAW,EACX7G,KAAM,IAuDNme,SAAU,GACVI,cAAe,SAACC,GACdA,EAAQC,QAAQmpC,EAAgBphB,SAAS,SAACrsC,GACxCA,EAAM0M,WAAY,KAEpB2X,EAAQC,QAAQmpC,EAAgBlpC,WAAW,SAACvkB,EAAOkkB,GACjDlkB,EAAM0M,WAAY,EAClB1M,EAAMuoB,eAAgB,EACtBvoB,EAAM6F,KAAOqe,EAAOC,QAAQxiB,QAAO,SAACu6B,EAAOqyB,GACzC,IAAKA,EACH,OAAOryB,EAGT,MAA8BqyB,EAA9B,mBAAO3nC,EAAP,KAAgByyB,EAAhB,KAEA,OAAO,2BACFnd,GADL,kBAEGmd,EAAand,EAAMmd,GAAN,sBAAwBnd,EAAMmd,IAA9B,CAA2CzyB,IAAW,CAACA,OAEtE,UAKM0nC,MAAf,S,6SC5DME,EAAiBvmD,YAAO80C,IAAP90C,CAAH,6CASb,SAASwmD,EAAT,GAAkF,IAAnD31C,EAAkD,EAAlDA,KAAkD,IAA5CkwC,qBAA4C,SAC9ExmD,EAAY0W,cAAZ1W,QAEA1B,EAAMgW,cAANhW,EAEFuvC,EAAY2Y,EAAgBlwC,EAAKoN,OAASwoC,YAAe51C,EAAKoN,QAC9DoqB,EAAY0Y,EAAgBlwC,EAAKqN,OAASuoC,YAAe51C,EAAKqN,QAEpE,EAAgC1T,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBi8C,EAAjB,KAEMC,EAAkBrsD,YAAe,OAACC,QAAD,IAACA,SAAWlC,EAAWwY,EAAKC,gBAC7D81C,EAAkB1a,YAAer7B,EAAKC,gBAEtCwqC,EACFqL,GAAqBC,GAAmB3sD,IAAK4sD,mBAAmBD,EAAgB1uB,IAAKyuB,EAAgBzuB,KACnG,IAAIkhB,IAAQuN,EAAgBzuB,IAAK0uB,EAAgB1uB,UACjD7/B,EAEN,EACIwY,GACA+1C,GACAD,GAEF1sD,IAAK4sD,mBAAmBD,EAAgB1uB,IAAKyuB,EAAgBzuB,KACzD,CACErnB,EAAKi2C,kBAAkBj2C,EAAKoN,OAAQ2oC,EAAiBD,GAAiB,GACtE91C,EAAKi2C,kBAAkBj2C,EAAKqN,OAAQ0oC,EAAiBD,GAAiB,IAExE,MAACtuD,OAAWA,GAVlB,mBAAO0uD,EAAP,KAAwBC,EAAxB,KAYA,OACE,mCACGL,GAAmB1sD,IAAKs9C,YAAYoP,EAAgBzuB,IAAKj+B,IAAKC,OAAO,IACpE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAY86B,IAAI,OAAhB,UACE,cAACuxB,EAAD,UACE,cAAC,IAAD,UACE,cAAC,KAAD,CAAM54C,MAAM,YAAYhB,MAAI,EAA5B,SACG9T,EAAE,kCAIT,eAAC0tD,EAAD,CAAgB/8C,QAAS,kBAAMk9C,GAAaj8C,IAA5C,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAoB29B,UAAWA,EAAWC,UAAWA,EAAWC,QAAM,EAACrlB,KAAM,KAC7E,eAAC,KAAD,CAAMvW,OAAK,EAACiB,MAAM,aAAlB,UACGy6B,EAAU3pC,OADb,IACsB4pC,EAAU5pC,OADhC,YAIF,cAAC,IAAD,UACE,cAAC,KAAD,UAAOkoD,EAAkBA,EAAgBze,cAAc,GAAK,WAGhE,eAAC,IAAD,CAAYlT,IAAI,MAAhB,UACE,eAACuxB,EAAD,WACE,eAAC,KAAD,CAAM54C,MAAM,aAAajB,OAAK,EAA9B,UACG7T,EAAE,iBADL,OAGA,cAAC,KAAD,UAAOyiD,EAAmB,UAAMA,EAAoBv5C,QAAQ,GAAlC,KAA0C,SAEtE,eAACwkD,EAAD,WACE,eAAC,KAAD,CAAM54C,MAAM,aAAajB,OAAK,EAA9B,UACG7T,EAAE,iBAAkB,CAAE+3B,MAAOwX,EAAU3pC,SAD1C,OAGCsoD,EACC,cAAC,IAAD,UACE,cAAC,KAAD,CAAMn5C,GAAG,MAAT,gBAAgBm5C,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAiB7e,cAAc,OAGjD,OAGJ,eAACqe,EAAD,WACE,eAAC,KAAD,CAAM54C,MAAM,aAAajB,OAAK,EAA9B,UACG7T,EAAE,iBAAkB,CAAE+3B,MAAOyX,EAAU5pC,SAD1C,OAGCuoD,EACC,cAAC,IAAD,UACE,cAAC,KAAD,CAAMp5C,GAAG,MAAT,gBAAgBo5C,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAiB9e,cAAc,OAGjD,iBAQZ,cAAC,IAAD,UACE,eAAC,KAAD,CAAM99B,SAAS,OAAOiB,MAAO,CAAE6e,UAAW,UAA1C,UACE,sBAAMre,KAAK,MAAM,aAAW,eAA5B,0BAEQ,IACPhT,EACC,qNASC,SAASouD,EAAT,GAAkE,IAAtCp2C,EAAqC,EAArCA,KAASvE,EAA4B,iBACtE/R,EAAY0W,cAAZ1W,QAEF6tC,EAAYqe,YAAe51C,EAAKoN,QAChCoqB,EAAYoe,YAAe51C,EAAKqN,QAEtC,EAAgC1T,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBi8C,EAAjB,KAEMC,EAAkBrsD,YAAe,OAACC,QAAD,IAACA,SAAWlC,EAAWwY,EAAKC,gBAC7D81C,EAAkB1a,YAAer7B,EAAKC,gBAEtCwqC,EACFqL,GAAqBC,GAAmB3sD,IAAK4sD,mBAAmBD,EAAgB1uB,IAAKyuB,EAAgBzuB,KACnG,IAAIkhB,IAAQuN,EAAgBzuB,IAAK0uB,EAAgB1uB,UACjD7/B,EAEN,EACIwY,GACA+1C,GACAD,GAEF1sD,IAAK4sD,mBAAmBD,EAAgB1uB,IAAKyuB,EAAgBzuB,KACzD,CACErnB,EAAKi2C,kBAAkBj2C,EAAKoN,OAAQ2oC,EAAiBD,GAAiB,GACtE91C,EAAKi2C,kBAAkBj2C,EAAKqN,OAAQ0oC,EAAiBD,GAAiB,IAExE,MAACtuD,OAAWA,GAVlB,mBAAO0uD,EAAP,KAAwBC,EAAxB,KAYA,OACE,eAAC,IAAD,yBAAM37C,MAAO,CAAEhL,aAAc,SAAciM,GAA3C,cACE,eAAC,IAAD,CAAM+B,eAAe,gBAAgBxC,KAAK,SAASrC,QAAS,kBAAMk9C,GAAaj8C,IAAWmf,EAAE,OAA5F,UACE,eAAC,IAAD,CAAMC,cAAc,SAApB,UACE,eAAC,IAAD,CAAMO,WAAW,SAASjgB,GAAG,MAA7B,UACE,cAAC,IAAD,CAAoBi+B,UAAWA,EAAWC,UAAWA,EAAWplB,KAAM,KACtE,cAAC,KAAD,CAAMtW,MAAI,EAACiB,GAAG,MAAd,SACIw6B,GAAcC,EAAf,UAAqDD,EAAU3pC,OAA/D,YAAyE4pC,EAAU5pC,QAAxD,cAAC,IAAD,2BAGhC,cAAC,KAAD,CAAM2L,SAAS,OAAOuD,MAAM,aAA5B,gBACGg5C,QADH,IACGA,OADH,EACGA,EAAiBze,cAAc,QAGnCz9B,EAAW,cAAC,IAAD,IAAoB,cAAC,IAAD,OAGjCA,GACC,eAAC,IAAD,CAAYuqB,IAAI,MAAM3pB,MAAO,CAAElL,QAAS,QAAxC,UACE,eAAComD,EAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,CAActjC,KAAK,OAAOtoB,SAAUytC,IACpC,eAAC,KAAD,CAAMz6B,MAAM,aAAaC,GAAG,MAA5B,oBACUw6B,EAAU3pC,aAGrBsoD,EACC,cAAC,IAAD,UACE,cAAC,KAAD,CAAMn5C,GAAG,MAAT,gBAAgBm5C,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAiB7e,cAAc,OAGjD,OAIJ,eAACqe,EAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,CAActjC,KAAK,OAAOtoB,SAAU0tC,IACpC,eAAC,KAAD,CAAM16B,MAAM,aAAaC,GAAG,MAA5B,oBACUy6B,EAAU5pC,aAGrBuoD,EACC,cAAC,IAAD,UACE,cAAC,KAAD,CAAMp5C,GAAG,MAAT,gBAAgBo5C,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAiB9e,cAAc,OAGjD,OAIJ,eAACqe,EAAD,WACE,cAAC,KAAD,CAAM54C,MAAM,aAAZ,2BACA,cAAC,KAAD,UACG2tC,EAAmB,UACsB,SAAnCA,EAAoBv5C,QAAQ,GAAgB,QAAUu5C,EAAoBv5C,QAAQ,GADrE,KAEhB,SAIP4kD,GAAmB1sD,IAAKs9C,YAAYoP,EAAgBzuB,IAAKspB,MACxD,eAAC,IAAD,CAAM33B,cAAc,SAApB,UACE,cAAC,IAAD,CACEoX,GAAIC,IACJrvB,GAAE,kBAAarC,YAAW44B,GAAxB,YAAsC54B,YAAW64B,IACnDp/B,QAAQ,UACR/I,MAAM,OACNiK,GAAG,MALL,oBASA,cAAC,IAAD,CACE82B,GAAIC,IACJrvB,GAAE,eAAUrC,YAAW44B,GAArB,YAAmC54B,YAAW64B,IAChDp/B,QAAQ,OACRmuC,UAAW,cAAC,IAAD,CAASzpC,MAAM,YAC1BzN,MAAM,OALR,+C,gCCpPd,ipBAwDagnD,EAAW,SAAC1uD,GACvB,IAAQ48B,EAAYnkB,cAAZmkB,QACR,OAAOz8B,mBAAQ,kBAAMysB,YAAiB5sB,EAAS48B,EAAQukB,eAAc,CAACnhD,EAAS48B,KAMpE+xB,EAAY,SAAC3uD,GACxB,IAAQ48B,EAAYnkB,cAAZmkB,QACR,OAAOz8B,mBAAQ,kBAAMo4C,YAAkBv4C,EAAS48B,EAAQukB,eAAc,CAACnhD,EAAS48B,KAGrEgyB,EAAU,WACrB,IAAQhyB,EAAYnkB,cAAZmkB,QACR,OAAOz8B,mBAAQ,kBAAM6qD,YAAgBpuB,EAAQukB,eAAc,CAACvkB,KAuBjDiyB,EAAgB,WAC3B,IAAQjyB,EAAYnkB,cAAZmkB,QACR,OAAOz8B,mBAAQ,kBAAMqrD,YAAsB5uB,EAAQukB,eAAc,CAACvkB,KAGvDkyB,EAAc,SAACpiD,GAC1B,IAAQkwB,EAAYnkB,cAAZmkB,QACR,OAAOz8B,mBAAQ,kBAAMgqD,YAAoBz9C,EAAIkwB,EAAQukB,eAAc,CAACz0C,EAAIkwB,KA4B7DmyB,EAAuB,WAClC,IAAQnyB,EAAYnkB,cAAZmkB,QACR,OAAOz8B,mBAAQ,kBAAM2rD,YAAqBlvB,EAAQukB,eAAc,CAACvkB,KAGtDoyB,EAAuB,WAClC,IAAQpyB,EAAYnkB,cAAZmkB,QACR,OAAOz8B,mBAAQ,kBAAM6rD,YAAqBpvB,EAAQukB,eAAc,CAACvkB,KAuBtDqyB,EAAiC,WAC5C,IAAQryB,EAAYnkB,cAAZmkB,QACR,OAAOz8B,mBAAQ,kBAAMysD,YAA+BhwB,EAAQukB,eAAc,CAACvkB,KAGhEsyB,EAAyB,WACpC,MAA6Bz2C,cAArB1W,EAAR,EAAQA,QAAS66B,EAAjB,EAAiBA,QAYjB,OAAOz8B,mBAAQ,kBAAM2sD,YAAuB/qD,EAAU66B,EAAQukB,YAAcvkB,KAAU,CAACA,EAAS76B,KAMlG,SAASotD,EAAYnvD,EAA6BihD,GAAyD,IAA/CmO,IAA8C,yDACxG,EAA6B32C,cAArBmkB,EAAR,EAAQA,QAAS76B,EAAjB,EAAiBA,QAEjB,OAAO5B,mBAAQ,WACb,IAAKH,IAAYihD,IAAQrkB,EAAS,OAAO,KACzC,IACE,OAAOokB,YAAYhhD,EAASihD,EAAKrkB,EAASwyB,GAAwBrtD,EAAUA,OAAUlC,GACtF,MAAOyN,GAEP,OADAD,QAAQC,MAAM,yBAA0BA,GACjC,QAER,CAACtN,EAASihD,EAAKrkB,EAASwyB,EAAsBrtD,IAG5C,SAAS4xC,EAAiB32B,EAAuBoyC,GACtD,OAAOD,EAAYnyC,EAAco+B,EAAWgU,GAGvC,SAASC,EAAgBD,GAC9B,IAAQ7zC,EAAY9C,cAAZ8C,QACR,OAAO4zC,EAAY5zC,EAAUqoC,IAAKroC,GAASvb,aAAUH,EAAWyvD,EAAUF,GAGrE,SAASnxB,EAAwBmxB,GACtC,IACIpvD,EADIub,EAAY9C,cAAZ8C,QAER,GAAIA,EAEF,OAAQA,GACN,KAAKpM,IAAQC,QACXpP,EAAU,6CAIhB,OAAOmvD,EAAYnvD,EAASuvD,EAASH,GAGhC,SAAS9wB,EAAuBt+B,EAA6BovD,GAClE,OAAOD,EAAYnvD,EAASwvD,EAAyBJ,GAGhD,SAASK,EAAwBzyC,EAAuBoyC,GAC7D,OAAOD,EAAYnyC,EAAcq+B,IAAmB+T,GAG/C,SAASM,EAAgBC,EAAsBP,GACpD,OAAOD,EAAYQ,EAAanrC,IAAmB4qC,GAG9C,SAAS5sD,IACd,OAAO2sD,EAAYrd,cAAuB8d,GAAc,K,iCCpO3CntC,IAFO,SAAC7d,GAAD,OAAiBA,GAHN,KAGyCA,GAF3C,M,iCCD/B,0GAYairD,EAAa,SACxBt8B,EACAu8B,EACArW,EACAsW,GAEA,IAAMC,EAA0B,IAAIrqD,IAAUmqD,GAAkBppD,MAAMqpD,GAAerpD,MAAMupD,KACrFC,EAA0B,IAAIvqD,IAAU4tB,GAAmB7sB,MAAM+yC,GACjEhxC,EAAMunD,EAAwBlpD,IAAIopD,GAAyBxpD,MAAM,KACvE,OAAO+B,EAAIyS,UAAYzS,EAAI0nD,WAAa,KAAO1nD,EAAIssB,YAUxCq7B,EAAa,SACxBC,EACAvtB,EACAwtB,EACAC,GACsD,IAAD,EAE/CC,EAD6BC,IAAc/pD,MAAM2pD,GACL3pD,MAAMo8B,GAAch8B,IAAIwpD,GAAkB5pD,MAAM,KAC9FgqD,EAAyB,KAK7B,OAJKF,EAAet1C,SAAWs1C,EAAeL,aAC5CO,EAAyBF,EAAez7B,YAGnC,CAAEy7B,eAAgBE,EAAwBC,aAD/B,UAAGC,EAAM,OAACL,QAAD,IAACA,OAAD,EAACA,EAAa7+C,4BAAvB,QAA+C,K,8CCzC7Dm/C,E,KAAarpD,EAAOV,IAAV,4NAaD+pD,O,8CCbTra,E,KAAUhvC,EAAOV,IAAV,miBA4BE0vC,O,gKCcAsa,IA/ByB,SAAC,GASlC,IARLxvD,EAQI,EARJA,MAQI,IAPJ6T,aAOI,MAPI,OAOJ,MANJyC,gBAMI,MANO,EAMP,MALJm5C,kBAKI,SAJJx4B,EAII,EAJJA,KACAy4B,EAGI,EAHJA,OACAhgD,EAEI,EAFJA,QACG8C,EACC,iBACEm9C,EAAgBzyD,iBAAO,GAM7B,OAJAK,qBAAU,WACRoyD,EAAcnyD,QAAUwC,IACvB,CAACA,IAGF,cAAC,KAAD,yBAAM6T,MAAO47C,EAAa,eAAiB57C,EAAOnE,QAASA,GAAa8C,GAAxE,aACE,cAAC,IAAD,CACEo9C,MAAOD,EAAcnyD,QACrBqyD,IAAK7vD,EACL0vD,OAAQA,EACRI,OAAQ74B,EACR3gB,SAAUA,EACVy5C,SAAU,EACVC,UAAU,W,iCCtClB,IACMC,EAAkB,KAClBC,EAAiB,MACjBC,EAAmB,QACnBC,EAAkB,SAgDTC,IAzCQ,SAACC,GACtB,IAAIC,EAAQ7oD,KAAK8oD,IAAIF,GACfG,EAAW,CACfC,MAAO,EACPC,OAAQ,EACR/oD,KAAM,EACNgpD,MAAO,EACPC,QAAS,EACTP,QAAS,GA8BX,OA3BIC,GAASH,IACXK,EAASC,MAAQhpD,KAAKopD,MAAMP,EAAQH,GACpCG,GAASE,EAASC,MAAQN,GAGxBG,GAASJ,IACXM,EAASE,OAASjpD,KAAKopD,MAAMP,EAAQJ,GACrCI,GAASE,EAASE,OAASR,GAGzBI,GAASL,IACXO,EAAS7oD,KAAOF,KAAKopD,MAAMP,EAAQL,GACnCK,GAASE,EAAS7oD,KAAOsoD,GAGvBK,GAASN,IACXQ,EAASG,MAAQlpD,KAAKopD,MAAMP,EAAQN,GACpCM,GAASE,EAASG,MAAQX,GAGxBM,GA1CoB,KA2CtBE,EAASI,QAAUnpD,KAAKopD,MAAMP,EA3CR,IA4CtBA,GA5CsB,GA4CbE,EAASI,SAGpBJ,EAASH,QAAUC,EAEZE,I,kGC7CHM,EAAiB7qD,IAAOV,IAAV,uTAOJ,qBAAGO,MAAkBirD,QAAQC,SAG7B,qBAAGlrD,MAAkBS,OAAOulC,SAKtCmlB,EAAwBhrD,IAAOV,IAAV,6UAKX,qBAAGO,MAAkBS,OAAOulC,SAC/B,qBAAGhmC,MAAkBorD,SAASpqD,YAQvC,qBAAGhB,MAAkB+vB,aAAa1P,MAKhCgrC,EAAoBlrD,IAAOV,IAAV,iXAEZ,qBAAGY,SAEE,qBAAGL,MAAkBS,OAAOulC,SAOxC,qBAAGhmC,MAAkB+vB,aAAa1P,MAIlC,SAAC5T,GAAD,OACAA,EAAM6+C,QACNC,YADA,icAEIP,GAC2B,qBAAGhrD,MAAkBS,OAAO+qD,kBACzC,qBAAGxrD,MAAkB0pB,QAAQkV,YAI3CusB,GAIuB,qBAAGnrD,MAAkBS,OAAO+qD,kBAIrC,qBAAGxrD,MAAkB0pB,QAAQkV,gBAa7C6sB,EAAetrD,IAAOqoB,GAAV,qGAIL,qBAAGxoB,MAAkBorD,SAASpqD,YAGrC0qD,EAAWvrD,IAAOwrD,GAAV,kIA8ECC,IA5DsC,SAAC,GAA2B,IAAzBh4B,EAAwB,EAAxBA,QAAS9E,EAAe,EAAfA,SACzD+8B,EAAe10D,iBAAO,MACtB20D,EAAc30D,iBAAO,MAC3B,EAA4BwT,oBAAS,GAArC,mBAAO2gD,EAAP,KAAeS,EAAf,KACA,EAAsDphD,mBAAS,GAA/D,mBAAOqhD,EAAP,KAA4BC,EAA5B,KACA,EAA0CthD,mBAAS,CAAEtK,MAAO,EAAGoqB,OAAQ,IAAvE,mBAAOyhC,EAAP,KAAsBC,EAAtB,KAEMC,EAAW,SAACr9B,GAChBg9B,GAAWT,GACXv8B,EAAMs9B,mBA4BR,OAhBA70D,qBAAU,WACR20D,EAAiB,CACf9rD,MAAOyrD,EAAYr0D,QAAQ60D,YAC3B7hC,OAAQqhC,EAAYr0D,QAAQ80D,eAG9B,IAAMC,EAAqB,WACzBT,GAAU,IAIZ,OADA5+C,SAAS0mC,iBAAiB,QAAS2Y,GAC5B,WACLr/C,SAAS2mC,oBAAoB,QAAS0Y,MAEvC,IAGD,eAACnB,EAAD,yBAAmBC,OAAQA,EAAQ9gC,IAAKqhC,GAAkBK,GAA1D,cAC2B,IAAxBA,EAAc7rD,OACb,cAAC2qD,EAAD,CAAgBrhD,QAASyiD,EAAzB,SACE,cAAC,KAAD,CAAMt+C,MAAM,UAAZ,SAAuB8lB,EAAQo4B,GAAqBzkB,UAGxD,cAAC,IAAD,CAAmBz5B,MAAM,UAAUnE,QAASyiD,IAC5C,cAACjB,EAAD,UACE,cAACM,EAAD,CAAcjhC,IAAKshC,EAAnB,SACGl4B,EAAQz6B,KAAI,SAACszD,EAAQ1mD,GAAT,OACXA,IAAUimD,EACR,cAACN,EAAD,CAAU/hD,SArCG+iD,EAqCsB3mD,EArCI,WACjDkmD,EAAuBS,GACvBX,GAAU,GAENj9B,GACFA,EAAS8E,EAAQ84B,MAgCT,SACE,cAAC,KAAD,CAAM5+C,MAAM,UAAZ,SAAuB2+C,EAAOllB,SADgBklB,EAAOllB,OAGrD,KAxCU,IAACmlB,e,mDC7FZC,IAfW,SAACC,EAAoBC,GAC7C,MAAwCliD,oBAAS,GAAjD,mBAAOmiD,EAAP,KAAqBC,EAArB,KAWA,OATAv1D,qBAAU,WACR,IAAIw1D,EAMJ,OALIJ,IAAcE,EAChBC,GAAgB,IACNH,GAAaE,IACvBE,EAAYpgD,YAAW,kBAAMmgD,GAAgB,KAAQF,IAEhD,kBAAM56B,aAAa+6B,MACzB,CAACJ,EAAWC,EAAWC,IACnBA,I,iECLMG,IAhB2B,SAACxgD,GACzC,OACE,eAAC,KAAD,yBAAKi0B,QAAQ,aAAgBj0B,GAA7B,cACE,sBAAMwuC,EAAE,WAAWiS,EAAE,WAAW7sD,MAAM,KAAKoqB,OAAO,KAAK0iC,GAAG,KAAK5W,KAAK,YACpE,sBAAM5V,EAAE,0BAA0B0V,OAAO,QAAQ7gB,YAAY,IAAIihB,cAAc,QAAQC,eAAe,UACtG,sBACE/V,EAAE,iCACF0V,OAAO,QACP7gB,YAAY,IACZihB,cAAc,QACdC,eAAe,gB,sOCDjB0W,EAAcjtD,IAAOV,IAAV,uPACK,gBAAGO,EAAH,EAAGA,MAAH,SAAUqtD,QAAyB,cAAgBrtD,EAAMS,OAAOO,YAOxE,qBAAGqsD,SAA0B,aACnB,gBAAGrtD,EAAH,EAAGA,MAAH,SAAUqtD,SAA0BrtD,EAAMS,OAAOC,cAGnD,gBAAGV,EAAH,EAAGA,MAAH,SAAUqtD,SAAyBrtD,EAAMS,OAAOO,YACzD,qBAAGqsD,SAAyB,SAG1B,SAASC,EAAT,GAQX,IAPFp5C,EAOC,EAPDA,QACAq5C,EAMC,EANDA,SACAvlB,EAKC,EALDA,iBAMQhvC,EAAMgW,cAANhW,EACR,OACE,eAAC,IAAD,CAAYm8B,IAAI,KAAhB,UACE,eAAC,IAAD,WACE,cAAC,KAAD,CAAM5qB,SAAS,OAAf,SAAuBvR,EAAE,kBACzB,cAAColC,EAAA,EAAD,CAAgBC,KAAMrlC,EAAE,uDAAwD+U,GAAG,WAErF,eAAC,IAAD,CAASonB,IAAI,OAAb,UACE,eAACi4B,EAAD,CACEzjD,QAAS,WACFq+B,GAAqBhQ,YAAegQ,EAAkBrsC,MACzD4xD,EAAS5xD,MAGb0xD,QAASrlB,IAAqBrsC,IANhC,UAQE,cAAC,IAAD,CAAcb,SAAUa,IAAO6P,MAAO,CAAEk9B,YAAa,KACrD,cAAC,KAAD,qBAEAx0B,EAAUotC,IAAgBptC,GAAW,IAAI/a,KAAI,SAACY,GAC9C,IAAMgtC,EAAWiB,aAA4BjtC,KAASitC,EAAiBrvC,UAAYoB,EAAMpB,QACzF,OACE,eAACy0D,EAAD,CAAazjD,QAAS,kBAAOo9B,GAAYwmB,EAASxzD,IAAQszD,QAAStmB,EAAnE,UACE,cAAC,IAAD,CAAcjsC,SAAUf,EAAOyR,MAAO,CAAEk9B,YAAa,KACrD,cAAC,KAAD,UAAO3uC,EAAM6E,WAFmE7E,EAAMpB,kB,qFC9C9F60D,EAAertD,IAAOV,IAAV,0MAQL,qBAAGguD,IAAiB,MAAQ,OAGnCC,EAAYvtD,YAAOwtD,IAAPxtD,CAAH,mGAIH,qBAAGH,MAAkBS,OAAOmtD,WAGlCC,EAAe1tD,IAAOV,IAAV,0KASH,SAASquD,EAAT,GAYX,IAAD,IAXD/zD,EAWC,EAXDA,MACAyR,EAUC,EAVDA,MACAiiD,EASC,EATDA,IACAM,EAQC,EARDA,eACAC,EAOC,EAPDA,eASQ95C,EAAY9C,cAAZ8C,QAEAlb,EAAMgW,cAANhW,EAGFi+C,EAAoBC,cACpBC,EAAOjjC,IAAO,OAAI+iC,QAAJ,IAAIA,GAAJ,UAAIA,EAAoB/iC,UAAxB,iBAAI,EAA+Bna,EAAMpB,gBAAzC,aAAI,EAA+Cw+C,MAGjE8W,EAAUC,YAAoBn0D,GAC9BglB,EAAWovC,YAAiBp0D,GAElC,OACE,eAACyzD,EAAD,CAAchiD,MAAOA,EAArB,UACE,cAAC6X,EAAA,EAAD,CAAcvoB,SAAUf,EAAOqpB,KAAK,OAAO5X,MAAO,CAAE4iD,QAASX,EAAM,MAAQ,OAC3E,eAAC,IAAD,CAAYt4B,IAAI,MAAM3pB,MAAO,CAAE4iD,QAASX,EAAM,MAAQ,KAAtD,UACE,eAAC,IAAD,WACE,cAAC,KAAD,UAAO1zD,EAAM6E,SACb,cAAC,KAAD,CAAMkP,MAAM,eAAeC,GAAG,MAA9B,SACE,cAAC8/C,EAAD,CAAcplD,MAAO1O,EAAMuL,KAA3B,SAAkCvL,EAAMuL,YAG3C6xC,GAAQA,EAAK1zB,SACZ,eAAC,IAAD,WACE,eAAC,KAAD,CAAM5W,OAAK,EAAC0B,GAAG,MAAMT,MAAM,aAA3B,UACG9U,EAAE,OADL,IACcm+C,EAAK7xC,QAEnB,cAAC,IAAD,CAAUme,QAAS0zB,EAAK1zB,QAASL,KAAK,eAI1CrE,GAAakvC,EAab,eAAC,IAAD,CAAUziD,MAAO,CAAED,SAAU,eAA7B,UACE,cAACmiD,EAAD,IACA,cAAC,KAAD,CAAM5/C,MAAM,UAAZ,uBAdF,cAAC,IAAD,CACEzN,MAAM,cACNsJ,QAAS,WACHqkD,GACFA,EAAej0D,GAEjBg0D,KANJ,SASG/0D,EAAE,eC3Eb,SAASq1D,EAAYvzD,GACnB,OAAOA,aAAoBC,IAAQD,EAASnC,QAAUmC,IAAaa,IAAQ,QAAU,GAGvF,IAAM2yD,EAAoBnuD,YAAO4L,KAAP5L,CAAH,yHAOjBouD,EAAkBpuD,IAAOV,IAAV,gIAQrB,SAASgqD,EAAT,GAA4D,IAAzC/kC,EAAwC,EAAxCA,QACjB,OAAO,cAAC4pC,EAAD,CAAmB7lD,MAAOic,EAAQk8B,UAAlC,SAA8Cl8B,EAAQ2jB,cAAc,KAG7E,IAAMmmB,EAAWruD,YAAO80C,IAAP90C,CAAH,+QAMF,qBAAG+vB,UAA4B,aACvB,qBAAGA,UAA2B,UAE1B,gBAAGlwB,EAAH,EAAGA,MAAH,SAAUkwB,UAA4BlwB,EAAMS,OAAOC,cAE9D,gBAAGwvB,EAAH,EAAGA,SAAU6W,EAAb,EAAaA,SAAb,OAA6B7W,GAAY6W,EAAW,GAAM,KAGvE,SAAS0nB,EAAT,GAYI,IAXF3zD,EAWC,EAXDA,SACAyyD,EAUC,EAVDA,SACAmB,EASC,EATDA,WACAC,EAQC,EARDA,cACAnjD,EAOC,EAPDA,MAQQ9Q,EAAY0W,cAAZ1W,QACF6nB,EAAM8rC,EAAYvzD,GAClB8zD,EAAoBC,cACpBC,EAAmBxU,YAAcsU,EAAmB9zD,GACpDi0D,EAAcb,YAAoBpzD,GAClC4pB,EAAU9oB,YAAkB,OAAClB,QAAD,IAACA,SAAWlC,EAAWsC,GAGzD,OACE,eAAC0zD,EAAD,CACEhjD,MAAOA,EACP0D,UAAS,qBAAgBqT,GACzB5Y,QAAS,kBAAO+kD,EAAa,KAAOnB,KACpCr9B,SAAUw+B,EACV3nB,SAAU4nB,EALZ,UAOE,cAAC,IAAD,CAAc7zD,SAAUA,EAAUsoB,KAAK,SACvC,eAACq1B,EAAA,EAAD,WACE,cAAC,KAAD,CAAM3rC,MAAI,EAAV,SAAYhS,EAAS8D,SACrB,eAAC,KAAD,CAAMkP,MAAM,aAAajB,OAAK,EAACmiD,UAAQ,EAAC3vB,SAAS,QAAjD,WACIyvB,GAAoBC,GAAe,uBADvC,IAC2Dj0D,EAASwK,WAGtE,cAAC,IAAD,CAAUkG,MAAO,CAAEyjD,YAAa,YAAhC,SACGvqC,EAAU,cAAC+kC,EAAD,CAAS/kC,QAASA,IAAchqB,EAAU,cAAC47C,EAAA,EAAD,IAAmB,UAMjE,SAAS4Y,EAAT,GAsBX,IArBFzkC,EAqBC,EArBDA,OACA5vB,EAoBC,EApBDA,WACAmtC,EAmBC,EAnBDA,iBACAR,EAkBC,EAlBDA,iBACAG,EAiBC,EAjBDA,cACAwnB,EAgBC,EAhBDA,aACAC,EAeC,EAfDA,QACArB,EAcC,EAdDA,eACAC,EAaC,EAbDA,eACAqB,EAYC,EAZDA,WAaMC,EAAqCx2D,mBAAQ,WACjD,IAAIy2D,EAAsCH,EAAO,CAAII,IAAS7zD,OAAb,mBAAuBd,IAAcA,EAItF,YAHmBrC,IAAf62D,IACFE,EAAS,sBAAOA,EAAUjkD,MAAM,EAAG+jD,IAA1B,MAAuC72D,GAAvC,YAAqD+2D,EAAUjkD,MAAM+jD,EAAYE,EAAU31D,WAE/F21D,IACN,CAACF,EAAYx0D,EAAYu0D,IAEpBl7C,EAAY9C,cAAZ8C,QAEAlb,EAAMgW,cAANhW,EAEFy2D,EAEFC,cAEEvnB,EAAM34B,uBACV,YAA6B,IAA1BzR,EAAyB,EAAzBA,KAAMgI,EAAmB,EAAnBA,MAAOyF,EAAY,EAAZA,MACR1Q,EAAqBiD,EAAKgI,GAC1B2oD,EAAat1C,QAAQ4uB,GAAoBhQ,YAAegQ,EAAkBltC,IAC1E6zD,EAAgBv1C,QAAQuuB,GAAiB3P,YAAe2P,EAAe7sC,IAGvEf,EAAQwjB,YAAgBziB,EAAUoZ,GAElCy7C,EAAaF,GAAkB11D,GAASkC,OAAOkI,KAAKsrD,GAAgBn0C,SAASvhB,EAAMpB,SAEzF,OAAIoN,IAAUspD,GAAetxD,EAkBzB4xD,GAAc51D,EAEd,cAAC+zD,EAAD,CAAWtiD,MAAOA,EAAOzR,MAAOA,EAAOg0D,eAAgBA,EAAgBC,eAAgBA,EAAgBP,KAAG,IAI5G,cAACgB,EAAD,CACEjjD,MAAOA,EACP1Q,SAAUA,EACV4zD,WAAYA,EACZnB,SAlCiB,kBAAM/lB,EAAiB1sC,IAmCxC6zD,cAAeA,IA3Bf,cAACJ,EAAD,CAAiB/iD,MAAOA,EAAxB,SACE,cAAC,IAAD,CAAelL,QAAQ,WAAWE,aAAa,MAA/C,SACE,eAAC,IAAD,WACE,cAAC,KAAD,CAAMqM,OAAK,EAAX,SAAa7T,EAAE,gDACf,cAAColC,EAAA,EAAD,CACEC,KAAMrlC,EACJ,sGAEF+U,GAAG,iBAuBjB,CACEmG,EACAu7C,EACAjoB,EACAG,EACAK,EACAgmB,EACAD,EACAsB,EACAr2D,IAIE42D,EAAUpgD,uBAAY,SAACzJ,EAAehI,GAAhB,OAA8BswD,EAAYtwD,EAAKgI,MAAS,IAEpF,OACE,cAAC,IAAD,CACE0kB,OAAQA,EACRD,IAAK2kC,EACL9uD,MAAM,OACNivD,SAAUA,EACVO,UAAWP,EAAS11D,OACpBk2D,SAAU,GACVF,QAASA,EAPX,SASGznB,I,aC7JQ4nB,MAXf,SAA4BC,GAC1B,IAAM32D,EAAWwC,cACXo0D,EAAan3D,mBAAQ,kBAxB7B,SAA4BO,GAG1B,OAAO,SAAoBokB,EAAeC,GAKxC,IArBuBwyC,EAAwBC,EAwBzCC,GAxBiBF,EAqBN72D,EAASokB,EAAO9kB,SArBcw3D,EAsB9B92D,EAASqkB,EAAO/kB,SArB/Bu3D,GAAYC,EACPD,EAASxY,YAAYyY,IAAa,EAAID,EAAS/3B,QAAQg4B,GAAY,EAAI,EAE5ED,GAAYA,EAASxY,YAAY,MAC3B,EAENyY,GAAYA,EAASzY,YAAY,KAC5B,EAEF,GAeL,OAAoB,IAAhB0Y,EAA0BA,EAE1B3yC,EAAO7e,QAAU8e,EAAO9e,OAEnB6e,EAAO7e,OAAOkV,cAAgB4J,EAAO9e,OAAOkV,eAAiB,EAAI,EAEnE2J,EAAO7e,QAAc8e,EAAO9e,QAAX,EAAyB,GAMlByxD,CAAkB,OAACh3D,QAAD,IAACA,IAAY,MAAK,CAACA,IACtE,OAAOP,mBAAQ,WACb,OAAIk3D,EACK,SAACvyC,EAAeC,GAAhB,OAAgE,EAA9BuyC,EAAWxyC,EAAQC,IAEvDuyC,IACN,CAACD,EAAUC,KCpBVK,EAAY,IAAIC,MAAM,YAkJbC,IC9KHC,GD8KGD,GAhJf,YAOyB,IANvBxoB,EAMsB,EANtBA,iBACAR,EAKsB,EALtBA,iBACAS,EAIsB,EAJtBA,sBACAL,EAGsB,EAHtBA,gBACAmmB,EAEsB,EAFtBA,eACAC,EACsB,EADtBA,eAEQh1D,EAAMgW,cAANhW,EACAkb,EAAY9C,cAAZ8C,QAGFw8C,EAAYv5D,mBAElB,EAAsCwT,mBAAiB,IAAvD,mBAAO2+B,EAAP,KAAoBqnB,EAApB,KACMC,EAAiBh/B,YAAY0X,EAAa,KAEhD,EAA4B3+B,oBAAkB,GAAvCkmD,EAAP,oBAEM90D,EAAYC,cAGZ80D,EAAcC,YAASH,GACvBI,EAAqB9C,YAAoB4C,GAE/C,EAAoBzwB,cAAb4wB,EAAP,oBAEM7B,EAAmBt2D,mBAAQ,WAC/B,IAAM0c,EAAIo7C,EAAe98C,cAAc41B,OACvC,MAAa,KAANl0B,GAAkB,MAANA,GAAmB,OAANA,IAC/B,CAACo7C,IAEEM,EAAkBnB,EAAmBc,GAErCM,EAA0Br4D,mBAAQ,WACtC,OAAO6vC,YAAa1sC,OAAOC,OAAOH,GAAY60D,KAC7C,CAAC70D,EAAW60D,IAETQ,EAAwBt4D,mBAAQ,WACpC,OAAOq4D,EAAe91D,KAAK61D,KAC1B,CAACC,EAAgBD,IAEdG,EAAuBhoB,YAAuB+nB,EAAcR,GAE5Dha,EAAuBpnC,uBAC3B,SAAC1U,GACC0sC,EAAiB1sC,GACbm2D,GACFX,EAAUgB,SAGd,CAACL,EAAWzpB,IAIRjZ,EAAWp3B,mBAEjBK,qBAAU,WACR+2B,EAAS92B,QAAQ+2B,UAChB,IAEH,IAAM+iC,EAAc/hD,uBAAY,SAACuf,GAAW,IAAD,EACnCiX,EAAQjX,EAAM0P,OAAOxkC,MACrBu3D,EAAmBv4D,YAAU+sC,GACnC2qB,EAAea,GAAoBxrB,GACnC,UAAA0qB,EAAUj5D,eAAV,SAAmBg6D,SAAS,KAC3B,IAEGC,EAAcliD,uBAClB,SAACgvB,GACC,GAAc,UAAVA,EAAEjc,IAEJ,GAAU,OADAquC,EAAe98C,cAAc41B,OAErCkN,EAAqBj7C,UAChB,GAAI01D,EAAqBz3D,OAAS,EAAG,CAAC,IAAD,GAExC,UAAAy3D,EAAqB,GAAGzyD,cAAxB,eAAgCkV,iBAAkB88C,EAAelnB,OAAO51B,eACxC,IAAhCu9C,EAAqBz3D,QAErBg9C,EAAqBya,EAAqB,OAKlD,CAACA,EAAsBza,EAAsBga,IAIzCnB,EAAiBkC,YAAuBf,GACxCgB,EAAkCvoB,YAAuBomB,EAAgBmB,GAE/E,OACE,mCACE,gCACE,eAAC,IAAD,CAAYz7B,IAAI,OAAhB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CACE9vB,GAAG,qBACHwpB,YAAa71B,EAAE,gCACfyV,MAAM,KACNg4B,aAAa,MACbxsC,MAAOqvC,EACP9e,IAAK+D,EACLO,SAAUyiC,EACVM,UAAWH,MAGd9pB,GACC,cAAC0lB,EAAD,CAAap5C,QAASA,EAASq5C,SAAU3W,EAAsB5O,iBAAkBA,OAGpF8oB,IAAgBE,EACf,cAACvY,EAAA,EAAD,CAAQjtC,MAAO,CAAElL,QAAS,SAAUmqB,OAAQ,QAA5C,SACE,cAACqjC,EAAD,CAAW/zD,MAAO+2D,EAAa/C,eAAgBA,EAAgBC,eAAgBA,OAE3D,OAApBqD,QAAoB,IAApBA,OAAA,EAAAA,EAAsBz3D,QAAS,IAA2B,OAAtBg4D,QAAsB,IAAtBA,OAAA,EAAAA,EAAwBh4D,QAAS,EACvE,cAAC,IAAD,CAAK6uC,OAAO,aAAZ,SACE,cAACymB,EAAD,CACEzkC,OAAQ,IACR2kC,QAASA,EACTv0D,WACE+2D,EAAyBP,EAAqB71C,OAAOo2C,GAA0BP,EAEjFhC,WAAYI,GAAkB4B,EAAuBA,EAAqBz3D,YAASpB,EACnFgvC,iBAAkBoP,EAClBjP,cAAeM,EACfD,iBAAkBA,EAClBmnB,aAAcuB,EACd3C,eAAgBA,EAChBC,eAAgBA,MAIpB,cAACvV,EAAA,EAAD,CAAQjtC,MAAO,CAAElL,QAAS,OAAQmqB,OAAQ,QAA1C,SACE,cAAC,KAAD,CAAM3c,MAAM,aAAauc,UAAU,SAAS/f,GAAG,OAA/C,SACGtR,EAAE,+B,yGCrKLy3D,O,mBAAAA,I,mBAAAA,I,6BAAAA,I,4BAAAA,Q,KAOGA,I,mBCoBf,IAAM77B,GAAUz0B,YAAOs4C,IAAPt4C,CAAH,+DAKP2xD,GAAa3xD,YAAOgoC,IAAPhoC,CAAH,4LACM,cAAG4xD,OAAH,EAAW/xD,MAAX,MAA8B,iBAElC,gBAAG+xD,EAAH,EAAGA,OAAQ/xD,EAAX,EAAWA,MAAX,OAAwB+xD,EAAS/xD,EAAMS,OAAOwL,QAAUjM,EAAMS,OAAOuxD,YAOvF,SAASC,GAAiB1vB,GACxB,MAAM,YAAN,OAAmBA,EAAQzf,QAAQ,MAAO,MAG5C,IAAMovC,GAAUp4D,gBAAK,YAAoD,IAvB/Cq4D,EAuBc5vB,EAAgC,EAAhCA,QAChC6vB,EAAan6D,cAAkD,SAACC,GAAD,OAAWA,EAAMm6D,MAAMC,SACtFl7D,EAAWkY,eACjB,EAAkD8iD,EAAW7vB,GAA5C4U,EAAjB,EAAQ1/C,QAA8B8sC,EAAtC,EAAuBguB,cAEjBxzC,EAAWyzC,YAAgBjwB,GAEzBvpC,EAAMgW,cAANhW,EAEFy5D,EAAyBjjD,uBAAY,WACpC+0B,GACLntC,EAASs7D,aAAiBnwB,MACzB,CAACnrC,EAAUmrC,EAASgC,IAEjBouB,EAAmBnjD,uBAAY,WAE/BxF,OAAO4oD,QAAQ,sDACjBx7D,EAASy7D,aAAWtwB,MAErB,CAACnrC,EAAUmrC,IAERuwB,EAAmBtjD,uBAAY,WACnCpY,EAAS27D,aAAWxwB,MACnB,CAACnrC,EAAUmrC,IAERywB,EAAoBxjD,uBAAY,WACpCpY,EAAS67D,aAAY1wB,MACpB,CAACnrC,EAAUmrC,IAEd,EAA+CpZ,aAC7C,gCACE,cAAC,KAAD,UAAOguB,IAtDagb,EAsDYhb,EAAKgb,QArDnC,IAAN,OAAWA,EAAQe,MAAnB,YAA4Bf,EAAQgB,MAApC,YAA6ChB,EAAQiB,UAsDjD,cAAC,IAAD,CAAc39B,UAAQ,EAACnnB,KAAI,gDAA2Ci0B,GAAtE,SACGvpC,EAAE,SAEL,cAAC,IAAD,CAAQoQ,QAAQ,SAASqF,MAAM,KAAK9E,QAASgpD,EAAkBziC,SAA6C,IAAnCj0B,OAAOkI,KAAKiuD,GAAYx4D,OAAjG,SACGZ,EAAE,YAEJurC,GACC,cAAC,IAAD,CAAQn7B,QAAQ,OAAOO,QAAS8oD,EAAwBjnD,MAAO,CAAEjB,SAAU,QAA3E,SACGvR,EAAE,oBAIT,CAAEqwB,UAAW,YAAagqC,QAAS,UAf7B7pC,EAAR,EAAQA,UAAWE,EAAnB,EAAmBA,QAASE,EAA5B,EAA4BA,eAkB5B,OAAKutB,EAGH,eAAC2a,GAAD,CAAYC,OAAQhzC,EAAwB1Z,GAAI4sD,GAAiB1vB,GAAjE,UACG3Y,GAAkBF,EAClBytB,EAAK1zB,QACJ,cAAC,IAAD,CAAUL,KAAK,OAAO5X,MAAO,CAAEk9B,YAAa,QAAUjlB,QAAS0zB,EAAK1zB,QAASE,IAAG,UAAKwzB,EAAK7xC,KAAV,gBAEhF,qBAAKkG,MAAO,CAAEnL,MAAO,OAAQoqB,OAAQ,OAAQie,YAAa,UAE5D,eAAC+P,EAAA,EAAD,CAAQjtC,MAAO,CAAEkmB,KAAM,KAAvB,UACE,cAAC,IAAD,UACE,cAAC,KAAD,CAAM5kB,MAAI,EAAV,SAAYqqC,EAAK7xC,SAEnB,eAAC,IAAD,CAAUqlB,GAAG,MAAb,UACE,eAAC,KAAD,CAAMpgB,SAAS,OAAOgE,GAAG,MAAMmgB,cAAc,YAA7C,UACGyoB,EAAKv+C,OAAOgB,OADf,IACwBZ,EAAE,aAE1B,sBAAMwxB,IAAKhB,EAAX,SACE,cAAC,IAAD,CAAS1b,MAAM,OAAOzN,MAAM,iBAIlC,cAACmgC,GAAA,EAAD,CAAe7O,QAAS5S,EAAxB,SACE,cAAC,KAAD,CACE4S,QAAS5S,EACT+P,SAAU,WACJ/P,EACFi0C,IAEAF,WA3ByBvwB,GAHnB,QAuCd+wB,GAAgBnzD,IAAOV,IAAV,sFAqKJ8zD,I,SAAAA,GA/Jf,YAQI,IAPFC,EAOC,EAPDA,aACAC,EAMC,EANDA,cACAC,EAKC,EALDA,WAMA,EAAwC/oD,mBAAiB,IAAzD,mBAAOgpD,EAAP,KAAqBC,EAArB,KAEQ56D,EAAMgW,cAANhW,EAEFq5D,EAAQwB,cAGRC,EAAiBC,cACvB,EAAoCppD,qBAApC,mBAAOqpD,EAAP,KAAmBC,EAAnB,KACAz8D,qBAAU,YACHw8D,GAAcF,GACjBG,EAAcH,KAEf,CAACE,EAAYF,IAEhB,IAAMvC,EAAc/hD,uBAAY,SAACgvB,GAC/Bo1B,EAAgBp1B,EAAEC,OAAOxkC,SACxB,IAEGi6D,EAAYlwB,eAEZmwB,EAAoBr7D,mBAAQ,WAChC,OAAOk7B,aAAU2/B,GAAc/5D,OAAS,GAAKwf,QAAQ0oB,aAAgB6xB,MACpE,CAACA,IAEES,EAAct7D,mBAAQ,WAE1B,OADiBmD,OAAOkI,KAAKkuD,GAE1Bt5D,QAAO,SAACwpC,GAEP,OAAOnpB,QAAQi5C,EAAM9vB,GAAS9qC,WAAa48D,KAAsB/4C,SAASinB,MAE3ElnC,MAAK,SAACi5D,EAAIC,GACT,IAAiBC,EAAOnC,EAAMiC,GAAtB78D,QACSg9D,EAAOpC,EAAMkC,GAAtB98D,QAGR,OAAc,OAAVu8D,QAAU,IAAVA,OAAA,EAAAA,EAAY14C,SAASg5C,OAAO,OAACN,QAAD,IAACA,OAAD,EAACA,EAAY14C,SAASi5C,KAC5C,IAEN,OAACP,QAAD,IAACA,OAAD,EAACA,EAAY14C,SAASg5C,MAAtB,OAA6BN,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAY14C,SAASi5C,IAC7C,EAGLC,GAAMC,EACDD,EAAGlvD,KAAKwO,cAAgB2gD,EAAGnvD,KAAKwO,eAClC,EACD0gD,EAAGlvD,KAAKwO,gBAAkB2gD,EAAGnvD,KAAKwO,cAClC,EACA,EAEF0gD,GAAY,EACZC,EAAW,EACR,OAEV,CAACpC,EAAO2B,IAGX,EAAgCrpD,qBAAhC,mBAAO+pD,EAAP,KAAiBC,EAAjB,KACA,EAAgChqD,qBAAhC,mBAAOiqD,EAAP,KAAiBC,EAAjB,KAEAr9D,qBAAU,WAAM,8CACd,uBAAAG,EAAA,sDACEu8D,EAAUP,GAAc,GACrBzmD,MAAK,SAACiqC,GAAD,OAAUwd,EAAYxd,MAC3B1S,OAAM,kBAAMowB,EAAY,2BAH7B,4CADc,sBAOVV,EAPW,WAAD,wBAQZW,IAEAH,OAAYn8D,GACS,KAAjBm7D,GACFkB,EAAY,8BAKK,KAAjBlB,GACFkB,OAAYr8D,KAEb,CAAC07D,EAAWP,EAAcQ,IAG7B,IAAMY,EAAa94D,OAAOkI,KAAKkuD,GAAO/2C,SAASq4C,GAGzCqB,EAAexlD,uBAAY,WAC1BklD,IACLjB,EAAciB,GACdlB,EAAa/C,GAAkBwE,YAC/BvB,EAAWC,MACV,CAACA,EAAcF,EAAeC,EAAYF,EAAckB,IAE3D,OACE,eAAC9/B,GAAD,WACE,eAAC,IAAD,CAAYO,IAAI,OAAhB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CACE9vB,GAAG,iBACHoJ,MAAM,KACNogB,YAAa71B,EAAE,mCACfiB,MAAO05D,EACP7kC,SAAUyiC,MAGbqD,EACC,cAAC,KAAD,CAAM9mD,MAAM,UAAUtC,MAAO,CAAE4C,aAAc,WAAYD,SAAU,UAAnE,SACGymD,IAED,QAELF,GACC,cAAC,IAAD,CAAYlpD,MAAO,CAAE0pD,WAAY,GAAjC,SACE,cAACh1D,EAAA,EAAD,CAAMI,QAAQ,YAAd,SACE,eAAC,IAAD,WACE,eAAC,IAAD,WACGo0D,EAASjxC,SAAW,cAAC,IAAD,CAAUA,QAASixC,EAASjxC,QAASL,KAAK,SAC/D,eAAC,IAAD,CAAY+R,IAAI,MAAM3pB,MAAO,CAAE2pD,WAAY,QAA3C,UACE,cAAC,KAAD,CAAMroD,MAAI,EAAV,SAAY4nD,EAASpvD,OACrB,eAAC,KAAD,CAAMwI,MAAM,aAAajB,OAAK,EAAC6hB,cAAc,YAA7C,UACGgmC,EAAS97D,OAAOgB,OADnB,IAC4BZ,EAAE,mBAIjC+7D,EACC,eAAC,IAAD,WACE,cAAC,IAAD,CAAe10D,MAAM,OAAOkO,GAAG,SAC/B,cAAC,KAAD,UAAOvV,EAAE,eAGX,cAAC,IAAD,CAAQqH,MAAM,cAAcsJ,QAASqrD,EAArC,SACGh8D,EAAE,mBAOf,cAACs6D,GAAD,UACE,cAAC,IAAD,CAAYn+B,IAAI,KAAhB,SACGi/B,EAAYj7D,KAAI,SAACopC,GAAD,OACf,cAAC,GAAD,CAAuBA,QAASA,GAAlBA,c,mBChRpB3N,GAAUz0B,IAAOV,IAAV,4HAOP4oB,GAASloB,IAAOV,IAAV,gKASG,SAAS21D,GAAT,GAMX,IALF5B,EAKC,EALDA,aACAxF,EAIC,EAJDA,eAKQ95C,EAAY9C,cAAZ8C,QAEAlb,EAAMgW,cAANhW,EAER,EAAsC2R,mBAAiB,IAAvD,mBAAO2+B,EAAP,KAAoBqnB,EAApB,KAGMpiC,EAAWp3B,mBACXo6D,EAAc/hD,uBAAY,SAACuf,GAC/B,IAAMiX,EAAQjX,EAAM0P,OAAOxkC,MACrBu3D,EAAmBv4D,YAAU+sC,GACnC2qB,EAAea,GAAoBxrB,KAClC,IAGG8qB,EAAcC,YAASznB,GAGvB+rB,EAA2BtmB,eAC3BumB,EAAcC,cAEdC,EAAkBhmD,uBAAY,WAC9B0E,GAAWmhD,GACbA,EAAgBl8D,KAAI,SAACY,GACnB,OAAOu7D,EAAYphD,EAASna,EAAMpB,cAGrC,CAAC28D,EAAaD,EAAiBnhD,IAE5BswB,EAAY1rC,mBAAQ,WACxB,OACEob,GACAmhD,EAAgBl8D,KAAI,SAACY,GAAD,OAClB,eAAC,IAAD,CAAgCsG,MAAM,OAAtC,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAcvF,SAAUf,EAAOqpB,KAAK,SACpC,cAAC,IAAD,CAAMqS,UAAQ,EAACnnB,KAAMonB,YAAe37B,EAAMpB,QAAS,UAAWub,GAAUpG,MAAM,aAAaC,GAAG,OAA9F,SACGhU,EAAM6E,YAGX,eAAC,IAAD,WACE,cAAC,IAAD,CAAYwK,QAAQ,OAAOO,QAAS,kBAAM2rD,EAAYphD,EAASna,EAAMpB,UAArE,SACE,cAAC,IAAD,MAEF,cAAC,IAAD,CAAc2V,KAAMonB,YAAe37B,EAAMpB,QAAS,UAAWub,UAXhDna,EAAMpB,cAgB1B,CAAC08D,EAAiBnhD,EAASohD,IAExBG,EAAiC,KAAhBnsB,GAAsBrwC,YAAUqwC,GAEvD,OACE,cAAC,GAAD,UACE,eAACmP,EAAA,EAAD,CAAQjtC,MAAO,CAAEnL,MAAO,OAAQqxB,KAAM,OAAtC,UACE,eAAC,IAAD,CAAYyD,IAAI,OAAhB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CACE9vB,GAAG,qBACHoJ,MAAM,KACNogB,YAAY,SACZ50B,MAAOqvC,EACP7C,aAAa,MACbjc,IAAK+D,EACLO,SAAUyiC,EACV7yB,WAAY+2B,OAGdA,GAAkB,cAAC,KAAD,CAAM3nD,MAAM,UAAZ,SAAuB9U,EAAE,+BAC5C83D,GACC,cAAChD,EAAD,CACE/zD,MAAO+2D,EACP/C,eAAgB,kBAAMyF,EAAa/C,GAAkBiF,cACrD1H,eAAgBA,EAChBxiD,MAAO,CAAEif,OAAQ,oBAItB+Z,EACD,eAACnc,GAAD,WACE,eAAC,KAAD,CAAMvb,MAAI,EAACgB,MAAM,aAAjB,iBACGunD,QADH,IACGA,OADH,EACGA,EAAiBz7D,OADpB,IACwD,IAA3By7D,EAAgBz7D,OAAeZ,EAAE,gBAAkBA,EAAE,oBAEjFq8D,EAAgBz7D,OAAS,GACxB,cAACsP,GAAA,EAAD,CAAQE,QAAQ,WAAWO,QAAS6rD,EAAiBhqD,MAAO,CAAEif,OAAQ,IAAtE,SACGzxB,EAAE,uBCpHjB,IAAM28D,GAAmBx1D,YAAO8vB,IAAP9vB,CAAH,8QAaJ,qBAAGH,MAAkBS,OAAOwL,WAI/B,SAAS2pD,GAAT,GAUX,IATFpC,EASC,EATDA,aACAC,EAQC,EARDA,cACAzF,EAOC,EAPDA,eACA0F,EAMC,EANDA,WAOA,EAAkC/oD,oBAAS,GAA3C,mBAAOkrD,EAAP,KAAkBC,EAAlB,KAEQ98D,EAAMgW,cAANhW,EAER,OACE,eAAC,KAAD,WACE,eAAC28D,GAAD,CACEnkC,YAAaqkC,EAAY,EAAI,EAC7BpkC,YAAa,kBAAMqkC,GAAa,SAACrwC,GAAD,OAAWA,MAC3ChX,MAAM,KACNrF,QAAQ,SACRkB,GAAG,OALL,UAOE,cAAC,IAAD,CAAgBjK,MAAM,MAAM,gBAAew1D,EAA3C,SACG78D,EAAE,WAEL,cAAC,IAAD,CAAgBqH,MAAM,MAAM,eAAcw1D,EAA1C,SACG78D,EAAE,eAGN68D,EACC,cAAC,GAAD,CAAarC,aAAcA,EAAcC,cAAeA,EAAeC,WAAYA,IAEnF,cAAC0B,GAAD,CAAc5B,aAAcA,EAAcxF,eAAgBA,O,oBCvC5Dp5B,GAAUz0B,IAAOV,IAAV,qEAKPs2D,GAAU51D,IAAOV,IAAV,8GAGS,qBAAGO,MAAkBS,OAAO49B,QA4GnC23B,I,SAAAA,GAxGf,YAA+D,IAAD,EAAxCC,EAAwC,EAAxCA,QAAS9e,EAA+B,EAA/BA,KAAM+e,EAAyB,EAAzBA,SAC3Bl2D,EAAUJ,eAAVI,MACF5I,EAAWkY,eAETtW,EAAMgW,cAANhW,EAGR,EAAkC2R,oBAAS,GAA3C,mBAAOksC,EAAP,KAAkBC,EAAlB,KAEMub,EAAQwB,cACRK,EAAYlwB,eAGZmyB,EAAS/8C,QAAO,UAACi5C,EAAM4D,UAAP,aAAC,EAAgBG,kBACvC,EAAgCzrD,mBAAwB,MAAxD,mBAAOiqD,EAAP,KAAiBC,EAAjB,KAEMwB,EAAgB7mD,uBAAY,WAC5B2mD,IACJtB,EAAY,MACZX,EAAU+B,GACP/oD,MAAK,WACJ9V,EAAS27D,aAAWkD,IACpBC,OAEDzxB,OAAM,SAACx+B,GACN4uD,EAAY5uD,EAAM+sB,SAClB57B,EAASy7D,aAAWoD,UAEvB,CAACE,EAAQ/+D,EAAU88D,EAAW+B,EAASC,IAE1C,OACE,cAAC,GAAD,UACE,cAAC,IAAD,CAAY/gC,IAAI,KAAhB,SACE,eAAC,IAAD,CAAYA,IAAI,KAAhB,UACE,cAACj1B,EAAA,EAAD,CAAMI,QAAQ,YAAd,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACG62C,EAAK1zB,SAAW,cAAC,IAAD,CAAUA,QAAS0zB,EAAK1zB,QAASL,KAAK,SACvD,eAAC,IAAD,CAAY+R,IAAI,KAAK3pB,MAAO,CAAE2pD,WAAY,QAA1C,UACE,eAAC,IAAD,WACE,cAAC,KAAD,CAAMroD,MAAI,EAACyB,GAAG,MAAd,SACG4oC,EAAK7xC,OAER,cAACywD,GAAD,IACA,eAAC,KAAD,CAAMlpD,OAAK,EAACiB,MAAM,aAAaC,GAAG,MAAlC,UACGopC,EAAKv+C,OAAOgB,OADf,gBAIF,cAAC,IAAD,CACEiT,OAAK,EACL4oB,UAAQ,EACRu5B,UAAQ,EACR3vB,SAAS,MACT/wB,KAAI,gDAA2C2nD,GALjD,SAOGA,cAOX,cAAC,KAAD,CAAS7sD,QAAQ,SAAjB,SACE,eAAC,IAAD,CAAM4gB,cAAc,SAApB,UACE,cAAC,KAAD,CAAMzf,SAAS,OAAO8f,UAAU,SAASvc,MAAO9N,EAAMS,OAAOwlC,QAAS37B,GAAG,OAAzE,SACGtR,EAAE,6BAEL,cAAC,KAAD,CAAM8U,MAAO9N,EAAMS,OAAOwlC,QAAS37B,GAAG,MAAtC,SACGtR,EACC,6NAGJ,cAAC,KAAD,CAAM8T,MAAI,EAACgB,MAAO9N,EAAMS,OAAOwlC,QAAS37B,GAAG,OAA3C,SACG,WAEH,eAAC,IAAD,CAAMigB,WAAW,SAAjB,UACE,cAAC,IAAD,CACEjlB,KAAK,YACLsmB,KAAK,WACL+F,QAASklB,EACT/nB,SAAU,kBAAMgoB,GAAcD,IAC9BpoC,MAAM,OAER,cAAC,KAAD,CAAMV,GAAG,OAAOvC,MAAO,CAAE8zB,WAAY,QAArC,SACGtmC,EAAE,0BAMX,cAAC,IAAD,CAAQk3B,UAAW2mB,EAAWltC,QAAS0sD,EAAvC,SACGr9D,EAAE,YAEJ47D,EACC,cAAC,KAAD,CAAM9mD,MAAM,UAAUtC,MAAO,CAAE4C,aAAc,WAAYD,SAAU,UAAnE,SACGymD,IAED,aC5GRvsC,GAASloB,IAAOV,IAAV,4NAEY,qBAAGO,MAAkBS,OAAOG,iBAOvC,qBAAGZ,MAAkBS,OAAOwL,WAInCqqD,GAAuBn2D,YAAOo2D,KAAPp2D,CAAH,6HAQpBq2D,GAAkBr2D,YAAOs2D,KAAPt2D,CAAH,gDAWN,SAAS4nC,GAAT,GAMe,IAAD,MAL3Bt+B,iBAK2B,MALf,kBAAM,MAKS,EAJ3B+9B,EAI2B,EAJ3BA,iBACAQ,EAG2B,EAH3BA,iBACAC,EAE2B,EAF3BA,sBAE2B,IAD3BL,uBAC2B,SAC3B,EAAkCj9B,mBAA4B8lD,GAAkBt8C,QAAhF,mBAAOuiD,EAAP,KAAkBlD,EAAlB,KAEM5c,EAAuBpnC,uBAC3B,SAAC1U,GACC2O,IACA+9B,EAAiB1sC,KAEnB,CAAC2O,EAAW+9B,IAIRmvB,EAAWC,YAAYF,GAG7B,EAAsC/rD,qBAAtC,mBAAO+qD,EAAP,KAAoB1H,EAApB,KAGA,EAAoCrjD,qBAApC,mBAAOsqD,EAAP,KAAmBxB,EAAnB,KACA,EAA8B9oD,qBAA9B,mBAAOsrD,EAAP,KAAgBvC,EAAhB,KAEQ16D,EAAMgW,cAANhW,EAEFoS,GAAM,mBACTqlD,GAAkBt8C,OAAS,CAAE1L,MAAOzP,EAAE,kBAAmBo3B,YAAQ53B,IADxD,cAETi4D,GAAkBoG,OAAS,CAAEpuD,MAAOzP,EAAE,UAAWo3B,OAAQ,kBAAMojC,EAAa/C,GAAkBt8C,WAFrF,cAGTs8C,GAAkBiF,YAAc,CAC/BjtD,MAAOzP,EAAE,iBACTo3B,OAAQ,kBACNojC,EAAamD,GAAYA,IAAalG,GAAkBiF,YAAciB,EAAWlG,GAAkBt8C,WAN7F,cAQTs8C,GAAkBwE,WAAa,CAAExsD,MAAOzP,EAAE,eAAgBo3B,OAAQ,kBAAMojC,EAAa/C,GAAkBt8C,WAR9F,GAWZ,OACE,eAACmiD,GAAD,CAAsB/qD,SAAS,QAA/B,UACE,eAAC,KAAD,WACE,eAAC,KAAD,WACGH,EAAOsrD,GAAWtmC,QAAU,cAAC,KAAD,CAAiBA,OAAQhlB,EAAOsrD,GAAWtmC,SACxE,cAAC,IAAD,UAAUhlB,EAAOsrD,GAAWjuD,WAE9B,cAAC,KAAD,CAAkBgB,UAAWA,OAE/B,cAAC+sD,GAAD,UACGE,IAAcjG,GAAkBt8C,OAC/B,cAAC,GAAD,CACEqzB,iBAAkBoP,EAClB5O,iBAAkBA,EAClBC,sBAAuBA,EACvBL,gBAAiBA,EACjBmmB,eAAgB,kBAAMyF,EAAa/C,GAAkBiF,cACrD1H,eAAgBA,IAEhB0I,IAAcjG,GAAkBiF,aAAeA,EACjD,cAAC/e,GAAA,EAAD,CAAa/9C,OAAQ,CAAC88D,GAAc9e,qBAAsBA,IACxD8f,IAAcjG,GAAkBwE,YAAcA,GAAcgB,EAC9D,cAAC,GAAD,CAAY9e,KAAM8d,EAAYgB,QAASA,EAASC,SAAU,kBAAM1C,EAAa/C,GAAkBoG,WAC7FH,IAAcjG,GAAkBoG,OAClC,cAACjB,GAAD,CACEpC,aAAcA,EACdxF,eAAgBA,EAChByF,cAAeA,EACfC,WAAYA,IAGd,KAGHgD,IAAcjG,GAAkBt8C,QAC/B,cAAC,GAAD,UACE,cAAC,IAAD,CACE1F,MAAM,KACNrF,QAAQ,OACRO,QAAS,kBAAM6pD,EAAa/C,GAAkBoG,SAC9C3nD,UAAU,2BAJZ,SAMGlW,EAAE,0B,6HC9HF89D,G,OAAyB,WACpC,OAAO7+D,aAAY,SAACC,GAAD,OAAkBA,EAAMo2C,QAAQjoC,sB,2DCGxC0wD,EAAqB,CAChCC,UAAU,EACVC,SAAU,MAGCC,EAAc,uCAAG,WAC5Bx8D,EACAy8D,EACA/zD,GAH4B,eAAAzL,EAAA,yDAKtBy/D,EAAqB7R,eAEvBniD,EAPwB,0CASUg0D,EAAmBC,aAAa38D,EAAS0I,GATnD,2DAYf,CACL4zD,UAAU,EACVC,SAAU,CAAEK,QAASH,EAAa/zD,YAAWglC,OAAQ,OAdjC,gEAkBxBpiC,QAAQC,MAAR,4CAlBwB,kBAmBjB8wD,GAnBiB,iCAuBrBA,GAvBqB,0DAAH,0DA0BdQ,EAAa,uCAAG,WAC3B78D,EACAy8D,EACAK,GAH2B,2BAAA7/D,EAAA,yDAKrBy/D,EAAqB7R,iBAErBkS,EAAuBD,EAAWz+D,QAAO,SAAC6I,GAAD,OAAWA,EAAMssC,YACvCt0C,OAAS,GARP,sCASF69D,EATE,GASlBC,EATkB,cAUCxkB,YAA4Bx4C,EAASg9D,EAAat0D,WAVnD,UAUnB8D,EAVmB,OAWnBywD,EAAiBzwD,EAAYnO,QAAO,SAACsO,GAAD,OAAYA,EAAOhE,aACvDu0D,EAAsB1wD,EAAYyL,QAAQglD,EAAe,KAErC,GAdD,0CAehBZ,GAfgB,mCAkBWK,EAAmBS,aACnDn9D,EACAg9D,EAAat0D,UACbw0D,EAAoBt9D,YArBC,6DAwBd,CACL08D,UAAU,EACVC,SAAU,CACRK,QAASH,EACT/zD,UAAWs0D,EAAat0D,UACxBglC,OAAQwvB,EAAoBt9D,cA7BX,kEAkCvB0L,QAAQC,MAAR,2CAlCuB,kBAmChB8wD,GAnCgB,iCAsCpBA,GAtCoB,2DAAH,0DAyCbe,EAAc,uCAAG,WAC5Bp9D,EACAy8D,EACA/zD,GAH4B,eAAAzL,EAAA,6DAKtBy/D,EAAqB7R,cALC,kBAQE6R,EAAmBW,qBAAqBr9D,GAR1C,4DAWY08D,EAAmBY,aAAat9D,GAX5C,4DAab,CACLs8D,UAAU,EACVC,SAAU,CAAEK,QAASH,EAAa/zD,YAAWglC,OAAQ,OAfnC,iEAmBtBpiC,QAAQC,MAAR,4CAnBsB,kBAoBf8wD,GApBe,iEAwB1B/wD,QAAQC,MAAR,wCAA+CvL,GAA/C,MAxB0B,kBAyBnBq8D,GAzBmB,iCA2BrBA,GA3BqB,iEAAH,0DCYZkB,IAtFgB,WAK7B,IAAQv9D,EAAYoB,cAAZpB,QACFtD,EAAWC,cACXgP,EAAmBywD,IACnBoB,EAAsB7xD,GAAoBI,SAASJ,GACzD,EAAoCsE,mBAAsB,MAA1D,mBAAO6sD,EAAP,KAAmBW,EAAnB,KA0EA,OAxEA3gE,qBAAU,WACRJ,EAASmwB,iBACR,CAACnwB,IAEJI,qBAAU,WACR2gE,EAAc,QACb,CAACz9D,IAEJlD,qBAAU,WA8BJkD,GAAWw9D,IAAwBV,GA7BtB,uCAAG,oDAAA7/D,EAAA,6DACZygE,EAA4B5sB,cAC5BpmC,EAAQ,CACZ,CACEE,KAAM,oBACN3M,QAASy/D,EACT5yD,OAAQ,IAEV,CACEF,KAAM,oBACN3M,QAASy/D,EACT5yD,OAAQ,KAXM,SAeyBC,YAAY+/C,EAAwBpgD,GAf7D,OAoBlB,IApBkB,kDAeVizD,EAfU,2BAeIC,EAfJ,KAgBZC,EAAuBF,EAAW3qC,WAClC8qC,EAAuBF,EAAW5qC,WAElC+qC,EAAkB,GACfz+D,EAAIu+D,EAAsBv+D,GAAKw+D,EAAsBx+D,IAC5Dy+D,EAAgB7xD,KAAhB,UAAwB5M,IArBR,iBAuBcm0C,YAAoBzzC,OAASlC,OAAWA,EAAW,CACjFkgE,WAAYD,IAxBI,QAuBZE,EAvBY,OA0BlBR,EAAcQ,EAAkBvxC,QA1Bd,4CAAH,oDA8BfwxC,KAED,CAACV,EAAqBV,EAAY98D,IA+B9B,CAAEm+D,eA7BcrpD,sBAAW,sBAAC,oCAAA7X,EAAA,yDAC5B6/D,GAAoC,IAAtBA,EAAW59D,OADG,yCAExBm9D,GAFwB,gBAKTzlB,IAAKtzC,MAAK,SAACgiB,GAAD,MAA4B,WAAnBA,EAAIuxB,cAAvC4lB,EALyB,EAKzBA,YALyB,cAMbK,EANa,GAM1BsB,EAN0B,cAOP5B,EAAex8D,EAASy8D,EAAa2B,EAAU11D,WAPxC,cAO3B21D,EAP2B,yBAQ1BA,GAR0B,2CAShC,CAACr+D,EAAS88D,IAoBYwB,cAlBHxpD,sBAAW,sBAAC,gCAAA7X,EAAA,yDAC3B6/D,GAAoC,IAAtBA,EAAW59D,OADE,yCAEvBm9D,GAFuB,gBAKRzlB,IAAKtzC,MAAK,SAACgiB,GAAD,MAA4B,UAAnBA,EAAIuxB,cAAvC4lB,EALwB,EAKxBA,YALwB,SAMPI,EAAc78D,EAASy8D,EAAaK,GAN7B,cAM1ByB,EAN0B,yBAOzBA,GAPyB,2CAQ/B,CAACv+D,EAAS88D,IAU2B0B,eARjB1pD,sBAAW,sBAAC,kCAAA7X,EAAA,+DACT25C,IAAKtzC,MAAK,SAACgiB,GAAD,MAA4B,WAAnBA,EAAIuxB,cAAvC4lB,EADyB,EACzBA,YACF/zD,EAAYo0D,GAAcA,EAAW59D,OAAS,GAAK49D,EAAW,GAAGp0D,UAFtC,SAIP00D,EAAep9D,EAASy8D,EAAa/zD,GAJ9B,cAI3B21D,EAJ2B,yBAK1BA,GAL0B,2CAMhC,CAACr+D,EAAS88D,O,gZChFT7gD,EAAS,uCAAG,WAAgB0rC,EAAYj9C,GAA5B,yBAAAzN,EAAA,sEAERwhE,EAAQlU,cACRmU,EAAM,IAAItiE,IAAOuiE,MAAMn8C,UAAUmlC,GAEjCiX,EAAWl0D,EAAMjM,KAAI,SAAC+M,GAAD,MAAU,CAACA,EAAKvN,QAAQmb,cAAeslD,EAAIG,mBAAmBrzD,EAAKZ,KAAMY,EAAKV,YAL3F,SAMe2zD,EAAMK,UAAUF,GAN/B,uBAMNG,EANM,EAMNA,WAEF3zD,EAAM2zD,EAAWtgE,KAAI,SAAC+M,EAAMlM,GAAP,OAAao/D,EAAIM,qBAAqBt0D,EAAMpL,GAAGsL,KAAMY,MARlE,kBAUPJ,GAVO,wCAYR,IAAIrN,MAAJ,MAZQ,0DAAH,wDAsBFgN,EAAW,uCAAG,WACzB48C,EACAj9C,GAFyB,uCAAAzN,EAAA,6DAGzBi8B,EAHyB,+BAGG,CAAEjuB,gBAAgB,GAEtCA,EAAmBiuB,EAAnBjuB,eACFwzD,EAAQlU,cACRmU,EAAM,IAAItiE,IAAOuiE,MAAMn8C,UAAUmlC,GAEjCiX,EAAWl0D,EAAMjM,KAAI,SAAC+M,GAAD,MAAU,CAACA,EAAKvN,QAAQmb,cAAeslD,EAAIG,mBAAmBrzD,EAAKZ,KAAMY,EAAKV,YAThF,SAUA2zD,EAAMQ,aAAah0D,EAAgB2zD,GAVnC,cAUnBG,EAVmB,OAWnB3zD,EAAM2zD,EAAWtgE,KAAI,SAAC+M,EAAMlM,GAChC,kBAAuBkM,EAAvB,GAAOhM,EAAP,KAAe6D,EAAf,KACA,OAAO7D,EAASk/D,EAAIM,qBAAqBt0D,EAAMpL,GAAGsL,KAAMvH,GAAQ,QAbzC,kBAgBlB+H,GAhBkB,4CAAH,wDAmBT6Q,O,wr+ECxCR,IAAKijD,EA8BA1W,EA2DA2W,EAqDAz1D,EAoCA01D,EAlLZ,wI,SAAYF,K,sBAAAA,E,+BAAAA,M,cA8BA1W,K,sBAAAA,E,YAAAA,E,kBAAAA,E,aAAAA,M,cA2DA2W,K,kBAAAA,E,eAAAA,M,cAqDAz1D,K,kBAAAA,E,YAAAA,E,cAAAA,E,uBAAAA,M,cAoCA01D,O,iCAAAA,I,qBAAAA,I,eAAAA,I,uBAAAA,I,oBAAAA,M,st7GCvKL,SAASz5B,IACd,IAAMjpC,EAAWkY,cACX2hD,EAAYh5D,aAAqD,SAACC,GAAD,OAAWA,EAAMwP,KAAKupD,aAEvF8I,EAAqBvqD,uBAAY,WAEnCpY,EADE65D,EACO+I,cAEAC,iBAEV,CAAChJ,EAAW75D,IAEf,MAAO,CAAC65D,EAAW8I,GAGd,SAASvd,IACd,OAAOvkD,aAA0D,SAACC,GAAD,OAAWA,EAAMwP,KAAKwyD,kBAGlF,SAASj7B,IACd,IAAM7nC,EAAWkY,cACX6wB,EAAaqc,IAEb2d,EAAsB3qD,uBAAY,WACtCpY,EAASgjE,YAAqB,CAAEF,gBAAiB/5B,OAChD,CAACA,EAAY/oC,IAEhB,MAAO,CAAC+oC,EAAYg6B,GAGf,SAASt6D,IACd,IAAMzI,EAAWkY,cAOjB,MAAO,CANQrX,aAAkD,SAACC,GAAD,OAAWA,EAAMwP,KAAK5H,UAEnE0P,uBAAY,WAC9BpY,EAASijE,iBACR,CAACjjE,KAKC,SAAS8iC,IACd,IAAM9iC,EAAWkY,cAajB,MAAO,CAXerX,aACpB,SAACC,GAAD,OAAWA,EAAMwP,KAAK4yD,qBAGC9qD,uBACvB,SAAC+qD,GACCnjE,EAASojE,YAAwB,CAAEF,kBAAmBC,OAExD,CAACnjE,KAME,SAASwb,IACd,IAAMxb,EAAWkY,cAYjB,MAAO,CAXuBrX,aAAiE,SAACC,GAC9F,OAAOA,EAAMwP,KAAKw1B,yBAGa1tB,uBAC/B,SAACiqC,GACCriD,EAASqjE,YAA4B,CAAEv9B,sBAAuBuc,OAEhE,CAACriD,KAME,SAASsjE,EAAsB37C,GACpC,IAAM3nB,EAAWkY,cACXqrD,EAAqB1iE,aAA8D,SAACC,GACxF,OAAOA,EAAMwP,KAAKizD,sBAGdC,EAAwBprD,uBAC5B,SAACqrD,GACC,IAAMC,EAAiBD,EAAaE,IAAeC,KAAOD,IAAeE,MACzE7jE,EAAS8jE,YAAyB,CAAEP,mBAAoBG,OAE1D,CAAC1jE,IAGH,MAAO,CACLujE,IAAuBI,IAAeI,aAAep8C,EAAW47C,IAAuBI,IAAeC,KACtGJ,GAIG,SAASx9B,IACd,IAAMhmC,EAAWkY,cAYjB,MAAO,CAXcrX,aAAwD,SAACC,GAC5E,OAAOA,EAAMwP,KAAKmqC,gBAGIriC,uBACtB,SAAC2uC,GACC/mD,EAASgkE,YAAmB,CAAEvpB,aAAcsM,OAE9C,CAAC/mD,KAME,SAAS4/C,IACd,IAAM5/C,EAAWkY,cACjB,OAAOE,uBACL,SAACzV,GACC3C,EAASikE,YAAmB,CAAEC,gBAAiBC,YAAexhE,QAEhE,CAAC3C,IAIE,SAASm+D,IACd,IAAMn+D,EAAWkY,cACjB,OAAOE,uBACL,SAAC0E,EAAiBvb,GAChBvB,EAASokE,YAAsB,CAAEtnD,UAASvb,eAE5C,CAACvB,IAIE,SAASysB,IACd,IACMtc,EAAUtP,aAAoD,SAACC,GAAD,OAAWA,EAAMwP,KAAKC,YAC1F,MAFgBvL,SAEG0L,IAAQC,QAAQzN,WAAaiN,EAAUK,IAAeI,QAGpE,SAASy3B,IACd,IAAMroC,EAAWkY,cAUjB,MAAO,CATcuU,IAEDrU,uBAClB,SAAC7H,GACCvQ,EAASqkE,YAAe,CAAE9zD,gBAE5B,CAACvQ,KAML,SAASskE,EAAc1qD,GACrB,MAAO,CACLoN,OAAQm9C,YAAevqD,EAAKoN,QAC5BC,OAAQk9C,YAAevqD,EAAKqN,SAIzB,SAASs9C,IACd,IAAMvkE,EAAWkY,cAEjB,OAAOE,uBACL,SAACwB,GACC5Z,EAASwkE,YAAkB,CAAEC,eAAgBH,EAAc1qD,QAE7D,CAAC5Z,IASE,SAAS0kE,EAAT,GAAsE,IAAD,mBAAxCr+C,EAAwC,KAAhCC,EAAgC,KAC1E,OAAO,IAAI3iB,IAAM0iB,EAAOvJ,QAAS0J,IAAKnH,WAAWgH,EAAQC,GAAS,GAAI,UAAW,eAM5E,SAASq+C,IACd,IAAQ7nD,EAAY9C,cAAZ8C,QACFtb,EAASoD,cAGTggE,EAAcljE,mBAAQ,wBAAOob,GAAO,UAAGstC,IAAattC,UAAhB,QAAiC,KAAK,CAACA,IAG3E+nD,EAAmCnjE,mBACvC,kBACEob,EACI+kB,IAAQh9B,OAAOkI,KAAKvL,IAAS,SAAC+c,GAAkB,IAAD,EACvC5b,EAAQnB,EAAO+c,GAErB,OAEE,UAAC4rC,IAA6BrtC,UAA9B,QAA0C,IAEvC/a,KAAI,SAAC+/B,GACJ,OAAIA,EAAKvgC,UAAYoB,EAAMpB,QAClB,KAEF,CAACugC,EAAMn/B,MAEfhB,QAAO,SAACgxB,GAAD,OAAkC,OAANA,QAG1C,KACN,CAACnxB,EAAQsb,IAILgoD,EAAuBjkE,aAAiD,qBAAGyP,KAAQqJ,SAEnForD,EAA8BrjE,mBAAQ,WAC1C,IAAKob,IAAYgoD,EAAsB,MAAO,GAC9C,IAAME,EAAWF,EAAqBhoD,GACtC,OAAKkoD,EAEEngE,OAAOkI,KAAKi4D,GAAUjjE,KAAI,SAACkjE,GAChC,MAAO,CAACptB,YAAiBmtB,EAASC,GAAQj+C,QAAS6wB,YAAiBmtB,EAASC,GAAQh+C,YAHjE,KAKrB,CAAC69C,EAAsBhoD,IAEpBooD,EAAexjE,mBACnB,kBAAMqjE,EAAU3gD,OAAOygD,GAAgBzgD,OAAOwgD,KAC9C,CAACC,EAAgBD,EAAaG,IAGhC,OAAOrjE,mBAAQ,WAEb,IAAMyjE,EAAQD,EAAaziE,QAA0C,SAACC,EAAD,GAA6B,IAAD,mBAApB2jB,EAAoB,KAAZC,EAAY,KACzF8+C,EAAS/+C,EAAOU,YAAYT,GAC5B6E,EAAMi6C,EAAM,UAAM/+C,EAAO9kB,QAAb,YAAwB+kB,EAAO/kB,SAA/B,UAA8C+kB,EAAO/kB,QAArD,YAAgE8kB,EAAO9kB,SACzF,OAAImB,EAAKyoB,KACTzoB,EAAKyoB,GAAOi6C,EAAS,CAAC/+C,EAAQC,GAAU,CAACA,EAAQD,IAD3B3jB,IAGrB,IAEH,OAAOmC,OAAOkI,KAAKo4D,GAAOpjE,KAAI,SAACopB,GAAD,OAASg6C,EAAMh6C,QAC5C,CAAC+5C,M,gHC1QN,gNAKaG,EAAsB,SACjCC,EACAC,GAGI,IAFJpsD,EAEG,uDAFQ,GACXqsD,EACG,uDADe,EAEZC,EAAmBvrC,YAAiBqrC,EAAkBpsD,GACtDusD,EAAe,IAAIx+D,IAAUo+D,EAAOK,aAAaF,IACjDG,EAAsB1rC,YAAiBwrC,EAAcvsD,GACrD0sD,EAAkB/kB,YAAiB,IAAI55C,IAAU0+D,GAAsBzsD,GACvE2sD,EAAuB9kB,YAAsB0kB,EAAcvsD,EAAUqsD,GAC3E,MAAO,CAAEI,sBAAqBC,kBAAiBC,yBAGpCC,EAAsB,SACjCC,EACAT,GAGI,IAFJpsD,EAEG,uDAFQ,GACXqsD,EACG,uDADe,EAEZC,EAAmBvrC,YAAiBqrC,EAAkBpsD,GACtD8sD,EAAiB,IAAI/+D,IAAU8+D,EAAKjlB,UAAU0kB,IAC9CS,EAAwBhsC,YAAiB+rC,EAAgB9sD,GACzDgtD,EAAoBrlB,YAAiB,IAAI55C,IAAUg/D,GAAwB/sD,GAC3EitD,EAAyBplB,YAAsBilB,EAAgB9sD,EAAUqsD,GAC/E,MAAO,CAAEU,wBAAuBC,oBAAmBC,2BAMxCC,EAAa,SAACtrB,EAAY5wC,GACrC,IAAQm8D,EAAqBvrB,EAArBurB,YAAat8D,EAAQ+wC,EAAR/wC,IAGfynB,EAAwB60C,EAPM,IACM,EAQ1C,OAAIA,EAEK,CAAEt8D,IADyE,IAAlEmB,YAAOnB,EAVW,IAUyB,IAAKG,GACzCsnB,yBAElB,CAAEznB,MAAKynB,0BAGH80C,EAAuB,SAClCjjE,EACAkjE,EACAC,EACAC,EACAz8D,GAEA,IAAM08D,EACJrjE,GAAWkjE,GAAwBA,EAAqB/wC,GAAG,IAAMgxC,GAAcA,EAAWhxC,GAAG,GAEzFmxC,EADsBvB,EAAoBoB,EAAYC,GAApDb,gBAC+BgB,MAAML,GACvCM,EAAoBF,EAAeG,IAAI,GAAK7sC,YAAiB0sC,EAAgB,IAAM,EAEnFI,EAAgBJ,EAAe3+D,MAAMgC,GAE3C,MAAO,CAAE08D,kBAAiBG,oBAAmBG,iBADpBD,EAAcD,IAAI,GAAK7sC,YAAiB8sC,EAAe,IAAM,IAI3EE,EAAmB,SAACnsB,EAAYzQ,GAC3C,IAAQ68B,EAAqCpsB,EAArCosB,WAAYC,EAAyBrsB,EAAzBqsB,SAAUC,EAAetsB,EAAfssB,WACxBC,EAA2BtlD,SAASqlD,GAAcF,GAAcC,GAChEG,EAAmBh9D,KAAKi9D,IAAIL,EAAa78B,EAAc,GACvDm9B,EAAkBl9D,KAAKi9D,IAAIJ,EAAW98B,EAAc,GACpDo9B,EAAsC,IAArBH,GAA0BE,EAAkB,EAEnE,MAAO,CAAEH,2BAA0BC,mBAAkBE,kBAAiBC,iBAAgBC,gBAD9DD,EAAiBD,EAAkBF,K,uMCpEvD/pC,EAAUz0B,IAAOV,IAAV,4FAGK,qBAAGgpC,QAAuB,SAU7B,SAASu2B,EAAT,GAKc,IAJ3Bz2B,EAI0B,EAJ1BA,UACAC,EAG0B,EAH1BA,UAG0B,IAF1BplB,YAE0B,MAFnB,GAEmB,MAD1BqlB,cAC0B,SAC1B,OACE,eAAC7T,EAAD,CAAS6T,OAAQA,EAAjB,UACGF,GAAa,cAACllB,EAAA,EAAD,CAAcvoB,SAAUytC,EAAWnlB,KAAI,UAAKA,EAAK9oB,WAAV,MAA0BkR,MAAO,CAAEk9B,YAAa,SACpGF,GAAa,cAACnlB,EAAA,EAAD,CAAcvoB,SAAU0tC,EAAWplB,KAAI,UAAKA,EAAK9oB,WAAV,W,wBCtBrD2kE,EAAiB9+D,YAAOgjB,IAAPhjB,CAAH,2DACT,qBAAGijB,QACF,qBAAGA,QAGA,SAAS87C,EAAT,GAUX,IATFz7C,EASC,EATDA,QACAjY,EAQC,EARDA,MAQC,IAPD4X,YAOC,MAPM,OAON,EANDO,EAMC,EANDA,IAOMD,EAAiBH,YAAiBE,GAExC,OAAO,cAACw7C,EAAD,CAAgBt7C,IAAKA,EAAKP,KAAMA,EAAMM,KAAMA,EAAMlY,MAAOA,M,8bCDlE,SAAS2zD,EAAiBC,EAA2BC,GACnD,IAAQnrD,EAAY9C,cAAZ8C,QACFmhD,EAAkBtmB,cAExB,OAAOj2C,mBAAQ,WACb,IAAKob,EAAS,MAAO,GAGrB,IAAMorD,EAAiBrjE,OAAOkI,KAAKi7D,EAASlrD,IAAUra,QAAqC,SAAC0lE,EAAQ5mE,GAElG,OADA4mE,EAAO5mE,GAAWymE,EAASlrD,GAASvb,GAASoB,MACtCwlE,IACN,IAEH,OAAIF,EAEAhK,EAEGx7D,QACC,SAAC2lE,EAAWzlE,GAEV,OADAylE,EAAUzlE,EAAMpB,SAAWoB,EACpBylE,IALb,eASSF,IAKNA,IACN,CAACprD,EAASmhD,EAAiB+J,EAAUC,IAQnC,SAASrjE,IAEd,OAAOmjE,EADWtQ,eACiB,GAG9B,SAASa,IAEd,IACMD,EAAiB0P,EADGjoB,eACiC,GAGrDuoB,EAAwBxjE,OAAOkI,KAAKnI,KAU1C,OATyByjE,EACrBxjE,OAAOkI,KAAKsrD,GAAgB51D,QAAqC,SAAC0lE,EAAQ5mE,GAIxE,OAHK8mE,EAAsBnkD,SAAS3iB,KAClC4mE,EAAO5mE,GAAW82D,EAAe92D,IAE5B4mE,IACN,IACH9P,EAKC,SAAS30B,IAEd,OAAOqkC,EADsBO,eACiB,GAGzC,SAASvR,EAAiBp0D,GAC/B,IAAM4lE,EAAe3jE,IAErB,SAAK2jE,IAAiB5lE,MAIb4lE,EAAa5lE,EAAMpB,SAIvB,SAASg5D,EAAuBroB,GACrC,IAAQp1B,EAAY9C,cAAZ8C,QACFu7C,EAAiBC,IAEvB,OAAO52D,mBAAQ,WACb,GAAKob,GAA2B,KAAhBo1B,EAIhB,OADeX,YAAa1sC,OAAOC,OAAOuzD,GAAiBnmB,KAE1D,CAACp1B,EAASu7C,EAAgBnmB,IAIxB,SAAS4kB,EAAoBpzD,GAClC,IAAMu6D,EAAkBtmB,cAExB,QAAKj0C,KAIIu6D,EAAgBr3D,MAAK,SAACjE,GAAD,OAAWi+B,YAAel9B,EAAUf,MAIpE,IAAM6lE,EAAgB,sBAEtB,SAASC,EAAqBC,EAAyBC,EAA6BC,GAClF,OAAOF,GAAOA,EAAIlmE,OAAS,EACvBkmE,EAEFC,GAAWH,EAAc/1D,KAAKk2D,IAAsC,IAA1BE,mBAASF,GAAS,IAC1DG,YAAmBH,GACnBC,EAMC,SAASjP,EAASp7C,GACvB,IAAQzB,EAAY9C,cAAZ8C,QACFtb,EAASoD,IAETrD,EAAUM,YAAU0c,GAEpBwqD,EAAgB7zB,YAAiB3zC,QAAWH,GAAW,GACvD4nE,EAAuBhY,YAAwBzvD,QAAWH,GAAW,GACrEuB,EAA2BpB,EAAUC,EAAOD,QAAWH,EAEvD6nE,EAAYvpC,YAAoB/8B,OAAQvB,EAAY2nE,EAAe,YAAQ3nE,EAAW8nE,KACtFC,EAAmBzpC,YACvB/8B,OAAQvB,EAAY4nE,EACpB,YACA5nE,EACA8nE,KAEI1hE,EAASk4B,YAAoB/8B,OAAQvB,EAAY2nE,EAAe,cAAU3nE,EAAW8nE,KACrFE,EAAgB1pC,YAAoB/8B,OAAQvB,EAAY4nE,EAAsB,cAAU5nE,EAAW8nE,KACnG/vD,EAAWumB,YAAoB/8B,OAAQvB,EAAY2nE,EAAe,gBAAY3nE,EAAW8nE,KAE/F,OAAOxnE,mBAAQ,WACb,GAAIiB,EAAO,OAAOA,EAClB,GAAKma,GAAYvb,EAAjB,CACA,GAAI4X,EAAS5W,SAAWiF,EAAOjF,SAAW0mE,EAAU1mE,QAAS,OAAO,KAC9C,IAAD,QAArB,GAAI4W,EAASrW,OACX,OAAO,IAAIa,IACTmZ,EACAvb,EACA4X,EAASrW,OAAO,GAChB2lE,EAAoB,UAACjhE,EAAO1E,cAAR,aAAC,EAAgB,GAAjB,UAAqBsmE,EAActmE,cAAnC,aAAqB,EAAuB,GAAI,WACpE2lE,EAAoB,UAACQ,EAAUnmE,cAAX,aAAC,EAAmB,GAApB,UAAwBqmE,EAAiBrmE,cAAzC,aAAwB,EAA0B,GAAI,qBAI7E,CACDvB,EACAub,EACA3D,EAAS5W,QACT4W,EAASrW,OACT0E,EAAOjF,QACPiF,EAAO1E,OACPsmE,EAActmE,OACdH,EACAsmE,EAAU1mE,QACV0mE,EAAUnmE,OACVqmE,EAAiBrmE,SAId,SAAS0X,EAAYjC,GAC1B,IAAM8wD,EAAsC,QAApB,OAAV9wD,QAAU,IAAVA,OAAA,EAAAA,EAAY2D,eACpBvZ,EAAQg3D,EAAS0P,OAAQjoE,EAAYmX,GAC3C,OAAO8wD,EAAQ9kE,IAAQ5B,I,gCChMzB,kHAEO,SAASwjB,EAAgBziB,EAAgCoZ,GAC9D,OAAOA,GAAWpZ,IAAaa,IAAQ4gD,IAAKroC,GAAWpZ,aAAoBC,IAAQD,OAAWtC,EAGzF,SAASwkD,EACdvF,EACAvjC,GAEA,IAAMna,EAAQ09C,GAAkBvjC,EAAUqJ,EAAgBk6B,EAAe38C,SAAUoZ,QAAW1b,EAC9F,OAAOuB,GAAS09C,EAAiB,IAAIl9C,IAAYR,EAAO09C,EAAepf,UAAO7/B,EAGzE,SAASouD,EAAe7sD,GAC7B,OAAIA,EAAM4jB,OAAO4+B,IAAKxiD,EAAMma,UAAkBvY,IACvC5B,I,gCChBT,geAeYghE,EAfZ,S,SAeYA,K,yBAAAA,E,YAAAA,E,eAAAA,M,KAML,IAAMX,EAAuBvlD,YAA0C,6BACjE2lD,EAA0B3lD,YAA6C,gCACvE4lD,EAA8B5lD,YACzC,oCAEWumD,EAAqBvmD,YAAuC,2BAC5DwmD,EAAqBxmD,YAAmD,2BACxE2mD,EAAwB3mD,YAAmD,8BAC3E+mD,EAAoB/mD,YAAiD,0BACrE6rD,EACX7rD,YAAgF,6BAErEmlD,EAAYnlD,YAAmB,kBAC/BolD,EAAcplD,YAAmB,oBACjC9U,EAAc8U,YAAmB,oBACjCqmD,EAA2BrmD,YACtC,iCAEW4mD,EAAiB5mD,YAAmC,wB,uECgIrD8rD,EAMAC,EA8EAC,EAiGAC,EAKAC,EAMAC,EAwCAC,E,iKAxOAN,K,YAAAA,E,YAAAA,E,eAAAA,M,cAMAC,K,kBAAAA,E,YAAAA,E,gBAAAA,E,eAAAA,M,cA8EAC,K,UAAAA,E,sBAAAA,E,2BAAAA,M,cAiGAC,K,oBAAAA,E,aAAAA,M,cAKAC,K,UAAAA,E,YAAAA,E,uBAAAA,M,cAMAC,K,gBAAAA,E,kBAAAA,E,iBAAAA,M,cAwCAC,K,kBAAAA,E,YAAAA,E,kBAAAA,E,eAAAA,M,WClXAC,E,2FAAAA,K,UAAAA,E,YAAAA,E,oBAAAA,E,aAAAA,M,KAOL,IAAMC,EAAe,SAAClnE,GAC3B,GAAc,OAAVA,EACF,OAAO,KAGT,IAAMmnE,EAAWpiD,OAAO/kB,GACxB,OAAO+kB,OAAOnL,MAAMutD,GAAY,KAAOA,GAqD5BC,EAAuB,SAACC,GACnC,IAAMC,EAAM,CACVl8D,GAAIi8D,EAAYj8D,GAChBgQ,KAAMisD,EAAYjsD,KAClBld,MAAOgpE,EAAaG,EAAYnpE,OAChCgC,OAAQmnE,EAAYnnE,OAAS8H,WAAWq/D,EAAYnnE,QAAU,EAC9DqnE,SAAmC,SAAzBF,EAAYE,SAAsBb,EAAYc,KAAOd,EAAYe,KAC3ExzB,QAASozB,EAAYpzB,QACrByzB,UAAWR,EAAaG,EAAYK,WACpCC,aAAcT,EAAaG,EAAYM,cACvCC,YAAaP,EAAYO,YACzBC,WAAYR,EAAYQ,WAAa7/D,WAAWq/D,EAAYQ,YAAc,EAC1EC,cAAeT,EAAYS,cAAgB9/D,WAAWq/D,EAAYS,eAAiB,EACnFC,UAAWb,EAAaG,EAAYU,WACpCC,UAAWd,EAAaG,EAAYW,YAWtC,OARIX,EAAY55D,OACd65D,EAAI75D,KApE6B,SAACw6D,GACpC,IACE78D,EAeE68D,EAfF78D,GACA28D,EAcEE,EAdFF,UACAC,EAaEC,EAbFD,UACA9pE,EAYE+pE,EAZF/pE,MACAgqE,EAWED,EAXFC,UACAC,EAUEF,EAVFE,cACAC,EASEH,EATFG,cACAC,EAQEJ,EARFI,SACAC,EAOEL,EAPFK,aACAC,EAMEN,EANFM,aACAC,EAKEP,EALFO,iBACAC,EAIER,EAJFQ,gBACAC,EAGET,EAHFS,QACAC,EAEEV,EAFFU,WACAC,EACEX,EADFW,OAGF,MAAO,CACLx9D,KACA28D,UAAWb,EAAaa,GACxBC,UAAWd,EAAac,GACxB9pE,MAAOgpE,EAAahpE,GACpBgqE,UAAWhB,EAAagB,GACxBC,cAAejB,EAAaiB,GAC5BC,cAAelB,EAAakB,GAC5BC,SAAUA,EAAWrgE,WAAWqgE,GAAY,EAC5CC,aAAcA,EAAetgE,WAAWsgE,GAAgB,EACxDC,aAAcA,EAAevgE,WAAWugE,GAAgB,EACxDC,iBAAkBtB,EAAasB,GAC/BC,gBAAiBA,EAAkBzgE,WAAWygE,GAAmB,EACjEC,QAASA,EAAU1gE,WAAW0gE,GAAW,EACzCC,WAAYA,EAAa3gE,WAAW2gE,GAAc,EAClDC,OAAQA,EAAS5gE,WAAW4gE,GAAU,GAkC3BC,CAAsBxB,EAAY55D,OAG3C45D,EAAY1/D,QACd2/D,EAAI3/D,MAAQmhE,EAAuBzB,EAAY1/D,QAG1C2/D,GAGIwB,EAAyB,SAACC,GACrC,IAzCwBC,EA0CtB59D,EAwBE29D,EAxBF39D,GACA69D,EAuBEF,EAvBFE,MACAC,EAsBEH,EAtBFG,OACA3B,EAqBEwB,EArBFxB,SACA4B,EAoBEJ,EApBFI,QACA7E,EAmBEyE,EAnBFzE,WACA8E,EAkBEL,EAlBFK,UACAC,EAiBEN,EAjBFM,OACAC,EAgBEP,EAhBFO,UACAC,EAeER,EAfFQ,SACAC,EAcET,EAdFS,UACAC,EAaEV,EAbFU,YACAC,EAYEX,EAZFW,QACAC,EAWEZ,EAXFY,WACAC,EAUEb,EAVFa,UACAC,EASEd,EATFc,WACAC,EAQEf,EARFe,aACA5B,EAOEa,EAPFb,UACA6B,EAMEhB,EANFgB,YACAC,EAKEjB,EALFiB,SACAC,EAIElB,EAJFkB,WACAC,EAGEnB,EAHFmB,SACAC,EAEEpB,EAFFoB,WAvBF,EAyBIpB,EADFqB,YAxBF,MAwBS,GAxBT,EA2BA,MAAO,CACLh/D,KACA89D,SACAE,YACAG,WACAE,cACAK,eACAF,YACArC,UA5EsByB,EA4EKzB,EA3EJ,SAArByB,EACKtC,EAAYc,KAGI,SAArBwB,EACKtC,EAAYe,KAGd,MAoELwB,MAAO/B,EAAa+B,GACpBE,QAASjC,EAAaiC,GACtB7E,WAAY4C,EAAa5C,GACzB+E,OAAQnC,EAAamC,GACrBC,UAAWpC,EAAaoC,GACxBE,UAAWA,EAAYxhE,WAAWwhE,GAAa,EAC/CE,QAASxC,EAAawC,GACtBC,WAAYzC,EAAayC,GACzBE,WAAYA,EAAa7hE,WAAW6hE,GAAc,EAClD3B,UAAWhB,EAAagB,GACxB6B,YAAaA,EAAc/hE,WAAW+hE,GAAe,EACrDC,SAAU9C,EAAa8C,GACvBC,WAAYA,EAAajiE,WAAWiiE,GAAc,EAClDC,SAAUhD,EAAagD,GACvBC,WAAYA,EAAaniE,WAAWmiE,GAAc,EAClDC,KAAMA,EAAKlrE,IAAIkoE,KAsDNiD,EAAa,uCAAG,8CAAA3sE,EAAA,6DAC3B6uB,EAD2B,+BACI,GAC/BF,EAF2B,+BAEnB,IACRC,EAH2B,+BAGpB,EAHoB,SAKJE,kBACrBnqB,IACAoqB,cAF6B,IAAD,+UC3HA,+IA1BE,4QAyCD,qMD2H7B,CAAEJ,QAAOC,OAAMC,UApBU,cAKrBrjB,EALqB,yBAsBpBA,EAASkhE,MAtBW,2CAAH,qDAiDbE,EAAa,uCAAG,WAAO7pE,EAAiB8pE,GAAxB,mBAAA7sE,EAAA,6DACrBgB,EAAUyyC,cACVq5B,EAAcD,EAAOrrE,KAAI,SAAC+pE,GAAD,MAAY,CACzCvqE,UACA2M,KAAM,SACNE,OAAQ,CAAC09D,EAAOxoE,OALS,SAOJ+K,YAAyCq/C,EAAgB2f,GAPrD,cAOrBthE,EAPqB,yBAQpBA,GARoB,2CAAH,wDAWbuhE,EAAgB,uCAAG,WAC9BhqE,EACA8pE,GAF8B,qBAAA7sE,EAAA,6DAIxBgB,EAAUyyC,cACVu5B,EAAiBH,EAAOrrE,KAAI,SAAC+pE,GAAD,MAAY,CAC5CvqE,UACA2M,KAAM,YACNE,OAAQ,CAAC09D,EAAOxoE,OARY,SAUG+K,YAA8Cq/C,EAAgB6f,GAVjE,cAUxBC,EAVwB,gBAeAL,EAAc7pE,EAAS8pE,GAfvB,cAexBK,EAfwB,yBAiBvBD,EAAmB/qE,QAAO,SAACu6B,EAAO0wC,EAAmB/+D,GAC1D,MAA4B8+D,EAAgB9+D,GAApC5L,EAAR,EAAQA,OAAQ+zC,EAAhB,EAAgBA,QACVg1B,EAAQsB,EAAOz+D,GACdg/D,EAAP,YAAoBD,EAApB,MAEA,OAAO,2BACF1wC,GADL,kBAEG8uC,EAAQ6B,GAAa5qE,EAAO0yB,GAAG,KAAOqhB,MAExC,KA1B2B,2CAAH,wDAiChB82B,EAAiB,uCAAG,sDAAArtE,EAAA,6DACzBgB,EAAUyyC,cACV65B,EAAc,CAAC,eAAgB,kBAAmB,eAAgB,SAAU,iBAAiB9rE,KAAI,SAACiN,GAAD,MAAa,CAClHzN,UACA2M,KAAMc,MAJuB,SAM8DX,YAC3Fq/C,EACAmgB,GAR6B,gEAMvBC,EANuB,2BAMPC,EANO,2BAMYC,EANZ,2BAM4BC,EAN5B,2BAMsCC,EANtC,uBAWxB,CACLjiE,OAAQgiE,EAASzE,EAAiB2E,OAAS3E,EAAiB4E,KAC5DN,aAAcA,EAAax3C,WAC3By3C,gBAAiBA,EAAgBz3C,WACjC03C,aAAcA,EAAa9qE,WAC3BgrE,cAAeA,EAAc53C,aAhBA,4CAAH,qDAoBjB+3C,EAAa,uCAAG,WAAOjB,GAAP,mBAAA7sE,EAAA,6DACrBgB,EAAUyyC,cACVhmC,EAAQo/D,EAAOrrE,KAAI,SAAC+pE,GAAD,MAAY,CACnCvqE,UACA2M,KAAM,SACNE,OAAQ,CAAC09D,OALgB,SAOJz9D,YAAyCq/C,EAAgB1/C,GAPrD,cAOrBjC,EAPqB,yBAQpBA,GARoB,2CAAH,sDAWbuiE,EAA0B,SAACxC,EAAeyC,GACrD,MAAO,CACLzC,QACAyC,iBACAC,cAAe,KACfC,eAAgB,KAChBpC,UAAW,KACXK,WAAY,KACZE,YAAaltE,IAAOwH,UAAUgX,KAAK,GAAGqC,SACtCusD,WAAYptE,IAAOwH,UAAUgX,KAAK,GAAGqC,SACrCysD,WAAYttE,IAAOwH,UAAUgX,KAAK,GAAGqC,SACrCmuD,oBAAqBhvE,IAAOwH,UAAUgX,KAAK,GAAGqC,SAC9CouD,aAAcjvE,IAAOwH,UAAUgX,KAAK,GAAGqC,SACvCquD,cAAc,EACdC,aAAc,KACdC,cAAe,OAINC,EAAgB,SAAC/+C,GAC5B,OAAOA,EAAOvtB,QAAO,SAACu6B,EAAOxyB,GAC3B,OAAO,2BACFwyB,GADL,kBAEGxyB,EAAMshE,MAAM5oE,WAAasH,MAE3B,KASQwkE,EAAiB,SAAC1rE,EAAiB2rE,EAAsC7B,GACpF,OAAO6B,EAAQxsE,QAAO,SAACu6B,EAAOkyC,EAAgBvgE,GAC5C,IAAKugE,EACH,OAAOlyC,EAIT,GAAIkyC,EAAensE,OAAOosE,GAAG,GAC3B,OAAOnyC,EAGT,IAAM8uC,EAAQsB,EAAOz+D,GAAOzL,WAE5B,OAAO,2BACF85B,GADL,kBAEG15B,EAFH,2BAGO05B,EAAM15B,IAHb,kBAIKwoE,EAvByC,SAACoD,GAAD,MAAiE,CACjH9E,SAAsC,IAA5B8E,EAAe9E,SAAiBb,EAAYc,KAAOd,EAAYe,KACzEvnE,OAAQmsE,EAAensE,OAAOwd,SAC9Bu2B,QAASo4B,EAAep4B,SAoBTs4B,CAAmCF,SAG/C,KAMQG,EAAqC,SAACtjE,GACjD,IACE+/D,EAcE//D,EAdF+/D,MACAyC,EAaExiE,EAbFwiE,eACAC,EAYEziE,EAZFyiE,cACAC,EAWE1iE,EAXF0iE,eACApC,EAUEtgE,EAVFsgE,UACAK,EASE3gE,EATF2gE,WACAE,EAQE7gE,EARF6gE,YACAE,EAOE/gE,EAPF+gE,WACAE,EAMEjhE,EANFihE,WACA0B,EAKE3iE,EALF2iE,oBACAC,EAIE5iE,EAJF4iE,aACAC,EAGE7iE,EAHF6iE,aACAC,EAEE9iE,EAFF8iE,aACAC,EACE/iE,EADF+iE,cAGF,MAAO,CACLF,eACA9C,MAAOA,EAAMx1C,WACbi4C,eAAgBA,EAAeY,GAAG,GAAK,KAAOZ,EAAej4C,WAC7Dk4C,cAAeA,EAAcW,GAAG,GAAK,KAAOX,EAAcl4C,WAC1Dm4C,eAAgBA,EAAeU,GAAG,GAAK,KAAOV,EAAen4C,WAC7D+1C,UAAWA,EAAU8C,GAAG,GAAK,KAAO9C,EAAU9rD,SAC9CmsD,WAAYA,EAAWyC,GAAG,GAAK,KAAOzC,EAAWnsD,SACjDqsD,YAAaA,EAAYrsD,SACzBusD,WAAYA,EAAWvsD,SACvBysD,WAAYA,EAAWzsD,SACvBmuD,oBAAqBA,EAAoBnuD,SACzCouD,aAAcA,EAAapuD,SAC3BsuD,aAAcA,EAAa3rE,WAC3B4rE,cAAeA,EAAc5rE,aEva3B2gB,EAAiC,CACrC5X,OAAQu9D,EAAiB8F,QACzB9hE,WAAW,EACX+hE,mBAAmB,EACnBC,iBAAiB,EACjBC,mBAAmB,EACnBC,cAAejG,EAAckG,IAC7B7B,aAAc,EACdC,gBAAiB,IACjBC,aAAc,iBACdE,cAAe,GACf0B,gBAAiBzoE,IAASoZ,SAC1ByP,OAAQ,GACRi1B,QAAS,GACTgqB,QAAS,GACTY,kBAAmB,IAgBRC,EAAwB7rD,YACnC,wBADmD,sBAEnD,sDAAA1jB,EAAA,6DAAO+C,EAAP,+BAAiB,KAAjB,SAE2BsqE,IAF3B,cAEQmC,EAFR,OAGQ3C,EACJ2C,EAAWjC,aCtDe,EDuDtBkC,IAAMD,EAAWjC,aAAciC,EAAWjC,aCvDpB,GDwDtB,CAACiC,EAAWjC,cANpB,SAS+BO,EAAcjB,GAT7C,UASQ6C,EATR,OAUQC,EAAsDD,EAAextE,QAAO,SAACu6B,EAAO4uC,GACxF,IAAMuE,EAAiBd,EAAmCzD,GAE1D,OAAO,2BACF5uC,GADL,kBAEGmzC,EAAerE,MAAM5oE,WAAaitE,MAEpC,IAEGC,EAnBR,2BAoBOL,GApBP,IAqBI//C,OAAQkgD,EACRjB,QAAS,GACTY,kBAAmB,KAGhBvsE,EA1BP,0CA2BW8sE,GA3BX,yBA+BgCjD,EAAc7pE,EAAS8pE,GA/BvD,eA+BQK,EA/BR,iBAkCkCH,EAAiBhqE,EAAS8pE,GAlC5D,eAkCQyC,EAlCR,yBAoCSn6B,IAAM,GAAI06B,EAAiB,CAChCnB,QAASD,EAAe1rE,EAASmqE,EAAiBL,GAClDyC,uBAtCJ,6CA2CWQ,GAAapsD,YAAyC,yBAAzB,uCAAmD,WAAO6nD,GAAP,iBAAAvrE,EAAA,6DACrF+vE,EAAqB7iB,cADgE,SAEpE6iB,EAAmBtgD,OAAO87C,GAF0C,cAErF//D,EAFqF,yBAGpFsjE,EAAmCtjE,IAHiD,2CAAnD,uDAM7BwkE,GAActsD,YACzB,0BADyC,uCAEzC,WAAOmpD,GAAP,eAAA7sE,EAAA,sEACuB8tE,EAAcjB,GADrC,cACQp9C,EADR,yBAESA,EAAOvtB,QAAO,SAACu6B,EAAOxyB,GAC3B,IAAKA,EACH,OAAOwyB,EAGT,IAAMmzC,EAAiBd,EAAmC7kE,GAE1D,OAAO,2BACFwyB,GADL,kBAEGmzC,EAAerE,MAAM5oE,WAAaitE,MAEpC,KAbL,2CAFyC,uDAmB9BK,GAAkBvsD,YAA6B,8BAAb,sBAA4C,4BAAA1jB,EAAA,sEAChEqtE,IADgE,cACnFmC,EADmF,yBAElFA,GAFkF,4CAK9EU,GAAkBxsD,YAC7B,8BAD6C,uCAE7C,iCAAA1jB,EAAA,6DAAS+C,EAAT,EAASA,QAAS8pE,EAAlB,EAAkBA,OAAlB,SACwBD,EAAc7pE,EAAS8pE,GAD/C,cACQ6B,EADR,yBAESD,EAAe1rE,EAAS2rE,EAAS7B,IAF1C,2CAF6C,uDAQlCsD,GAAyBzsD,YAGpC,qCAHoD,uCAGd,iCAAA1jB,EAAA,6DAAS+C,EAAT,EAASA,QAAS8pE,EAAlB,EAAkBA,OAAlB,SAChBE,EAAiBhqE,EAAS8pE,GADV,cAChC6B,EADgC,yBAE/BA,GAF+B,2CAHc,uDASzC0B,GAAe1sD,YAC1B,2BAD0C,uCAE1C,mCAAA1jB,EAAA,6DAAS+C,EAAT,EAASA,QAASwzC,EAAlB,EAAkBA,QAAlB,SACyBo2B,EAAc,CACnC58D,KAAMhN,EAAQoZ,cACdo6B,YAHJ,cACQ/qC,EADR,OAKQkhE,EAAOlhE,EAAShK,IAAIkoE,GAL5B,kBAOS,CAAE3mE,UAAS2pE,SAPpB,2CAF0C,uDAa/B2D,GAAmB/rD,YAAY,CAC1C3W,KAAM,cACN2V,eACAiB,SAAU,CACR+rD,oBAAqB,SAAC/vE,EAAOkkB,GAC3BlkB,EAAMmL,OAAS+Y,EAAOC,SAExB6rD,oBAAqB,SAAChwE,EAAOkkB,GAC3BlkB,EAAMyuE,kBAAoBvqD,EAAOC,QACjCnkB,EAAM4uE,cAAgBjG,EAAckG,KAEtCoB,kBAAmB,SAACjwE,EAAOkkB,GACzBlkB,EAAM0uE,gBAAkBxqD,EAAOC,SAEjC+rD,iBAAkB,SAAClwE,EAAOkkB,GACxBlkB,EAAM4uE,cAAgB1qD,EAAOC,SAE/BgsD,gBAAiB,SAACnwE,EAAOkkB,GACvBlkB,EAAMgtE,aAAe9oD,EAAOC,SAE9BisD,mBAAoB,SAACpwE,EAAOkkB,GAC1BlkB,EAAM8uE,gBAAkB5qD,EAAOC,SAEjCksD,0BAA2B,SAACrwE,EAAOkkB,GACjC,MAA2BA,EAAOC,QAA1B3hB,EAAR,EAAQA,QAAS8tE,EAAjB,EAAiBA,MAEjB,GAAItwE,EAAMmkD,QAAQ3hD,GAAU,CAC1B,IAAM+tE,EAAWvwE,EAAMmkD,QAAQ3hD,GAASoiB,WAAU,SAACykD,GAAD,OAASA,EAAIl8D,KAAOmjE,KAElEC,GAAY,IACdvwE,EAAMmkD,QAAQ3hD,GAAS+tE,GAAUv6B,SAAU,MAKnD5xB,cAAe,SAACC,GAEdA,EAAQC,QAAQsrD,GAAuBrrD,WAAW,SAACvkB,EAAOkkB,GACxDlkB,EAAM+uE,kBAAoBn6B,IAAM,GAAI50C,EAAM+uE,kBAAmB7qD,EAAOC,YAItEE,EAAQC,QAAQqrD,GAAgBprD,WAAW,SAACvkB,EAAOkkB,GACjDlkB,EAAMmuE,QAAUv5B,IAAM,GAAI50C,EAAMmuE,QAASjqD,EAAOC,YAIlDE,EAAQC,QAAQorD,GAAgBnrD,WAAW,SAACvkB,EAAOkkB,GACjD,MAAgEA,EAAOC,QAA/DhZ,EAAR,EAAQA,OAAQ6hE,EAAhB,EAAgBA,aAAcC,EAA9B,EAA8BA,gBAAiBC,EAA/C,EAA+CA,aAG/C,GAAIltE,EAAMgtE,eAAiBA,EAAc,CACvC,IAAMwD,EAAcC,IAAM1sE,OAAOC,OAAOhE,EAAMkvB,QAAS,SACjDwhD,EAAclD,EAClBgD,EAAYxF,MAAQ,EACpBwF,EAAY/C,eAAiBR,EClNX,GDqNpBjtE,EAAMkvB,OAAOwhD,EAAY1F,OAAS0F,EAGpC1wE,EAAMmL,OAASA,EACfnL,EAAMgtE,aAAeA,EACrBhtE,EAAMitE,gBAAkBA,EACxBjtE,EAAMktE,aAAeA,KAIvB7oD,EAAQC,QAAQ0qD,EAAsBzqD,WAAW,SAACvkB,EAAOkkB,GAMvD,IALA,MACEA,EAAOC,QADDhZ,EAAR,EAAQA,OAAQ6hE,EAAhB,EAAgBA,aAAcC,EAA9B,EAA8BA,gBAAiBG,EAA/C,EAA+CA,cAAel+C,EAA9D,EAA8DA,OAAQ6/C,EAAtE,EAAsEA,kBAAmBZ,EAAzF,EAAyFA,QAEnFwC,EAAiC,GACjC7hD,EAAeI,EAAO89C,GAEnBlrE,EAAI,EAAGA,GClOY,EDkOaA,IACvC6uE,EAAajiE,KAAK8+D,EAAwBR,EAAelrE,EAAGgtB,EAAa2+C,eAAiBR,EAAkBnrE,IAG9G,OAAO,2BACF9B,GADL,IAEEmL,SACA6hE,eACAC,kBACAG,gBACA2B,oBACAZ,UACAj/C,OAAQ0lB,IAAM,GAAI1lB,EAAQ++C,EAAc0C,SAK5CtsD,EAAQC,QAAQirD,GAAWhrD,WAAW,SAACvkB,EAAOkkB,GAC5ClkB,EAAMkvB,OAAS0lB,IAAM,GAAI50C,EAAMkvB,OAAX,eACjBhL,EAAOC,QAAQ6mD,MAAM5oE,WAAa8hB,EAAOC,aAK9CE,EAAQC,QAAQmrD,GAAYlrD,WAAW,SAACvkB,EAAOkkB,GAC7ClkB,EAAMkvB,OAAS0lB,IAAM,GAAI50C,EAAMkvB,OAAQhL,EAAOC,YAIhDE,EAAQC,QAAQurD,GAAaxjC,SAAS,SAACrsC,GACrCA,EAAM2uE,mBAAoB,KAE5BtqD,EAAQC,QAAQurD,GAAarjC,UAAU,SAACxsC,GACtCA,EAAM2uE,mBAAoB,KAE5BtqD,EAAQC,QAAQurD,GAAatrD,WAAW,SAACvkB,EAAOkkB,GAC9C,MAA0BA,EAAOC,QAAzB3hB,EAAR,EAAQA,QAAS2pE,EAAjB,EAAiBA,KAEjBnsE,EAAM2uE,mBAAoB,EAC1B3uE,EAAMmkD,QAAQ3hD,GAAW2pE,QAMxB,GAQH2D,GAAiBjrD,QAENirD,IAVR,GACLG,kBADK,GAELE,gBAFK,GAGLD,iBAHK,GAILF,oBAJK,GAKLD,oBALK,GAMLK,mBANK,GAOLC,0BAGaP,GAAf,S,oBEpRMc,GAAwB,CAC5B,CACEzjE,GAAI,YACJumB,KAAM,MACNnjB,MAAO,SACPsgE,MAAO,gBAET,CACE1jE,GAAI,YACJumB,KAAM,MACNnjB,MAAO,WACPsgE,MAAO,oBAET,CACE1jE,GAAI,YACJumB,KAAM,MACNnjB,MAAO,mBACPsgE,MAAO,eAET,CACE1jE,GAAI,YACJumB,KAAM,MACNnjB,MAAO,OACPsgE,MAAO,gBAET,CACE1jE,GAAI,YACJumB,KAAM,MACNnjB,MAAO,aACPsgE,MAAO,iBAET,CACE1jE,GAAI,YACJumB,KAAM,MACNnjB,MAAO,QACPsgE,MAAO,eAET,CACE1jE,GAAI,YACJumB,KAAM,MACNnjB,MAAO,UACPsgE,MAAO,iBAET,CACE1jE,GAAI,YACJumB,KAAM,MACNnjB,MAAO,SACPsgE,MAAO,kBAET,CACE1jE,GAAI,YACJumB,KAAM,MACNnjB,MAAO,QACPsgE,MAAO,eAET,CACE1jE,GAAI,YACJumB,KAAM,MACNnjB,MAAO,QACPsgE,MAAO,iBAET,CACE1jE,GAAI,YACJumB,KAAM,MACNnjB,MAAO,QACPsgE,MAAO,eAET,CACE1jE,GAAI,YACJumB,KAAM,aACNnjB,MAAO,wBACPsgE,MAAO,4BAET,CACE1jE,GAAI,YACJumB,KAAM,aACNnjB,MAAO,uBACPsgE,MAAO,2BAET,CACE1jE,GAAI,YACJumB,KAAM,aACNnjB,MAAO,uBACPsgE,MAAO,2BAET,CACE1jE,GAAI,YACJumB,KAAM,aACNnjB,MAAO,uBACPsgE,MAAO,2BAET,CACE1jE,GAAI,YACJumB,KAAM,aACNnjB,MAAO,2BACPsgE,MAAO,+BAET,CACE1jE,GAAI,YACJumB,KAAM,aACNnjB,MAAO,0BACPsgE,MAAO,8BAET,CACE1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","file":"static/js/main.cb1bbebf.chunk.js","sourcesContent":["import tokens from './tokens'\nimport { PoolConfig, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  // {\n  //   sousId: 0,\n  //   // 质押币种\n  //   stakingToken: tokens.hor,\n  //   // 产出币种\n  //   earningToken: tokens.usdt,\n  //   contractAddress: {\n  //     12830: '0x1D6d61EE790eaFf1B35fF31b4A9e6567e39d97f5',\n  //   },\n  //   poolCategory: PoolCategory.COMMUNITY,\n  //   harvest: true,\n  //   tokenPerBlock: '10',\n  //   sortOrder: 1,\n  //   isFinished: false,\n  // },\n  // ,\n  // {\n  //   sousId: 214,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.naos,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xb38b78529bCc895dA16CE2978D6cD6C56e8CfFC3',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.1736',\n  // }\n]\n\nexport default pools\n","import { ethers } from 'ethers'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\n\nexport const simpleRpcProvider = new ethers.providers.JsonRpcProvider(RPC_URL)\n\nexport default null\n","import { useEffect, useRef } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { setBlock } from '.'\nimport { State } from '../types'\n\nexport const usePollBlockNumber = () => {\n  const timer = useRef(null)\n  const dispatch = useAppDispatch()\n  const isWindowVisible = useIsWindowVisible()\n\n  useEffect(() => {\n    if (isWindowVisible) {\n      timer.current = setInterval(async () => {\n        const blockNumber = await simpleRpcProvider.getBlockNumber()\n        dispatch(setBlock(blockNumber))\n      }, 6000)\n    } else {\n      clearInterval(timer.current)\n    }\n\n    return () => clearInterval(timer.current)\n  }, [dispatch, timer, isWindowVisible])\n}\n\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n","import { useContext } from 'react'\nimport { ToastsContext } from 'contexts/ToastsContext'\n\nconst useToast = () => {\n  const toastContext = useContext(ToastsContext)\n\n  if (toastContext === undefined) {\n    throw new Error('Toasts context undefined')\n  }\n\n  return toastContext\n}\n\nexport default useToast\n","import { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from '@awswap/sdk'\nimport { useMemo } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport ERC20_INTERFACE from 'config/abi/erc20'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { useMulticallContract } from 'hooks/useContract'\nimport { isAddress } from 'utils'\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks'\n\n/**\n * Returns a map of the given addresses to their eventually consistent BNB balances.\n */\nexport function useBNBBalances(uncheckedAddresses?: (string | undefined)[]): {\n  [address: string]: CurrencyAmount | undefined\n} {\n  const multicallContract = useMulticallContract()\n\n  const addresses: string[] = useMemo(\n    () =>\n      uncheckedAddresses\n        ? uncheckedAddresses\n            .map(isAddress)\n            .filter((a): a is string => a !== false)\n            .sort()\n        : [],\n    [uncheckedAddresses],\n  )\n\n  const results = useSingleContractMultipleData(\n    multicallContract,\n    'getEthBalance',\n    addresses.map((address) => [address]),\n  )\n\n  return useMemo(\n    () =>\n      addresses.reduce<{ [address: string]: CurrencyAmount }>((memo, address, i) => {\n        const value = results?.[i]?.result?.[0]\n        if (value) memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()))\n        return memo\n      }, {}),\n    [addresses, results],\n  )\n}\n\n/**\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\n */\nexport function useTokenBalancesWithLoadingIndicator(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): [{ [tokenAddress: string]: TokenAmount | undefined }, boolean] {\n  const validatedTokens: Token[] = useMemo(\n    () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\n    [tokens],\n  )\n\n  const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens])\n\n  const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address])\n\n  const anyLoading: boolean = useMemo(() => balances.some((callState) => callState.loading), [balances])\n\n  return [\n    useMemo(\n      () =>\n        address && validatedTokens.length > 0\n          ? validatedTokens.reduce<{ [tokenAddress: string]: TokenAmount | undefined }>((memo, token, i) => {\n              const value = balances?.[i]?.result?.[0]\n              const amount = value ? JSBI.BigInt(value.toString()) : undefined\n              if (amount) {\n                memo[token.address] = new TokenAmount(token, amount)\n              }\n              return memo\n            }, {})\n          : {},\n      [address, validatedTokens, balances],\n    ),\n    anyLoading,\n  ]\n}\n\nexport function useTokenBalances(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): { [tokenAddress: string]: TokenAmount | undefined } {\n  return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\n}\n\n// get the balance for a single token/account combo\nexport function useTokenBalance(account?: string, token?: Token): TokenAmount | undefined {\n  const tokenBalances = useTokenBalances(account, [token])\n  if (!token) return undefined\n  return tokenBalances[token.address]\n}\n\nexport function useCurrencyBalances(\n  account?: string,\n  currencies?: (Currency | undefined)[],\n): (CurrencyAmount | undefined)[] {\n  const tokens = useMemo(\n    () => currencies?.filter((currency): currency is Token => currency instanceof Token) ?? [],\n    [currencies],\n  )\n\n  const tokenBalances = useTokenBalances(account, tokens)\n  const containsBNB: boolean = useMemo(() => currencies?.some((currency) => currency === ETHER) ?? false, [currencies])\n  const ethBalance = useBNBBalances(containsBNB ? [account] : [])\n\n  return useMemo(\n    () =>\n      currencies?.map((currency) => {\n        if (!account || !currency) return undefined\n        if (currency instanceof Token) return tokenBalances[currency.address]\n        if (currency === ETHER) return ethBalance[account]\n        return undefined\n      }) ?? [],\n    [account, currencies, ethBalance, tokenBalances],\n  )\n}\n\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount | undefined {\n  return useCurrencyBalances(account, [currency])[0]\n}\n\n// mimics useAllBalances\nexport function useAllTokenBalances(): { [tokenAddress: string]: TokenAmount | undefined } {\n  const { account } = useWeb3React()\n  const allTokens = useAllTokens()\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\n  const balances = useTokenBalances(account ?? undefined, allTokensArray)\n  return balances ?? {}\n}\n","export const GRAPH_API_PROFILE = process.env.REACT_APP_GRAPH_API_PROFILE\nexport const GRAPH_API_PREDICTION = process.env.REACT_APP_GRAPH_API_PREDICTION\nexport const GRAPH_API_LOTTERY = process.env.REACT_APP_GRAPH_API_LOTTERY\nexport const SNAPSHOT_VOTING_API = process.env.REACT_APP_SNAPSHOT_VOTING_API\nexport const SNAPSHOT_BASE_URL = process.env.REACT_APP_SNAPSHOT_BASE_URL\nexport const SNAPSHOT_API = `${SNAPSHOT_BASE_URL}/graphql`\nexport const SNAPSHOT_HUB_API = `${SNAPSHOT_BASE_URL}/api/message`\nexport const BITQUERY_API = 'https://graphql.bitquery.io'\n\n/**\n * V1 will be deprecated but is still used to claim old rounds\n */\nexport const GRAPH_API_PREDICTION_V1 = 'https://api.thegraph.com/subgraphs/name/pancakeswap/prediction'\n","import useBUSDPrice from 'hooks/useBUSDPrice'\nimport { WHO } from 'config/constants/tokens'\nimport { ChainId } from '@awswap/sdk'\nimport { useEffect, useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { farmsConfig } from 'config/constants'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync, nonArchivedFarms } from '.'\nimport { State, Farm, FarmsState } from '../types'\n\nexport const usePollFarmsData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n\n    if (account) {\n      dispatch(fetchFarmUserDataAsync({ account, pids }))\n    }\n  }, [includeArchive, dispatch, slowRefresh, account])\n}\n\n/**\n * Fetches the \"core\" farm data used globally\n * 251 = CAKE-BNB LP\n * 252 = BUSD-BNB LP\n */\nexport const usePollCoreFarmData = () => {\n  const dispatch = useAppDispatch()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync([251, 252]))\n  }, [dispatch, fastRefresh])\n}\n\nexport const useFarms = (): FarmsState => {\n  const farms = useSelector((state: State) => state.farms)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromLpSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\n  }\n}\n\n// Return the base token price for a farm, from a given pid\nexport const useBusdPriceFromPid = (pid: number): BigNumber => {\n  const farm = useFarmFromPid(pid)\n  return farm && new BigNumber(farm.token.busdPrice)\n}\n\nexport const useLpTokenPrice = (symbol: string) => {\n  const farm = useFarmFromLpSymbol(symbol)\n  const farmTokenPriceInUsd = useBusdPriceFromPid(farm.pid)\n  let lpTokenPrice = BIG_ZERO\n\n  if (farm.lpTotalSupply && farm.lpTotalInQuoteToken) {\n    // Total value of base token in LP\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\n    // Double it to get overall value in LP\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\n    // Divide total value of all tokens, by the number of LP tokens\n    const totalLpTokens = getBalanceAmount(new BigNumber(farm.lpTotalSupply))\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\n  }\n\n  return lpTokenPrice\n}\n\n// /!\\ Deprecated , use the BUSD hook in /hooks\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const bnbBusdFarm = useFarmFromPid(0)\n  return new BigNumber(bnbBusdFarm.quoteToken.busdPrice)\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(0)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\n\nconst useTheme = () => {\n  const [isDark, toggleTheme] = useThemeManager()\n  const theme = useContext(StyledThemeContext)\n  return { isDark, theme, toggleTheme }\n}\n\nexport default useTheme\n","import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\n\nconst Card = styled(Box)<{\n  width?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  border-radius: 16px;\n  padding: 1.25rem;\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n  background-color: ${({ theme }) => theme.colors.background};\n`\nexport default Card\n\nexport const LightCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.background};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nexport const LightGreyCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport const GreyCard = styled(Card)`\n  background-color: ${({ theme }) => theme.colors.dropdown};\n`\n","// 1 day, 7 days, 30 days, 1 year, 5 years\nconst DAYS_TO_CALCULATE_AGAINST = [1, 7, 30, 365, 1825]\n\n/**\n *\n * @param principalInUSD - amount user wants to invest in USD\n * @param apr - farm or pool apr as percentage. If its farm APR its only cake rewards APR without LP rewards APR\n * @param earningTokenPrice - price of reward token\n * @param compoundFrequency - how many compounds per 1 day, e.g. 1 = one per day, 0.142857142 - once per week\n * @param performanceFee - performance fee as percentage\n * @returns an array of token values earned as interest, with each element representing interest earned over a different period of time (DAYS_TO_CALCULATE_AGAINST)\n */\nexport const getInterestBreakdown = ({\n  principalInUSD,\n  apr,\n  earningTokenPrice,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}: {\n  principalInUSD: number\n  apr: number\n  earningTokenPrice: number\n  compoundFrequency?: number\n  performanceFee?: number\n}) => {\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\n  const timesCompounded = 365 * compoundFrequency\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  const aprAsDecimal = apr / 100\n\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\n  // and also cause rounding errors\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\n  const roundingDecimalsNew = isHighValueToken ? 5 : 3\n\n  return DAYS_TO_CALCULATE_AGAINST.map((days) => {\n    const daysAsDecimalOfYear = days / 365\n    // Calculate the starting TOKEN balance with a dollar balance of principalInUSD.\n    const principal = principalInUSD / earningTokenPrice\n    let interestEarned = principal * aprAsDecimal * (days / 365)\n    if (timesCompounded !== 0) {\n      // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n      const accruedAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n      // To get the TOKEN amount earned, deduct the amount after compounding (accruedAmount) from the starting TOKEN balance (principal)\n      interestEarned = accruedAmount - principal\n      if (performanceFee) {\n        const performanceFeeAsDecimal = performanceFee / 100\n        const perfomanceFeeAsAmount = interestEarned * performanceFeeAsDecimal\n        interestEarned -= perfomanceFeeAsAmount\n      }\n    }\n    return parseFloat(interestEarned.toFixed(roundingDecimalsNew))\n  })\n}\n\n/**\n * @param interest how much USD amount you aim to make\n * @param apr APR of farm/pool\n * @param compoundingFrequency how many compounds per 1 day, e.g. 1 = one per day, 0.142857142 - once per week\n * @returns an array of principal values needed to reach target interest, with each element representing principal needed for a different period of time (DAYS_TO_CALCULATE_AGAINST)\n */\nexport const getPrincipalForInterest = (\n  interest: number,\n  apr: number,\n  compoundingFrequency: number,\n  performanceFee = 0,\n) => {\n  return DAYS_TO_CALCULATE_AGAINST.map((days) => {\n    const apyAsDecimal = getApy(apr, compoundingFrequency, days, performanceFee)\n    // console.log('inside', interest, apyAsDecimal)\n    // const apyAsBN = new BigNumber(apyAsDecimal).decimalPlaces(6, BigNumber.ROUND_DOWN).toNumber()\n    return parseFloat((interest / apyAsDecimal).toFixed(2))\n  })\n}\n\n/**\n * Given APR returns APY\n * @param apr APR as percentage\n * @param compoundFrequency how many compounds per day\n * @param days if other than 365 adjusts (A)PY for period less than a year\n * @param performanceFee performance fee as percentage\n * @returns APY as decimal\n */\nexport const getApy = (apr: number, compoundFrequency = 1, days = 365, performanceFee = 0) => {\n  const daysAsDecimalOfYear = days / 365\n  const aprAsDecimal = apr / 100\n  const timesCompounded = 365 * compoundFrequency\n  let apyAsDecimal = (apr / 100) * daysAsDecimalOfYear\n  if (timesCompounded > 0) {\n    apyAsDecimal = (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear) - 1\n  }\n  if (performanceFee) {\n    const performanceFeeAsDecimal = performanceFee / 100\n    const takenAsPerformanceFee = apyAsDecimal * performanceFeeAsDecimal\n    apyAsDecimal -= takenAsPerformanceFee\n  }\n  return apyAsDecimal\n}\n\nexport const getRoi = ({ amountEarned, amountInvested }: { amountEarned: number; amountInvested: number }) => {\n  if (amountInvested === 0) {\n    return 0\n  }\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage\n}\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { LotteryStatus, LotteryTicket } from 'config/constants/types'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport { getLotteryV2Address } from 'utils/addressHelpers'\nimport { multicallv2 } from 'utils/multicall'\nimport { LotteryRound, LotteryRoundUserTickets, LotteryResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\nimport { useMemo } from 'react'\nimport { ethersToSerializedBigNumber } from 'utils/bigNumber'\nimport { NUM_ROUNDS_TO_FETCH_FROM_NODES } from 'config/constants/lottery'\n\nconst lotteryContract = getLotteryV2Contract()\n\nconst processViewLotterySuccessResponse = (response, lotteryId: string): LotteryResponse => {\n  const {\n    status,\n    startTime,\n    endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee,\n    firstTicketId,\n    lastTicketId,\n    amountCollectedInCake,\n    finalNumber,\n    cakePerBracket,\n    countWinnersPerBracket,\n    rewardsBreakdown,\n  } = response\n\n  const statusKey = Object.keys(LotteryStatus)[status]\n  const serializedCakePerBracket = cakePerBracket.map((cakeInBracket) => ethersToSerializedBigNumber(cakeInBracket))\n  const serializedCountWinnersPerBracket = countWinnersPerBracket.map((winnersInBracket) =>\n    ethersToSerializedBigNumber(winnersInBracket),\n  )\n  const serializedRewardsBreakdown = rewardsBreakdown.map((reward) => ethersToSerializedBigNumber(reward))\n\n  return {\n    isLoading: false,\n    lotteryId,\n    status: LotteryStatus[statusKey],\n    startTime: startTime?.toString(),\n    endTime: endTime?.toString(),\n    priceTicketInCake: ethersToSerializedBigNumber(priceTicketInCake),\n    discountDivisor: discountDivisor?.toString(),\n    treasuryFee: treasuryFee?.toString(),\n    firstTicketId: firstTicketId?.toString(),\n    lastTicketId: lastTicketId?.toString(),\n    amountCollectedInCake: ethersToSerializedBigNumber(amountCollectedInCake),\n    finalNumber,\n    cakePerBracket: serializedCakePerBracket,\n    countWinnersPerBracket: serializedCountWinnersPerBracket,\n    rewardsBreakdown: serializedRewardsBreakdown,\n  }\n}\n\nconst processViewLotteryErrorResponse = (lotteryId: string): LotteryResponse => {\n  return {\n    isLoading: true,\n    lotteryId,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n  }\n}\n\nexport const fetchLottery = async (lotteryId: string): Promise<LotteryResponse> => {\n  try {\n    const lotteryData = await lotteryContract.viewLottery(lotteryId)\n    return processViewLotterySuccessResponse(lotteryData, lotteryId)\n  } catch (error) {\n    return processViewLotteryErrorResponse(lotteryId)\n  }\n}\n\nexport const fetchMultipleLotteries = async (lotteryIds: string[]): Promise<LotteryResponse[]> => {\n  const calls = lotteryIds.map((id) => ({\n    name: 'viewLottery',\n    address: getLotteryV2Address(),\n    params: [id],\n  }))\n  try {\n    const multicallRes = await multicallv2(lotteryV2Abi, calls, { requireSuccess: false })\n    const processedResponses = multicallRes.map((res, index) =>\n      processViewLotterySuccessResponse(res[0], lotteryIds[index]),\n    )\n    return processedResponses\n  } catch (error) {\n    console.error(error)\n    return calls.map((call, index) => processViewLotteryErrorResponse(lotteryIds[index]))\n  }\n}\n\nexport const fetchCurrentLotteryIdAndMaxBuy = async () => {\n  try {\n    const calls = ['currentLotteryId', 'maxNumberTicketsPerBuyOrClaim'].map((method) => ({\n      address: getLotteryV2Address(),\n      name: method,\n    }))\n    const [[currentLotteryId], [maxNumberTicketsPerBuyOrClaim]] = (await multicallv2(\n      lotteryV2Abi,\n      calls,\n    )) as ethers.BigNumber[][]\n\n    return {\n      currentLotteryId: currentLotteryId ? currentLotteryId.toString() : null,\n      maxNumberTicketsPerBuyOrClaim: maxNumberTicketsPerBuyOrClaim ? maxNumberTicketsPerBuyOrClaim.toString() : null,\n    }\n  } catch (error) {\n    return {\n      currentLotteryId: null,\n      maxNumberTicketsPerBuyOrClaim: null,\n    }\n  }\n}\n\nexport const getRoundIdsArray = (currentLotteryId: string): string[] => {\n  const currentIdAsInt = parseInt(currentLotteryId, 10)\n  const roundIds = []\n  for (let i = 0; i < NUM_ROUNDS_TO_FETCH_FROM_NODES; i++) {\n    roundIds.push(currentIdAsInt - i)\n  }\n  return roundIds.map((roundId) => roundId.toString())\n}\n\nexport const useProcessLotteryResponse = (\n  lotteryData: LotteryResponse & { userTickets?: LotteryRoundUserTickets },\n): LotteryRound => {\n  const {\n    priceTicketInCake: priceTicketInCakeAsString,\n    discountDivisor: discountDivisorAsString,\n    amountCollectedInCake: amountCollectedInCakeAsString,\n  } = lotteryData\n\n  const discountDivisor = useMemo(() => {\n    return new BigNumber(discountDivisorAsString)\n  }, [discountDivisorAsString])\n\n  const priceTicketInCake = useMemo(() => {\n    return new BigNumber(priceTicketInCakeAsString)\n  }, [priceTicketInCakeAsString])\n\n  const amountCollectedInCake = useMemo(() => {\n    return new BigNumber(amountCollectedInCakeAsString)\n  }, [amountCollectedInCakeAsString])\n\n  return {\n    isLoading: lotteryData.isLoading,\n    lotteryId: lotteryData.lotteryId,\n    userTickets: lotteryData.userTickets,\n    status: lotteryData.status,\n    startTime: lotteryData.startTime,\n    endTime: lotteryData.endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee: lotteryData.treasuryFee,\n    firstTicketId: lotteryData.firstTicketId,\n    lastTicketId: lotteryData.lastTicketId,\n    amountCollectedInCake,\n    finalNumber: lotteryData.finalNumber,\n    cakePerBracket: lotteryData.cakePerBracket,\n    countWinnersPerBracket: lotteryData.countWinnersPerBracket,\n    rewardsBreakdown: lotteryData.rewardsBreakdown,\n  }\n}\n\nexport const hasRoundBeenClaimed = (tickets: LotteryTicket[]): boolean => {\n  const claimedTickets = tickets.filter((ticket) => ticket.status)\n  return claimedTickets.length > 0\n}\n","import { ChainId } from '@awswap/sdk'\nimport store from 'state'\nimport { GAS_PRICE_GWEI } from 'state/user/hooks/helpers'\n\n/**\n * Function to return gasPrice outwith a react component\n */\nconst getGasPrice = (): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  const state = store.getState()\n  const userGas = state.user.gasPrice || GAS_PRICE_GWEI.default\n  return chainId === ChainId.MAINNET.toString() ? userGas : GAS_PRICE_GWEI.testnet\n}\n\nexport default getGasPrice\n","import { Language } from '@pancakeswap/uikit'\n\nexport const AR: Language = { locale: 'ar-SA', language: 'العربية', code: 'ar' }\nexport const BN: Language = { locale: 'bn-BD', language: 'বাংলা', code: 'bn' }\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\nexport const DE: Language = { locale: 'de-DE', language: 'Deutsch', code: 'de' }\nexport const EL: Language = { locale: 'el-GR', language: 'Ελληνικά', code: 'el' }\nexport const ESES: Language = { locale: 'es-ES', language: 'Español', code: 'es-ES' }\nexport const FI: Language = { locale: 'fi-FI', language: 'Suomalainen', code: 'fi' }\nexport const FIL: Language = { locale: 'fil-PH', language: 'Filipino', code: 'fil' }\nexport const FR: Language = { locale: 'fr-FR', language: 'Français', code: 'fr' }\nexport const HI: Language = { locale: 'hi-IN', language: 'हिंदी', code: 'hi' }\nexport const HU: Language = { locale: 'hu-HU', language: 'Magyar', code: 'hu' }\nexport const ID: Language = { locale: 'id-ID', language: 'Bahasa Indonesia', code: 'id' }\nexport const IT: Language = { locale: 'it-IT', language: 'Italiano', code: 'it' }\nexport const JA: Language = { locale: 'ja-JP', language: '日本語', code: 'ja' }\nexport const KO: Language = { locale: 'ko-KR', language: '한국어', code: 'ko' }\nexport const NL: Language = { locale: 'nl-NL', language: 'Nederlands', code: 'nl' }\nexport const PL: Language = { locale: 'pl-PL', language: 'Polski', code: 'pl' }\nexport const PTBR: Language = { locale: 'pt-BR', language: 'Português (Brazil)', code: 'pt-br' }\nexport const PTPT: Language = { locale: 'pt-PT', language: 'Português', code: 'pt-pt' }\nexport const RO: Language = { locale: 'ro-RO', language: 'Română', code: 'ro' }\nexport const RU: Language = { locale: 'ru-RU', language: 'Русский', code: 'ru' }\nexport const SVSE: Language = { locale: 'sv-SE', language: 'Svenska', code: 'sv' }\nexport const TA: Language = { locale: 'ta-IN', language: 'தமிழ்', code: 'ta' }\nexport const TR: Language = { locale: 'tr-TR', language: 'Türkçe', code: 'tr' }\nexport const UK: Language = { locale: 'uk-UA', language: 'Українська', code: 'uk' }\nexport const VI: Language = { locale: 'vi-VN', language: 'Tiếng Việt', code: 'vi' }\nexport const ZHCN: Language = { locale: 'zh-CN', language: '简体中文', code: 'zh-cn' }\nexport const ZHTW: Language = { locale: 'zh-TW', language: '繁體中文', code: 'zh-tw' }\n\nexport const languages = {\n  // 'ar-SA': AR,\n  // 'bn-BD': BN,\n  'en-US': EN,\n  // 'de-DE': DE,\n  // 'el-GR': EL,\n  // 'es-ES': ESES,\n  // 'fi-FI': FI,\n  // 'fil-PH': FIL,\n  // 'fr-FR': FR,\n  // 'hi-IN': HI,\n  // 'hu-HU': HU,\n  // 'id-ID': ID,\n  // 'it-IT': IT,\n  'ja-JP': JA,\n  'ko-KR': KO,\n  // 'nl-NL': NL,\n  // 'pl-PL': PL,\n  // 'pt-BR': PTBR,\n  // 'pt-PT': PTPT,\n  // 'ro-RO': RO,\n  'ru-RU': RU,\n  // 'sv-SE': SVSE,\n  // 'ta-IN': TA,\n  // 'tr-TR': TR,\n  // 'uk-UA': UK,\n  // 'vi-VN': VI,\n  'zh-CN': ZHCN,\n  // 'zh-TW': ZHTW,\n}\n\nexport const languageList = Object.values(languages)\n","import { FC } from 'react'\nimport { SvgProps } from '@pancakeswap/uikit'\n\nexport enum ConnectorNames {\n  Injected = 'injected',\n  WalletConnect = 'walletconnect',\n  BSC = 'bsc',\n}\n\nexport type Login = (connectorId: ConnectorNames) => void\n\nexport interface Config {\n  title: string\n  icon: FC<SvgProps>\n  connectorId: ConnectorNames\n  priority: number\n}\n","import {\n  MetamaskIcon as Metamask,\n  WalletConnectIcon as WalletConnect,\n  TrustWalletIcon as TrustWallet,\n  MathWalletIcon as MathWallet,\n  TokenPocketIcon as TokenPocket,\n  BinanceChainIcon as BinanceChain,\n  SafePalIcon as SafePal,\n  Coin98Icon as Coin98,\n} from '@pancakeswap/uikit'\n\nimport { Config, ConnectorNames } from './types'\n\nconst connectors: Config[] = [\n  {\n    title: 'Metamask',\n    icon: Metamask,\n    connectorId: ConnectorNames.Injected,\n    priority: 1,\n  },\n]\n\nexport default connectors\nexport const connectorLocalStorageKey = 'connectorIdv2'\nexport const walletLocalStorageKey = 'wallet'\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button, Text, MoreHorizontalIcon as MoreHorizontal, ButtonProps } from '@pancakeswap/uikit'\nimport { connectorLocalStorageKey, walletLocalStorageKey } from './config'\nimport { Login, Config, ConnectorNames } from './types'\n\ninterface Props {\n  walletConfig: Config\n  login: Login\n  onDismiss: () => void\n}\n\nconst WalletButton = styled(Button).attrs({ width: '100%', variant: 'text', py: '16px' })`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  height: auto;\n  justify-content: center;\n  margin-left: auto;\n  margin-right: auto;\n`\n\nexport const MoreWalletCard: React.FC<ButtonProps> = (props) => {\n  return (\n    <WalletButton variant=\"tertiary\" {...props}>\n      <MoreHorizontal width=\"40px\" mb=\"8px\" color=\"textSubtle\" />\n      <Text fontSize=\"14px\">More</Text>\n    </WalletButton>\n  )\n}\n\nconst WalletCard: React.FC<Props> = ({ login, walletConfig, onDismiss }) => {\n  const { title, icon: Icon } = walletConfig\n\n  return (\n    <WalletButton\n      variant=\"tertiary\"\n      onClick={() => {\n        const isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n\n        // Since iOS does not support Trust Wallet we fall back to WalletConnect\n        if (walletConfig.title === 'Trust Wallet' && isIOS) {\n          login(ConnectorNames.WalletConnect)\n        } else {\n          login(walletConfig.connectorId)\n        }\n\n        localStorage.setItem(walletLocalStorageKey, walletConfig.title)\n        localStorage.setItem(connectorLocalStorageKey, walletConfig.connectorId)\n        onDismiss()\n      }}\n      id={`wallet-connect-${title.toLocaleLowerCase()}`}\n    >\n      <Icon width=\"40px\" mb=\"8px\" />\n      <Text fontSize=\"14px\">{title}</Text>\n    </WalletButton>\n  )\n}\n\nexport default WalletCard\n","import React, { useState } from 'react'\nimport styled, { useTheme } from 'styled-components'\nimport {\n  Grid,\n  Box,\n  Text,\n  Heading,\n  Button,\n  ModalBody,\n  ModalCloseButton,\n  ModalContainer,\n  ModalHeader,\n  ModalTitle,\n} from '@pancakeswap/uikit'\nimport { getThemeValue, getExternalLinkProps } from '../../../utils'\nimport WalletCard, { MoreWalletCard } from './WalletCard'\nimport config, { walletLocalStorageKey } from './config'\nimport { Config, Login } from './types'\n\ninterface Props {\n  login: Login\n  onDismiss?: () => void\n  displayCount?: number\n}\n\nconst WalletWrapper = styled(Box)`\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\n/**\n * Checks local storage if we have saved the last wallet the user connected with\n * If we find something we put it at the top of the list\n *\n * @returns sorted config\n */\nconst getPreferredConfig = (walletConfig: Config[]) => {\n  const preferredWalletName = localStorage.getItem(walletLocalStorageKey)\n  const sortedConfig = walletConfig.sort((a: Config, b: Config) => a.priority - b.priority)\n\n  if (!preferredWalletName) {\n    return sortedConfig\n  }\n\n  const preferredWallet = sortedConfig.find((sortedWalletConfig) => sortedWalletConfig.title === preferredWalletName)\n\n  if (!preferredWallet) {\n    return sortedConfig\n  }\n\n  return [\n    preferredWallet,\n    ...sortedConfig.filter((sortedWalletConfig) => sortedWalletConfig.title !== preferredWalletName),\n  ]\n}\n\nconst ConnectModal: React.FC<Props> = ({ login, onDismiss = () => null, displayCount = 3 }) => {\n  const [showMore, setShowMore] = useState(false)\n  const theme = useTheme()\n  const sortedConfig = getPreferredConfig(config)\n  const displayListConfig = showMore ? sortedConfig : sortedConfig.slice(0, displayCount)\n\n  return (\n    <ModalContainer minWidth=\"320px\" style={{ borderRadius: 8 }}>\n      <ModalHeader background={getThemeValue('colors.gradients.bubblegum')(theme)}>\n        <ModalTitle>\n          <Heading>Connect Wallet</Heading>\n        </ModalTitle>\n        <ModalCloseButton onDismiss={onDismiss} />\n      </ModalHeader>\n      <ModalBody width={['320px', null, '340px']}>\n        <WalletWrapper py=\"24px\" maxHeight=\"453px\" overflowY=\"auto\">\n          <Grid gridTemplateColumns=\"1fr 1fr\">\n            {displayListConfig.map((wallet) => (\n              <Box key={wallet.title}>\n                <WalletCard walletConfig={wallet} login={login} onDismiss={onDismiss} />\n              </Box>\n            ))}\n          </Grid>\n        </WalletWrapper>\n      </ModalBody>\n    </ModalContainer>\n  )\n}\n\nexport default ConnectModal\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, CopyIcon } from '@pancakeswap/uikit'\n\ninterface Props {\n  toCopy: string\n}\n\nconst StyleButton = styled(Text).attrs({ role: 'button' })`\n  position: relative;\n  display: flex;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nconst Tooltip = styled.div<{ isTooltipDisplayed: boolean }>`\n  display: ${({ isTooltipDisplayed }) => (isTooltipDisplayed ? 'block' : 'none')};\n  position: absolute;\n  bottom: -22px;\n  right: 0;\n  left: 0;\n  text-align: center;\n  background-color: ${({ theme }) => theme.colors.contrast};\n  color: ${({ theme }) => theme.colors.invertedContrast};\n  border-radius: 16px;\n  opacity: 0.7;\n`\n\nconst CopyToClipboard: React.FC<Props> = ({ toCopy, children, ...props }) => {\n  const [isTooltipDisplayed, setIsTooltipDisplayed] = useState(false)\n\n  const copyToClipboardWithCommand = (content: string) => {\n    const el = document.createElement('textarea')\n    el.value = content\n    document.body.appendChild(el)\n    el.select()\n    document.execCommand('copy')\n    document.body.removeChild(el)\n  }\n\n  function displayTooltip() {\n    setIsTooltipDisplayed(true)\n    setTimeout(() => {\n      setIsTooltipDisplayed(false)\n    }, 1000)\n  }\n\n  return (\n    <StyleButton\n      small\n      bold\n      onClick={() => {\n        if (navigator.clipboard && navigator.permissions) {\n          navigator.clipboard.writeText(toCopy).then(() => displayTooltip())\n        } else if (document.queryCommandSupported('copy')) {\n          copyToClipboardWithCommand(toCopy)\n          displayTooltip()\n        }\n      }}\n      {...props}\n    >\n      {children}\n      <CopyIcon width=\"20px\" color=\"primary\" ml=\"4px\" />\n      <Tooltip isTooltipDisplayed={isTooltipDisplayed}>Copied</Tooltip>\n    </StyleButton>\n  )\n}\n\nexport default CopyToClipboard\n","import React from 'react'\nimport { Button, Text, LinkExternal, Flex, Modal } from '@pancakeswap/uikit'\nimport CopyToClipboard from './CopyToClipboard'\nimport { connectorLocalStorageKey } from './config'\n\ninterface Props {\n  account: string\n  logout: () => void\n  onDismiss?: () => void\n}\n\nconst AccountModal: React.FC<Props> = ({ account, logout, onDismiss = () => null }) => (\n  <Modal title=\"Your wallet\" onDismiss={onDismiss}>\n    <Text\n      fontSize=\"20px\"\n      bold\n      style={{ whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis', marginBottom: '8px' }}\n    >\n      {account}\n    </Text>\n    <Flex mb=\"32px\">\n      <LinkExternal small href={`https://browser.halo.land/address/${account}`} mr=\"16px\">\n        View on Browser\n      </LinkExternal>\n      <CopyToClipboard toCopy={account}>Copy Address</CopyToClipboard>\n    </Flex>\n    <Flex justifyContent=\"center\">\n      <Button\n        scale=\"sm\"\n        variant=\"secondary\"\n        onClick={() => {\n          logout()\n          window.localStorage.removeItem(connectorLocalStorageKey)\n          onDismiss()\n        }}\n      >\n        Logout\n      </Button>\n    </Flex>\n  </Modal>\n)\n\nexport default AccountModal\n","import React from 'react'\nimport { useModal } from '@pancakeswap/uikit'\nimport ConnectModal from './ConnectModal'\nimport AccountModal from './AccountModal'\nimport { Login } from './types'\n\ninterface ReturnType {\n  onPresentConnectModal: () => void\n  onPresentAccountModal: () => void\n}\n\nconst useWalletModal = (login: Login, logout: () => void, account?: string): ReturnType => {\n  const [onPresentConnectModal] = useModal(<ConnectModal login={login} />)\n  const [onPresentAccountModal] = useModal(<AccountModal account={account || ''} logout={logout} />)\n  return { onPresentConnectModal, onPresentAccountModal }\n}\n\nexport default useWalletModal\n","import React from 'react'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\nimport Button from './styles/Button'\nimport { useWalletModal } from './Menu/WalletModal'\n\nconst ConnectWalletButton = (props) => {\n  const { t } = useTranslation()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout)\n\n  return (\n    <Button onClick={onPresentConnectModal} className=\"btn-connect\" {...props}>\n      {t('Connect Wallet')}\n    </Button>\n  )\n}\n\nexport default ConnectWalletButton\n","import { parseUnits } from '@ethersproject/units'\nimport { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount, Trade } from '@awswap/sdk'\nimport { ParsedQs } from 'qs'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useENS from 'hooks/ENS/useENS'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrency } from 'hooks/Tokens'\nimport { useTradeExactIn, useTradeExactOut } from 'hooks/Trades'\nimport useParsedQueryString from 'hooks/useParsedQueryString'\nimport { useTranslation } from 'contexts/Localization'\nimport { isAddress } from 'utils'\nimport { computeSlippageAdjustedAmounts } from 'utils/prices'\nimport { AppDispatch, AppState } from '../index'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\nimport { SwapState } from './reducer'\nimport { useUserSlippageTolerance } from '../user/hooks'\n\nexport function useSwapState(): AppState['swap'] {\n  return useSelector<AppState, AppState['swap']>((state) => state.swap)\n}\n\nexport function useSwapActionHandlers(): {\n  onCurrencySelection: (field: Field, currency: Currency) => void\n  onSwitchTokens: () => void\n  onUserInput: (field: Field, typedValue: string) => void\n  onChangeRecipient: (recipient: string | null) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n  const onCurrencySelection = useCallback(\n    (field: Field, currency: Currency) => {\n      dispatch(\n        selectCurrency({\n          field,\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'HO' : '',\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  const onSwitchTokens = useCallback(() => {\n    dispatch(switchCurrencies())\n  }, [dispatch])\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch],\n  )\n\n  const onChangeRecipient = useCallback(\n    (recipient: string | null) => {\n      dispatch(setRecipient({ recipient }))\n    },\n    [dispatch],\n  )\n\n  return {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient,\n  }\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n    if (typedValueParsed !== '0') {\n      return currency instanceof Token\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\n  '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f', // v2 factory\n  '0xf164fC0Ec4E93095b804a4795bBe1e041497b92a', // v2 router 01\n  '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D', // v2 router 02\n]\n\n/**\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\n * @param trade to check for the given address\n * @param checksummedAddress address to check in the pairs and tokens\n */\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\n  return (\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\n  )\n}\n\n// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo(): {\n  currencies: { [field in Field]?: Currency }\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmount: CurrencyAmount | undefined\n  v2Trade: Trade | undefined\n  inputError?: string\n} {\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const {\n    independentField,\n    typedValue,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n    recipient,\n  } = useSwapState()\n\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n  const recipientLookup = useENS(recipient ?? undefined)\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\n\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\n    inputCurrency ?? undefined,\n    outputCurrency ?? undefined,\n  ])\n\n  const isExactIn: boolean = independentField === Field.INPUT\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\n\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\n\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\n\n  const currencyBalances = {\n    [Field.INPUT]: relevantTokenBalances[0],\n    [Field.OUTPUT]: relevantTokenBalances[1],\n  }\n\n  const currencies: { [field in Field]?: Currency } = {\n    [Field.INPUT]: inputCurrency ?? undefined,\n    [Field.OUTPUT]: outputCurrency ?? undefined,\n  }\n\n  let inputError: string | undefined\n  if (!account) {\n    inputError = t('Connect Wallet')\n  }\n\n  if (!parsedAmount) {\n    inputError = inputError ?? t('Enter an amount')\n  }\n\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n    inputError = inputError ?? t('Select a token')\n  }\n\n  const formattedTo = isAddress(to)\n  if (!to || !formattedTo) {\n    inputError = inputError ?? t('Enter a recipient')\n  } else if (\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\n  ) {\n    inputError = inputError ?? t('Invalid recipient')\n  }\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\n\n  // compare input balance to max input based on version\n  const [balanceIn, amountIn] = [\n    currencyBalances[Field.INPUT],\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\n  ]\n\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n    inputError = t('Insufficient %symbol% balance', { symbol: amountIn.currency.symbol })\n  }\n\n  return {\n    currencies,\n    currencyBalances,\n    parsedAmount,\n    v2Trade: v2Trade ?? undefined,\n    inputError,\n  }\n}\n\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\n  if (typeof urlParam === 'string') {\n    const valid = isAddress(urlParam)\n    if (valid) return valid\n    if (urlParam.toUpperCase() === 'HO') return 'HO'\n    if (valid === false) return 'HO'\n  }\n  return 'HO' ?? ''\n}\n\nfunction parseTokenAmountURLParameter(urlParam: any): string {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\n}\n\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\n}\n\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nfunction validatedRecipient(recipient: any): string | null {\n  if (typeof recipient !== 'string') return null\n  const address = isAddress(recipient)\n  if (address) return address\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\n  if (ADDRESS_REGEX.test(recipient)) return recipient\n  return null\n}\n\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency)\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency)\n  if (inputCurrency === outputCurrency) {\n    if (typeof parsedQs.outputCurrency === 'string') {\n      inputCurrency = ''\n    } else {\n      outputCurrency = ''\n    }\n  }\n\n  const recipient = validatedRecipient(parsedQs.recipient)\n\n  return {\n    [Field.INPUT]: {\n      currencyId: inputCurrency,\n    },\n    [Field.OUTPUT]: {\n      currencyId: outputCurrency,\n    },\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    recipient,\n  }\n}\n\n// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch():\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\n  | undefined {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const parsedQs = useParsedQueryString()\n  const [result, setResult] = useState<\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\n  >()\n\n  useEffect(() => {\n    if (!chainId) return\n    const parsed = queryParametersToSwapState(parsedQs)\n\n    dispatch(\n      replaceSwapState({\n        typedValue: parsed.typedValue,\n        field: parsed.independentField,\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\n        recipient: null,\n      }),\n    )\n\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, chainId])\n\n  return result\n}\n","import { parse, ParsedQs } from 'qs'\nimport { useMemo } from 'react'\nimport { useLocation } from 'react-router-dom'\n\nexport default function useParsedQueryString(): ParsedQs {\n  const { search } = useLocation()\n  return useMemo(\n    () => (search && search.length > 1 ? parse(search, { parseArrays: false, ignoreQueryPrefix: true }) : {}),\n    [search],\n  )\n}\n","import { createAction } from '@reduxjs/toolkit'\nimport { ChainId } from '@awswap/sdk'\n\nexport interface SerializableTransactionReceipt {\n  to: string\n  from: string\n  contractAddress: string\n  transactionIndex: number\n  blockHash: string\n  transactionHash: string\n  blockNumber: number\n  status?: number\n}\n\nexport const addTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  from: string\n  approval?: { tokenAddress: string; spender: string }\n  claim?: { recipient: string }\n  summary?: string\n}>('transactions/addTransaction')\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\nexport const finalizeTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  receipt: SerializableTransactionReceipt\n}>('transactions/finalizeTransaction')\nexport const checkedTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  blockNumber: number\n}>('transactions/checkedTransaction')\n","import { TransactionResponse } from '@ethersproject/providers'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch, AppState } from '../index'\nimport { addTransaction } from './actions'\nimport { TransactionDetails } from './reducer'\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: {\n    summary?: string\n    approval?: { tokenAddress: string; spender: string }\n    claim?: { recipient: string }\n  },\n) => void {\n  const { chainId, account } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      {\n        summary,\n        approval,\n        claim,\n      }: { summary?: string; claim?: { recipient: string }; approval?: { tokenAddress: string; spender: string } } = {},\n    ) => {\n      if (!account) return\n      if (!chainId) return\n\n      const { hash } = response\n      if (!hash) {\n        throw Error('No transaction hash found.')\n      }\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }))\n    },\n    [dispatch, chainId, account],\n  )\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\n  const { chainId } = useActiveWeb3React()\n\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  return chainId ? state[chainId] ?? {} : {}\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions()\n\n  if (!transactionHash || !transactions[transactionHash]) return false\n\n  return !transactions[transactionHash].receipt\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\n  const allTransactions = useAllTransactions()\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash]\n        if (!tx) return false\n        if (tx.receipt) {\n          return false\n        }\n        const { approval } = tx\n        if (!approval) return false\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\n      }),\n    [allTransactions, spender, tokenAddress],\n  )\n}\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst priceHelperLps: FarmConfig[] = [\n  /**\n   * These LPs are just used to help with price calculation for MasterChef LPs (farms.ts).\n   * This list is added to the MasterChefLps and passed to fetchFarm. The calls to get contract information about the token/quoteToken in the LP are still made.\n   * The absense of a PID means the masterchef contract calls are skipped for this farm.\n   * Prices are then fetched for all farms (masterchef + priceHelperLps).\n   * Before storing to redux, farms without a PID are filtered out.\n   */\n  // {\n  //   pid: null,\n  //   lpSymbol: 'QSD-BNB LP',\n  //   lpAddresses: {\n  //     12830: '',\n  //   },\n  //   token: tokens.qsd,\n  //   quoteToken: tokens.wbnb,\n  // },\n]\n\nexport default priceHelperLps\n","import BigNumber from 'bignumber.js'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport erc20 from 'config/abi/erc20.json'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\nimport multicall from 'utils/multicall'\nimport { Farm, SerializedBigNumber } from '../types'\n\ntype PublicFarmData = {\n  tokenAmountMc: SerializedBigNumber\n  quoteTokenAmountMc: SerializedBigNumber\n  tokenAmountTotal: SerializedBigNumber\n  quoteTokenAmountTotal: SerializedBigNumber\n  lpTotalInQuoteToken: SerializedBigNumber\n  lpTotalSupply: SerializedBigNumber\n  tokenPriceVsQuote: SerializedBigNumber\n  lastWithdrawBlockNumber: SerializedBigNumber\n  rewardBeginBlockNumber: SerializedBigNumber\n  rewardEndBlockNumber: SerializedBigNumber\n  rewardPerBlock: SerializedBigNumber\n}\n\nconst fetchFarm = async (farm: Farm): Promise<PublicFarmData> => {\n  const { pid, lpAddresses, token, quoteToken } = farm\n  const lpAddress = getAddress(lpAddresses)\n  const calls = [\n    // Balance of token in the LP contract\n    {\n      address: getAddress(token.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of quote token on LP contract\n    {\n      address: getAddress(quoteToken.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of LP tokens in the master chef contract\n    {\n      address: lpAddress,\n      name: 'balanceOf',\n      params: [getMasterChefAddress()],\n    },\n    // Total supply of LP tokens\n    {\n      address: lpAddress,\n      name: 'totalSupply',\n    },\n    // Token decimals\n    {\n      address: getAddress(token.address),\n      name: 'decimals',\n    },\n    // Quote token decimals\n    {\n      address: getAddress(quoteToken.address),\n      name: 'decimals',\n    },\n  ]\n\n  const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\n    await multicall(erc20, calls)\n\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\n  const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n  // Raw amount of token in the LP, including those not staked\n  const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\n  const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\n\n  // Amount of token in the LP that are staked in the MC (i.e amount of token * lp ratio)\n  const tokenAmountMc = tokenAmountTotal.times(lpTokenRatio)\n  const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\n\n  // Total staked in LP, in quote token value\n  const lpTotalInQuoteToken = quoteTokenAmountMc.times(new BigNumber(2))\n\n  // Only make masterchef calls if farm has pid\n  const [info] = await multicall(masterchefABI, [\n    {\n      address: getMasterChefAddress(),\n      name: 'poolInfo',\n      params: [pid],\n    },\n  ])\n\n  const ret = {\n    tokenAmountMc: tokenAmountMc.toJSON(),\n    quoteTokenAmountMc: quoteTokenAmountMc.toJSON(),\n    tokenAmountTotal: tokenAmountTotal.toJSON(),\n    quoteTokenAmountTotal: quoteTokenAmountTotal.toJSON(),\n    lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\n    lastWithdrawBlockNumber: (info.lastWithdrawBlock as BigNumber).toString(),\n    rewardEndBlockNumber: (info.endBlockNumber as BigNumber).toString(),\n    // rewardBeginBlockNumber: info.beginBlockNumber.toJSON(),\n    rewardBeginBlockNumber: new BigNumber(0).toJSON(),\n    rewardPerBlock: (info.rewardPerBlock as BigNumber).toString(),\n  }\n\n  return ret\n}\n\nconst fetchHOSwapFarm = async (farm: Farm): Promise<PublicFarmData> => {\n  const { pid, lpAddresses, token, quoteToken } = farm\n  const lpAddress = getAddress(lpAddresses)\n  const calls = [\n    // Balance of token in the LP contract\n    {\n      address: getAddress(token.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of quote token on LP contract\n    {\n      address: getAddress(quoteToken.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of LP tokens in the master chef contract\n    {\n      address: lpAddress,\n      name: 'balanceOf',\n      params: ['0x9A37CB6A5Ec8508018e76a593eB4eAec17E1a8f9'],\n    },\n    // Total supply of LP tokens\n    {\n      address: lpAddress,\n      name: 'totalSupply',\n    },\n    // Token decimals\n    {\n      address: getAddress(token.address),\n      name: 'decimals',\n    },\n    // Quote token decimals\n    {\n      address: getAddress(quoteToken.address),\n      name: 'decimals',\n    },\n  ]\n\n  const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\n    await multicall(erc20, calls)\n\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\n  const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n  // Raw amount of token in the LP, including those not staked\n  const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\n  const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\n\n  // Amount of token in the LP that are staked in the MC (i.e amount of token * lp ratio)\n  const tokenAmountMc = tokenAmountTotal.times(lpTokenRatio)\n  const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\n\n  // Total staked in LP, in quote token value\n  const lpTotalInQuoteToken = quoteTokenAmountMc.times(new BigNumber(2))\n\n  // Only make masterchef calls if farm has pid\n  const [info] = await multicall(masterchefABI, [\n    {\n      address: getMasterChefAddress(),\n      name: 'poolInfo',\n      params: [pid],\n    },\n  ])\n\n  const ret = {\n    tokenAmountMc: tokenAmountMc.toJSON(),\n    quoteTokenAmountMc: quoteTokenAmountMc.toJSON(),\n    tokenAmountTotal: tokenAmountTotal.toJSON(),\n    quoteTokenAmountTotal: quoteTokenAmountTotal.toJSON(),\n    lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\n    lastWithdrawBlockNumber: (info.lastWithdrawBlock as BigNumber).toString(),\n    rewardEndBlockNumber: (info.endBlockNumber as BigNumber).toString(),\n    // rewardBeginBlockNumber: info.beginBlockNumber.toJSON(),\n    rewardBeginBlockNumber: new BigNumber(0).toJSON(),\n    rewardPerBlock: (info.rewardPerBlock as BigNumber).toString(),\n  }\n\n  return ret\n}\n\nexport default fetchFarm\n","import { Farm } from 'state/types'\nimport fetchPublicFarmData from './fetchPublicFarmData'\n\nconst fetchFarm = async (farm: Farm): Promise<Farm> => {\n  const farmPublicData = await fetchPublicFarmData(farm)\n\n  return { ...farm, ...farmPublicData }\n}\n\nexport default fetchFarm\n","import { FarmConfig } from 'config/constants/types'\nimport fetchFarm from './fetchFarm'\n\nconst fetchFarms = async (farmsToFetch: FarmConfig[]) => {\n  const data = await Promise.all(\n    farmsToFetch.map(async (farmConfig) => {\n      const farm = await fetchFarm(farmConfig)\n      return farm\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import { Farm } from 'state/types'\n\n/**\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\n * @param farms Array of farms\n * @param preferredQuoteTokens Array of preferred quote tokens\n * @returns A preferred farm, if found - or the first element of the farms array\n */\nexport const filterFarmsByQuoteToken = (farms: Farm[], preferredQuoteTokens: string[] = ['USDT']): Farm => {\n  const preferredFarm = farms.find((farm) => {\n    return preferredQuoteTokens.some((quoteToken) => {\n      return farm.quoteToken.symbol === quoteToken\n    })\n  })\n  return preferredFarm || farms[0]\n}\n\nexport default filterFarmsByQuoteToken\n","import BigNumber from 'bignumber.js'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport erc20 from 'config/abi/erc20.json'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\nimport multicall from 'utils/multicall'\nimport { Farm, SerializedBigNumber } from '../types'\n\ntype PublicFarmData = {\n  tokenAmountMc: SerializedBigNumber\n  quoteTokenAmountMc: SerializedBigNumber\n  tokenAmountTotal: SerializedBigNumber\n  quoteTokenAmountTotal: SerializedBigNumber\n  lpTotalInQuoteToken: SerializedBigNumber\n  lpTotalSupply: SerializedBigNumber\n  tokenPriceVsQuote: SerializedBigNumber\n  lastWithdrawBlockNumber: SerializedBigNumber\n  rewardBeginBlockNumber: SerializedBigNumber\n  rewardEndBlockNumber: SerializedBigNumber\n  rewardPerBlock: SerializedBigNumber\n}\n\nconst fetchHOSwapFarm = async (farm: Farm): Promise<PublicFarmData> => {\n  const { pid, lpAddresses, token, quoteToken } = farm\n  const lpAddress = getAddress(lpAddresses)\n  const calls = [\n    // Balance of token in the LP contract\n    {\n      address: getAddress(token.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of quote token on LP contract\n    {\n      address: getAddress(quoteToken.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of LP tokens in the master chef contract\n    {\n      address: lpAddress,\n      name: 'balanceOf',\n      params: ['0x9A37CB6A5Ec8508018e76a593eB4eAec17E1a8f9'],\n    },\n    // Total supply of LP tokens\n    {\n      address: lpAddress,\n      name: 'totalSupply',\n    },\n    // Token decimals\n    {\n      address: getAddress(token.address),\n      name: 'decimals',\n    },\n    // Quote token decimals\n    {\n      address: getAddress(quoteToken.address),\n      name: 'decimals',\n    },\n  ]\n\n  const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\n    await multicall(erc20, calls)\n\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\n  const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n  // Raw amount of token in the LP, including those not staked\n  const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\n  const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\n\n  // Amount of token in the LP that are staked in the MC (i.e amount of token * lp ratio)\n  const tokenAmountMc = tokenAmountTotal.times(lpTokenRatio)\n  const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\n\n  // Total staked in LP, in quote token value\n  const lpTotalInQuoteToken = quoteTokenAmountMc.times(new BigNumber(2))\n\n  // Only make masterchef calls if farm has pid\n  const [info] = await multicall(masterchefABI, [\n    {\n      address: getMasterChefAddress(),\n      name: 'poolInfo',\n      params: [pid],\n    },\n  ])\n\n  const ret = {\n    tokenAmountMc: tokenAmountMc.toJSON(),\n    quoteTokenAmountMc: quoteTokenAmountMc.toJSON(),\n    tokenAmountTotal: tokenAmountTotal.toJSON(),\n    quoteTokenAmountTotal: quoteTokenAmountTotal.toJSON(),\n    lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\n    lastWithdrawBlockNumber: (info.lastWithdrawBlock as BigNumber).toString(),\n    rewardEndBlockNumber: (info.endBlockNumber as BigNumber).toString(),\n    // rewardBeginBlockNumber: info.beginBlockNumber.toJSON(),\n    rewardBeginBlockNumber: new BigNumber(0).toJSON(),\n    rewardPerBlock: (info.rewardPerBlock as BigNumber).toString(),\n  }\n\n  return ret\n}\n\nexport default fetchHOSwapFarm\n","import BigNumber from 'bignumber.js'\nimport { BIG_ONE, BIG_ZERO } from 'utils/bigNumber'\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\nimport { Farm } from 'state/types'\nimport tokens from 'config/constants/tokens'\nimport fetchHOSwapFarm from './fetchPublicFarmDataFromHOSwap'\n\nconst getFarmFromTokenSymbol = (farms: Farm[], tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\n  return filteredFarm\n}\n\nconst getFarmBaseTokenPrice = (farm: Farm, quoteTokenFarm: Farm): BigNumber => {\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\n\n  if (farm.quoteToken.symbol === 'USDT') {\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  // We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'USDT') {\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  // Catch in case token does not have immediate or once-removed BUSD/wBNB quoteToken\n  return BIG_ZERO\n}\n\nconst getFarmQuoteTokenPrice = (farm: Farm, quoteTokenFarm: Farm): BigNumber => {\n  if (farm.quoteToken.symbol === 'USDT') {\n    return BIG_ONE\n  }\n\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'USDT') {\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  return BIG_ZERO\n}\n\nconst fetchFarmsPrices = async (farms) => {\n  let hoSwapFarm0 = {\n    pid: 0,\n    lpSymbol: 'HO/USDT LPToken',\n    lpAddresses: {\n      1280: '0x6753C81d76B2Ce387FdC0Aa36e286ec8Be034E2b',\n    },\n    token: tokens.who_hoswap,\n    quoteToken: tokens.usdt,\n    earningToken: tokens.hos,\n  }\n\n  hoSwapFarm0 = await fetchHOSwapFarm(hoSwapFarm0).then((data) => {\n    return { ...hoSwapFarm0, ...data }\n  })\n\n  const farmsWithPrices = farms.map((farm) => {\n    let quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\n\n    if (!quoteTokenFarm && farm.quoteToken.symbol === 'WHO') {\n      quoteTokenFarm = hoSwapFarm0\n    }\n\n    const baseTokenPrice = getFarmBaseTokenPrice(farm, quoteTokenFarm)\n    const quoteTokenPrice = getFarmQuoteTokenPrice(farm, quoteTokenFarm)\n\n    const token = { ...farm.token, busdPrice: baseTokenPrice.toJSON() }\n    const quoteToken = { ...farm.quoteToken, busdPrice: quoteTokenPrice.toJSON() }\n\n    return { ...farm, token, quoteToken }\n  })\n\n  return farmsWithPrices\n}\n\nexport default fetchFarmsPrices\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { FarmConfig } from 'config/constants/types'\n\nexport const fetchFarmUserAllowances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'pendingCake',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport isArchivedPid from 'utils/farmHelpers'\nimport priceHelperLpsConfig from 'config/constants/priceHelperLps'\nimport fetchFarms from './fetchFarms'\nimport fetchFarmsPrices from './fetchFarmsPrices'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst noAccountFarmConfig = farmsConfig.map((farm) => ({\n  ...farm,\n  userData: {\n    allowance: '0',\n    tokenBalance: '0',\n    stakedBalance: '0',\n    earnings: '0',\n  },\n}))\n\nconst initialState: FarmsState = { data: noAccountFarmConfig, loadArchivedFarmsData: false, userDataLoaded: false }\n\nexport const nonArchivedFarms = farmsConfig.filter(({ pid }) => !isArchivedPid(pid))\n\n// Async thunks\nexport const fetchFarmsPublicDataAsync = createAsyncThunk<Farm[], number[]>(\n  'farms/fetchFarmsPublicDataAsync',\n  async (pids) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n\n    // Add price helper farms\n    const farmsWithPriceHelpers = farmsToFetch.concat(priceHelperLpsConfig)\n\n    const farms = await fetchFarms(farmsWithPriceHelpers)\n    const farmsWithPrices = await fetchFarmsPrices(farms)\n\n    // Filter out price helper LP config farms\n    const farmsWithoutHelperLps = farmsWithPrices.filter((farm: Farm) => {\n      return farm.pid || farm.pid === 0\n    })\n\n    return farmsWithoutHelperLps\n  },\n)\n\ninterface FarmUserDataResponse {\n  pid: number\n  allowance: string\n  tokenBalance: string\n  stakedBalance: string\n  earnings: string\n}\n\nexport const fetchFarmUserDataAsync = createAsyncThunk<FarmUserDataResponse[], { account: string; pids: number[] }>(\n  'farms/fetchFarmUserDataAsync',\n  async ({ account, pids }) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n    const userFarmAllowances = await fetchFarmUserAllowances(account, farmsToFetch)\n    const userFarmTokenBalances = await fetchFarmUserTokenBalances(account, farmsToFetch)\n    const userStakedBalances = await fetchFarmUserStakedBalances(account, farmsToFetch)\n    const userFarmEarnings = await fetchFarmUserEarnings(account, farmsToFetch)\n\n    return userFarmAllowances.map((farmAllowance, index) => {\n      return {\n        pid: farmsToFetch[index].pid,\n        allowance: userFarmAllowances[index],\n        tokenBalance: userFarmTokenBalances[index],\n        stakedBalance: userStakedBalances[index],\n        earnings: userFarmEarnings[index],\n      }\n    })\n  },\n)\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setLoadArchivedFarmsData: (state, action) => {\n      const loadArchivedFarmsData = action.payload\n      state.loadArchivedFarmsData = loadArchivedFarmsData\n    },\n  },\n  extraReducers: (builder) => {\n    // Update farms with live data\n    builder.addCase(fetchFarmsPublicDataAsync.fulfilled, (state, action) => {\n      state.data = state.data.map((farm) => {\n        const liveFarmData = action.payload.find((farmData) => farmData.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    })\n\n    // Update farms with user data\n    builder.addCase(fetchFarmUserDataAsync.fulfilled, (state, action) => {\n      action.payload.forEach((userDataEl) => {\n        const { pid } = userDataEl\n        const index = state.data.findIndex((farm) => farm.pid === pid)\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n      state.userDataLoaded = true\n    })\n  },\n})\n\n// Actions\nexport const { setLoadArchivedFarmsData } = farmsSlice.actions\n\nexport default farmsSlice.reducer\n","import { TokenAmount, Pair, Currency } from '@awswap/sdk'\nimport { useMemo } from 'react'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport { Interface } from '@ethersproject/abi'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\n\nexport enum PairState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\n  const { chainId } = useActiveWeb3React()\n\n  const tokens = useMemo(\n    () =>\n      currencies.map(([currencyA, currencyB]) => [\n        wrappedCurrency(currencyA, chainId),\n        wrappedCurrency(currencyB, chainId),\n      ]),\n    [chainId, currencies],\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\n      }),\n    [tokens],\n  )\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result\n      const tokenA = tokens[i][0]\n      const tokenB = tokens[i][1]\n\n      if (loading) return [PairState.LOADING, null]\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n      if (!reserves) return [PairState.NOT_EXISTS, null]\n      const { reserve0, reserve1 } = reserves\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [\n        PairState.EXISTS,\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\n      ]\n    })\n  }, [results, tokens])\n}\n\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\n  return usePairs([[tokenA, tokenB]])[0]\n}\n","import { Profile } from 'state/types'\n\nexport type ProfileResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: string\n  5: boolean\n}\n\nexport const transformProfileResponse = (profileResponse: ProfileResponse): Partial<Profile> => {\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: nftAddress, 4: tokenId, 5: isActive } = profileResponse\n\n  return {\n    userId: Number(userId),\n    points: Number(numberPoints),\n    teamId: Number(teamId),\n    tokenId: Number(tokenId),\n    nftAddress,\n    isActive,\n  }\n}\n","import Cookies from 'js-cookie'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Nft } from 'config/constants/types'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { Profile } from 'state/types'\nimport { getTeam } from 'state/teams/helpers'\nimport { transformProfileResponse } from './helpers'\n\nconst profileContract = getProfileContract()\nconst profileApi = process.env.REACT_APP_API_PROFILE\n\nexport interface GetProfileResponse {\n  hasRegistered: boolean\n  profile?: Profile\n}\n\nconst getUsername = async (address: string): Promise<string> => {\n  try {\n    const response = await fetch(`${profileApi}/api/users/${address}`)\n\n    if (!response.ok) {\n      return ''\n    }\n\n    const { username = '' } = await response.json()\n\n    return username\n  } catch (error) {\n    return ''\n  }\n}\n\nconst getProfile = async (address: string): Promise<GetProfileResponse> => {\n  try {\n    const hasRegistered = (await profileContract.hasRegistered(address)) as boolean\n\n    if (!hasRegistered) {\n      return { hasRegistered, profile: null }\n    }\n\n    const profileResponse = await profileContract.getUserProfile(address)\n    const { userId, points, teamId, tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\n    const team = await getTeam(teamId)\n    const username = await getUsername(address)\n\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\n    // so only fetch the nft data if active\n    let nft: Nft\n    if (isActive) {\n      nft = await getNftByTokenId(nftAddress, tokenId)\n\n      // Save the preview image in a cookie so it can be used on the exchange\n      Cookies.set(\n        `profile_${address}`,\n        {\n          username,\n          avatar: `https://pancakeswap.finance/images/nfts/${nft?.images.sm}`,\n        },\n        { domain: 'pancakeswap.finance', secure: true, expires: 30 },\n      )\n    }\n\n    const profile = {\n      userId,\n      points,\n      teamId,\n      tokenId,\n      username,\n      nftAddress,\n      isActive,\n      nft,\n      team,\n    } as Profile\n\n    return { hasRegistered, profile }\n  } catch (error) {\n    return null\n  }\n}\n\nexport default getProfile\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ProfileState } from 'state/types'\nimport type { AppDispatch } from 'state'\nimport getProfile, { GetProfileResponse } from './getProfile'\n\nconst initialState: ProfileState = {\n  isInitialized: false,\n  isLoading: true,\n  hasRegistered: false,\n  data: null,\n}\n\nexport const profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    profileFetchStart: (state) => {\n      state.isLoading = true\n    },\n    profileFetchSucceeded: (_state, action: PayloadAction<GetProfileResponse>) => {\n      const { profile, hasRegistered } = action.payload\n\n      return {\n        isInitialized: true,\n        isLoading: false,\n        hasRegistered,\n        data: profile,\n      }\n    },\n    profileFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    profileClear: () => ({\n      ...initialState,\n      isLoading: false,\n    }),\n    addPoints: (state, action: PayloadAction<number>) => {\n      state.data.points += action.payload\n    },\n  },\n})\n\n// Actions\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, profileClear, addPoints } =\n  profileSlice.actions\n\n// Thunks\n// TODO: this should be an AsyncThunk\nexport const fetchProfile = (address: string) => async (dispatch: AppDispatch) => {\n  try {\n    dispatch(profileFetchStart())\n    const response = await getProfile(address)\n    dispatch(profileFetchSucceeded(response))\n  } catch (error) {\n    dispatch(profileFetchFailed())\n  }\n}\n\nexport default profileSlice.reducer\n","import React, { createContext, useCallback, useEffect, useState } from 'react'\nimport { Language } from '@pancakeswap/uikit'\nimport { EN, languages } from 'config/localization/languages'\nimport translations from 'config/localization/translations.json'\nimport { ContextApi, ContextData, ProviderState } from './types'\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\n\nconst initialState: ProviderState = {\n  isFetching: true,\n  currentLanguage: EN,\n}\n\n// Export the translations directly\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\nlanguageMap.set(EN.locale, translations)\n\nexport const LanguageContext = createContext<ContextApi>(undefined)\n\nexport const LanguageProvider: React.FC = ({ children }) => {\n  const [state, setState] = useState<ProviderState>(() => {\n    const codeFromStorage = getLanguageCodeFromLS()\n\n    return {\n      ...initialState,\n      currentLanguage: languages[codeFromStorage],\n    }\n  })\n  const { currentLanguage } = state\n\n  useEffect(() => {\n    const fetchInitialLocales = async () => {\n      const codeFromStorage = getLanguageCodeFromLS()\n\n      if (codeFromStorage !== EN.locale) {\n        const enLocale = languageMap.get(EN.locale)\n        const currentLocale = await fetchLocale(codeFromStorage)\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\n      }\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n      }))\n    }\n\n    fetchInitialLocales()\n  }, [setState])\n\n  const setLanguage = async (language: Language) => {\n    if (!languageMap.has(language.locale)) {\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: true,\n      }))\n\n      const locale = await fetchLocale(language.locale)\n      const enLocale = languageMap.get(EN.locale)\n\n      // Merge the EN locale to ensure that any locale fetched has all the keys\n      languageMap.set(language.locale, { ...enLocale, ...locale })\n      localStorage.setItem(LS_KEY, language.locale)\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    } else {\n      localStorage.setItem(LS_KEY, language.locale)\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    }\n  }\n\n  const translate = useCallback(\n    (key: string, data?: ContextData) => {\n      const translationSet = languageMap.has(currentLanguage.locale)\n        ? languageMap.get(currentLanguage.locale)\n        : languageMap.get(EN.locale)\n      const translatedText = translationSet[key] || key\n\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\n\n      if (includesVariable && data) {\n        let interpolatedText = translatedText\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey] && data[dataKey].toString())\n        })\n\n        return interpolatedText\n      }\n\n      return translatedText\n    },\n    [currentLanguage],\n  )\n\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\n}\n","import { useContext } from 'react'\nimport { LanguageContext } from './Provider'\n\nconst useTranslation = () => {\n  const languageContext = useContext(LanguageContext)\n\n  if (languageContext === undefined) {\n    throw new Error('Language context is undefined')\n  }\n\n  return languageContext\n}\n\nexport default useTranslation\n","const getTokenLogoURL = (address: string) => `/images/tokens/${address}.png`\n\nexport default getTokenLogoURL\n","import { Currency, ETHER, Token } from '@awswap/sdk'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport { WrappedTokenInfo } from '../../state/lists/hooks'\nimport getTokenLogoURL from '../../utils/getTokenLogoURL'\nimport Logo from './Logo'\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style,\n}: {\n  currency?: Currency\n  size?: string\n  style?: React.CSSProperties\n}) {\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\n\n  const srcs: string[] = useMemo(() => {\n    if (currency === ETHER) return []\n\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, getTokenLogoURL(currency.address)]\n      }\n      return [getTokenLogoURL(currency.address)]\n    }\n    return []\n  }, [currency, uriLocations])\n\n  if (currency === ETHER) {\n    return (\n      <StyledLogo\n        size={size}\n        srcs={['/images/tokens/0x34024eE6941343924e8720F5F4B8f22B0274D993.png']}\n        alt={`${currency?.symbol ?? 'token'} logo`}\n        style={style}\n      />\n    )\n  }\n\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n}\n","import { useCallback } from 'react'\nimport ethers, { Contract, CallOverrides } from 'ethers'\nimport { useGasPrice } from 'state/user/hooks'\nimport { get } from 'lodash'\n\n/**\n * Perform a contract call with a gas price returned from useGasPrice\n * @param contract Used to perform the call\n * @param methodName The name of the method called\n * @param methodArgs An array of arguments to pass to the method\n * @param overrides An overrides object to pass to the method. gasPrice passed in here will take priority over the price returned by useGasPrice\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport function useCallWithGasPrice() {\n  const gasPrice = useGasPrice()\n\n  const callWithGasPrice = useCallback(\n    async (\n      contract: Contract,\n      methodName: string,\n      methodArgs: any[] = [],\n      overrides: CallOverrides = null,\n    ): Promise<ethers.providers.TransactionResponse> => {\n      const contractMethod = get(contract, methodName)\n      const hasManualGasPriceOverride = overrides?.gasPrice\n\n      const tx = await contractMethod(\n        ...methodArgs,\n        hasManualGasPriceOverride ? { ...overrides } : { ...overrides, gasPrice },\n      )\n\n      return tx\n    },\n    [gasPrice],\n  )\n\n  return { callWithGasPrice }\n}\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBep20Contract, getCakeContract } from 'utils/contractHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from './useRefresh'\nimport useLastUpdated from './useLastUpdated'\n\ntype UseTokenBalanceState = {\n  balance: BigNumber\n  fetchStatus: FetchStatus\n}\n\nexport enum FetchStatus {\n  NOT_FETCHED = 'not-fetched',\n  SUCCESS = 'success',\n  FAILED = 'failed',\n}\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const { NOT_FETCHED, SUCCESS, FAILED } = FetchStatus\n  const [balanceState, setBalanceState] = useState<UseTokenBalanceState>({\n    balance: BIG_ZERO,\n    fetchStatus: NOT_FETCHED,\n  })\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      try {\n        const res = await contract.balanceOf(account)\n        setBalanceState({ balance: new BigNumber(res.toString()), fetchStatus: SUCCESS })\n      } catch (e) {\n        console.error(e)\n        setBalanceState((prev) => ({\n          ...prev,\n          fetchStatus: FAILED,\n        }))\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, fastRefresh, SUCCESS, FAILED])\n\n  return balanceState\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getCakeContract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x000000000000000000000000000000000000dEaD')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport const useGetBnbBalance = () => {\n  const [fetchStatus, setFetchStatus] = useState(FetchStatus.NOT_FETCHED)\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { account } = useWeb3React()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      try {\n        const walletBalance = await simpleRpcProvider.getBalance(account)\n        setBalance(new BigNumber(walletBalance.toString()))\n        setFetchStatus(FetchStatus.SUCCESS)\n      } catch {\n        setFetchStatus(FetchStatus.FAILED)\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, lastUpdated, setBalance, setFetchStatus])\n\n  return { balance, fetchStatus, refresh: setLastUpdated }\n}\n\nexport default useTokenBalance\n","/**\n * Returns true if the string value is zero in hex\n * @param hexNumberString\n */\nexport default function isZero(hexNumberString: string) {\n  return /^0x0*$/.test(hexNumberString)\n}\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryRoundGraphEntity, LotteryResponse } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries } from './helpers'\n\nexport const MAX_LOTTERIES_REQUEST_SIZE = 100\n\n/* eslint-disable camelcase */\ntype LotteriesWhere = { id_in?: string[] }\n\nconst applyNodeDataToLotteriesGraphResponse = (\n  nodeData: LotteryResponse[],\n  graphResponse: LotteryRoundGraphEntity[],\n): LotteryRoundGraphEntity[] => {\n  //   If no graph response - return node data\n  if (graphResponse.length === 0) {\n    return nodeData.map((nodeRound) => {\n      return {\n        endTime: nodeRound.endTime,\n        finalNumber: nodeRound.finalNumber.toString(),\n        startTime: nodeRound.startTime,\n        status: nodeRound.status,\n        id: nodeRound.lotteryId.toString(),\n        ticketPrice: nodeRound.priceTicketInCake,\n        totalTickets: '',\n        totalUsers: '',\n        winningTickets: '',\n      }\n    })\n  }\n\n  //   Else if there is a graph response - merge with node data where node data is more reliable\n  const mergedResponse = graphResponse.map((graphRound, index) => {\n    const nodeRound = nodeData[index]\n    // if there is node data for this index, overwrite graph data. Otherwise - return graph data.\n    if (nodeRound) {\n      // if isLoading === true, there has been a node error - return graphRound\n      if (!nodeRound.isLoading) {\n        return {\n          endTime: nodeRound.endTime,\n          finalNumber: nodeRound.finalNumber.toString(),\n          startTime: nodeRound.startTime,\n          status: nodeRound.status,\n          id: graphRound.id,\n          ticketPrice: graphRound.ticketPrice,\n          totalTickets: graphRound.totalTickets,\n          totalUsers: graphRound.totalUsers,\n          winningTickets: graphRound.winningTickets,\n        }\n      }\n      return graphRound\n    }\n    return graphRound\n  })\n  return mergedResponse\n}\n\nexport const getGraphLotteries = async (\n  first = MAX_LOTTERIES_REQUEST_SIZE,\n  skip = 0,\n  where: LotteriesWhere = {},\n): Promise<LotteryRoundGraphEntity[]> => {\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getLotteries($first: Int!, $skip: Int!, $where: Lottery_filter) {\n          lotteries(first: $first, skip: $skip, where: $where, orderDirection: desc, orderBy: block) {\n            id\n            totalUsers\n            totalTickets\n            winningTickets\n            status\n            finalNumber\n            startTime\n            endTime\n            ticketPrice\n          }\n        }\n      `,\n      { skip, first, where },\n    )\n    return response.lotteries\n  } catch (error) {\n    console.error(error)\n    return []\n  }\n}\n\nconst getLotteriesData = async (currentLotteryId: string): Promise<LotteryRoundGraphEntity[]> => {\n  const idsForNodesCall = getRoundIdsArray(currentLotteryId)\n  const nodeData = await fetchMultipleLotteries(idsForNodesCall)\n  const graphResponse = await getGraphLotteries()\n  const mergedData = applyNodeDataToLotteriesGraphResponse(nodeData, graphResponse)\n  return mergedData\n}\n\nexport default getLotteriesData\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { LotteryTicket, LotteryStatus } from 'config/constants/types'\nimport { LotteryState, LotteryRoundGraphEntity, LotteryUserGraphEntity, LotteryResponse } from 'state/types'\nimport { fetchLottery, fetchCurrentLotteryIdAndMaxBuy } from './helpers'\nimport getLotteriesData from './getLotteriesData'\nimport getUserLotteryData from './getUserLotteryData'\n\ninterface PublicLotteryData {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n}\n\nconst initialState: LotteryState = {\n  currentLotteryId: null,\n  isTransitioning: false,\n  maxNumberTicketsPerBuyOrClaim: null,\n  currentRound: {\n    isLoading: true,\n    lotteryId: null,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n    userTickets: {\n      isLoading: true,\n      tickets: [],\n    },\n  },\n  lotteriesData: null,\n  userLotteryData: { account: '', totalCake: '', totalTickets: '', rounds: [] },\n}\n\nexport const fetchCurrentLottery = createAsyncThunk<LotteryResponse, { currentLotteryId: string }>(\n  'lottery/fetchCurrentLottery',\n  async ({ currentLotteryId }) => {\n    const lotteryInfo = await fetchLottery(currentLotteryId)\n    return lotteryInfo\n  },\n)\n\nexport const fetchCurrentLotteryId = createAsyncThunk<PublicLotteryData>('lottery/fetchCurrentLotteryId', async () => {\n  const currentIdAndMaxBuy = await fetchCurrentLotteryIdAndMaxBuy()\n  return currentIdAndMaxBuy\n})\n\nexport const fetchUserTicketsAndLotteries = createAsyncThunk<\n  { userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity },\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserTicketsAndLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteriesRes = await getUserLotteryData(account, currentLotteryId)\n  const userParticipationInCurrentRound = userLotteriesRes.rounds?.find((round) => round.lotteryId === currentLotteryId)\n  const userTickets = userParticipationInCurrentRound?.tickets\n\n  // User has not bought tickets for the current lottery, or there has been an error\n  if (!userTickets || userTickets.length === 0) {\n    return { userTickets: null, userLotteries: userLotteriesRes }\n  }\n\n  return { userTickets, userLotteries: userLotteriesRes }\n})\n\nexport const fetchPublicLotteries = createAsyncThunk<LotteryRoundGraphEntity[], { currentLotteryId: string }>(\n  'lottery/fetchPublicLotteries',\n  async ({ currentLotteryId }) => {\n    const lotteries = await getLotteriesData(currentLotteryId)\n    return lotteries\n  },\n)\n\nexport const fetchUserLotteries = createAsyncThunk<\n  LotteryUserGraphEntity,\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteries = await getUserLotteryData(account, currentLotteryId)\n  return userLotteries\n})\n\nexport const setLotteryIsTransitioning = createAsyncThunk<{ isTransitioning: boolean }, { isTransitioning: boolean }>(\n  `lottery/setIsTransitioning`,\n  async ({ isTransitioning }) => {\n    return { isTransitioning }\n  },\n)\n\nexport const LotterySlice = createSlice({\n  name: 'Lottery',\n  initialState,\n  reducers: {\n    setLotteryPublicData: (state, action) => {\n      state = action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchCurrentLottery.fulfilled, (state, action: PayloadAction<LotteryResponse>) => {\n      state.currentRound = { ...state.currentRound, ...action.payload }\n    })\n    builder.addCase(fetchCurrentLotteryId.fulfilled, (state, action: PayloadAction<PublicLotteryData>) => {\n      state.currentLotteryId = action.payload.currentLotteryId\n      state.maxNumberTicketsPerBuyOrClaim = action.payload.maxNumberTicketsPerBuyOrClaim\n    })\n    builder.addCase(\n      fetchUserTicketsAndLotteries.fulfilled,\n      (state, action: PayloadAction<{ userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity }>) => {\n        state.currentRound.userTickets.isLoading = false\n        state.currentRound.userTickets.tickets = action.payload.userTickets\n        state.userLotteryData = action.payload.userLotteries\n      },\n    )\n    builder.addCase(fetchPublicLotteries.fulfilled, (state, action: PayloadAction<LotteryRoundGraphEntity[]>) => {\n      state.lotteriesData = action.payload\n    })\n    builder.addCase(fetchUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\n      state.userLotteryData = action.payload\n    })\n    builder.addCase(\n      setLotteryIsTransitioning.fulfilled,\n      (state, action: PayloadAction<{ isTransitioning: boolean }>) => {\n        state.isTransitioning = action.payload.isTransitioning\n      },\n    )\n  },\n})\n\n// Actions\nexport const { setLotteryPublicData } = LotterySlice.actions\n\nexport default LotterySlice.reducer\n","import { EN } from 'config/localization/languages'\n\nconst publicUrl = process.env.PUBLIC_URL\n\nexport const LS_KEY = 'pancakeswap_language'\n\nexport const fetchLocale = async (locale) => {\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\n  const data = await response.json()\n  return data\n}\n\nexport const getLanguageCodeFromLS = () => {\n  try {\n    const codeFromStorage = localStorage.getItem(LS_KEY)\n\n    return codeFromStorage || EN.locale\n  } catch {\n    return EN.locale\n  }\n}\n","import { useEffect, useReducer, useCallback } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { getInterestBreakdown, getPrincipalForInterest, getRoi } from 'utils/compoundApyHelpers'\n\n/**\n * This hook is handling all the calculator state and calculations.\n * UI connected to it is merely representation of the data and buttons to trigger actions\n */\n\n// Mapping from the compounding frequency button index to actual componding frequency\n// in number of compounds per day\nconst compoundingIndexToFrequency = {\n  0: 1,\n  1: 0.142857142,\n  2: 0.071428571, // once every 7 days\n  3: 0.033333333, // once every 30 days\n}\n\nconst TOKEN_PRECISION = 10\nconst USD_PRECISION = 2\n\n// Used to track/react which currency user is editing (i.e. USD amount or Token amount)\nexport enum EditingCurrency {\n  TOKEN,\n  USD,\n}\n\n// Calculator works in 2 modes\nexport enum CalculatorMode {\n  ROI_BASED_ON_PRINCIPAL, // User edits principal value and sees what ROI they get\n  PRINCIPAL_BASED_ON_ROI, // User edits ROI value and sees what principal they need to invest to reach it\n}\n\nexport interface RoiCalculatorReducerState {\n  controls: {\n    compounding: boolean // Compounding checkbox state\n    compoundingFrequency: number // Compounding frequency in number of compounds per day\n    activeCompoundingIndex: number // index of active compounding button in ButtonMenu\n    stakingDuration: number // index of active staking duration button in ButtonMenu\n    mode: CalculatorMode\n    editingCurrency: EditingCurrency\n  }\n  data: {\n    principalAsToken: string // Used as value for Inputs\n    principalAsUSD: string // Used as value for Inputs\n    roiUSD: number\n    roiTokens: number\n    roiPercentage: number // ROI expressed in percentage relative to principal\n  }\n}\n\nconst initialState: RoiCalculatorReducerState = {\n  controls: {\n    compounding: true,\n    compoundingFrequency: 1, // how many compoound in a day , e.g. 1 = once a day, 0.071 - once per 2 weeks\n    activeCompoundingIndex: 0, // active compounding selected in\n    stakingDuration: 3,\n    mode: CalculatorMode.ROI_BASED_ON_PRINCIPAL,\n    editingCurrency: EditingCurrency.USD,\n  },\n  data: {\n    principalAsToken: '0.00',\n    principalAsUSD: '',\n    roiUSD: 0,\n    roiTokens: 0,\n    roiPercentage: 0,\n  },\n}\n\nconst roiCalculatorReducer = (\n  state: RoiCalculatorReducerState,\n  action: { type: string; payload?: any },\n): RoiCalculatorReducerState => {\n  switch (action.type) {\n    case 'setStakingDuration': {\n      const controls = { ...state.controls, stakingDuration: action.payload }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'toggleCompounding': {\n      const toggledCompounding = !state.controls.compounding\n      const controls = { ...state.controls, compounding: toggledCompounding }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'setCompoundingFrequency': {\n      const { index, autoCompoundFrequency } = action.payload\n      if (autoCompoundFrequency) {\n        return {\n          ...state,\n          controls: {\n            ...state.controls,\n            compoundingFrequency: autoCompoundFrequency,\n          },\n        }\n      }\n      const compoundingFrequency = compoundingIndexToFrequency[index]\n      const controls = { ...state.controls, compoundingFrequency, activeCompoundingIndex: index }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'setPrincipal': {\n      const { principalAsUSD, principalAsToken } = action.payload\n      const data = { ...state.data, principalAsUSD, principalAsToken }\n      const controls = { ...state.controls, mode: CalculatorMode.ROI_BASED_ON_PRINCIPAL }\n      return {\n        controls,\n        data,\n      }\n    }\n    case 'setPrincipalForTargetRoi': {\n      const { principalAsUSD, principalAsToken, roiPercentage } = action.payload\n      const data = { ...state.data, principalAsUSD, principalAsToken, roiPercentage }\n      return {\n        ...state,\n        data,\n      }\n    }\n    case 'setCalculatorMode': {\n      const mode = action.payload\n      const controls = { ...state.controls, mode }\n      if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI) {\n        const roiUSD = parseFloat(state.data.roiUSD.toFixed(USD_PRECISION))\n        const data = { ...state.data, roiUSD }\n        return { controls, data }\n      }\n      return { ...state, controls }\n    }\n    case 'setRoi': {\n      const data = { ...state.data, ...action.payload }\n      return { ...state, data }\n    }\n    case 'setTargetRoi': {\n      const { roiUSD, roiTokens } = action.payload\n      const data = { ...state.data, roiUSD, roiTokens }\n      const controls = { ...state.controls, mode: CalculatorMode.PRINCIPAL_BASED_ON_ROI }\n      return { controls, data }\n    }\n    case 'toggleEditingCurrency': {\n      const currencyAfterChange =\n        state.controls.editingCurrency === EditingCurrency.USD ? EditingCurrency.TOKEN : EditingCurrency.USD\n      const controls = { ...state.controls, editingCurrency: currencyAfterChange }\n      return { ...state, controls }\n    }\n    default:\n      return state\n  }\n}\n\nconst useRoiCalculatorReducer = (\n  stakingTokenPrice: number,\n  earningTokenPrice: number,\n  apr: number,\n  autoCompoundFrequency: number,\n  performanceFee: number,\n) => {\n  const [state, dispatch] = useReducer(roiCalculatorReducer, initialState)\n  const { principalAsUSD, roiUSD } = state.data\n  const { compounding, compoundingFrequency, stakingDuration, mode } = state.controls\n\n  // If pool is auto-compounding set state's compounding frequency to this pool's auto-compound frequency\n  useEffect(() => {\n    if (autoCompoundFrequency > 0) {\n      dispatch({ type: 'setCompoundingFrequency', payload: { autoCompoundFrequency } })\n    }\n  }, [autoCompoundFrequency])\n\n  // Calculates and sets ROI whenever related values change\n  useEffect(() => {\n    if (mode === CalculatorMode.ROI_BASED_ON_PRINCIPAL) {\n      const principalInUSDAsNumber = parseFloat(principalAsUSD)\n      const compoundFrequency = compounding ? compoundingFrequency : 0\n      const interestBreakdown = getInterestBreakdown({\n        principalInUSD: principalInUSDAsNumber,\n        apr,\n        earningTokenPrice,\n        compoundFrequency,\n        performanceFee,\n      })\n      const hasInterest = !Number.isNaN(interestBreakdown[stakingDuration])\n      const roiTokens = hasInterest ? interestBreakdown[stakingDuration] : 0\n      const roiAsUSD = hasInterest ? roiTokens * earningTokenPrice : 0\n      const roiPercentage = hasInterest\n        ? getRoi({\n            amountEarned: roiAsUSD,\n            amountInvested: principalInUSDAsNumber,\n          })\n        : 0\n      dispatch({ type: 'setRoi', payload: { roiUSD: roiAsUSD, roiTokens, roiPercentage } })\n    }\n  }, [principalAsUSD, apr, stakingDuration, earningTokenPrice, performanceFee, compounding, compoundingFrequency, mode])\n\n  // Calculates and sets principal based on expected ROI value\n  useEffect(() => {\n    if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI) {\n      const principalForExpectedRoi = getPrincipalForInterest(\n        roiUSD,\n        apr,\n        compounding ? compoundingFrequency : 0,\n        performanceFee,\n      )\n      const principalUSD = !Number.isNaN(principalForExpectedRoi[stakingDuration])\n        ? principalForExpectedRoi[stakingDuration]\n        : 0\n      const principalToken = new BigNumber(principalUSD).div(stakingTokenPrice)\n      const roiPercentage = getRoi({\n        amountEarned: roiUSD,\n        amountInvested: principalUSD,\n      })\n      dispatch({\n        type: 'setPrincipalForTargetRoi',\n        payload: {\n          principalAsUSD: principalUSD.toFixed(USD_PRECISION),\n          principalAsToken: principalToken.toFixed(TOKEN_PRECISION),\n          roiPercentage,\n        },\n      })\n    }\n  }, [stakingDuration, apr, compounding, compoundingFrequency, mode, roiUSD, stakingTokenPrice, performanceFee])\n\n  // Handler for compounding frequnecy buttons\n  const setCompoundingFrequency = (index: number) => {\n    dispatch({ type: 'setCompoundingFrequency', payload: { index } })\n  }\n\n  // Handler for principal input when in USD mode\n  const setPrincipalFromUSDValue = (amount: string) => {\n    const principalAsTokenBN = new BigNumber(amount).div(stakingTokenPrice)\n    const principalAsToken = principalAsTokenBN.gt(0) ? principalAsTokenBN.toFixed(TOKEN_PRECISION) : '0.00'\n    dispatch({ type: 'setPrincipal', payload: { principalAsUSD: amount, principalAsToken } })\n  }\n\n  // Handler for principal input when in Token mode\n  const setPrincipalFromTokenValue = useCallback(\n    (amount: string) => {\n      const principalAsUsdBN = new BigNumber(amount).times(stakingTokenPrice)\n      const principalAsUsdString = principalAsUsdBN.gt(0) ? principalAsUsdBN.toFixed(USD_PRECISION) : '0.00'\n      dispatch({\n        type: 'setPrincipal',\n        payload: { principalAsUSD: principalAsUsdString, principalAsToken: amount },\n      })\n    },\n    [stakingTokenPrice],\n  )\n\n  // Handler for staking duration buttons\n  const setStakingDuration = (stakingDurationIndex: number) => {\n    dispatch({ type: 'setStakingDuration', payload: stakingDurationIndex })\n  }\n\n  // Handler for compounding checkbox\n  const toggleCompounding = () => {\n    dispatch({ type: 'toggleCompounding' })\n  }\n\n  // Handler for principal input mode switch\n  const toggleEditingCurrency = () => {\n    dispatch({ type: 'toggleEditingCurrency' })\n  }\n\n  const setCalculatorMode = (modeToSet: CalculatorMode) => {\n    dispatch({ type: 'setCalculatorMode', payload: modeToSet })\n  }\n\n  // Handler for ROI input\n  const setTargetRoi = (amount: string) => {\n    const targetRoiAsTokens = new BigNumber(amount).div(earningTokenPrice)\n    dispatch({\n      type: 'setTargetRoi',\n      payload: { roiUSD: amount, roiTokens: targetRoiAsTokens.isNaN() ? 0 : targetRoiAsTokens.toNumber() },\n    })\n  }\n\n  return {\n    state,\n    setPrincipalFromUSDValue,\n    setPrincipalFromTokenValue,\n    setStakingDuration,\n    toggleCompounding,\n    toggleEditingCurrency,\n    setCompoundingFrequency,\n    setCalculatorMode,\n    setTargetRoi,\n  }\n}\n\nexport default useRoiCalculatorReducer\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Flex, Box, Text, ExpandableLabel, LinkExternal, Grid, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getApy } from 'utils/compoundApyHelpers'\n\nconst Footer = styled(Flex)`\n  width: 100%;\n  background: #fcf4f4;\n  padding: 12px 16px 16px;\n`\n\nconst BulletList = styled.ul`\n  list-style-type: none;\n  margin-top: 16px;\n  padding: 0;\n  li {\n    margin: 0;\n    padding: 0;\n  }\n  li::before {\n    content: '•';\n    margin-right: 4px;\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n  li::marker {\n    font-size: 12px;\n  }\n`\n\ninterface RoiCalculatorFooterProps {\n  isFarm: boolean\n  apr: number\n  displayApr: string\n  autoCompoundFrequency: number\n  multiplier: string\n  linkLabel: string\n  linkHref: string\n  performanceFee: number\n}\n\nconst RoiCalculatorFooter: React.FC<RoiCalculatorFooterProps> = ({\n  isFarm,\n  apr,\n  displayApr,\n  autoCompoundFrequency,\n  multiplier,\n  linkLabel,\n  linkHref,\n  performanceFee,\n}) => {\n  const [isExpanded, setIsExpanded] = useState(false)\n  const { t } = useTranslation()\n  const {\n    targetRef: multiplierRef,\n    tooltip: multiplierTooltip,\n    tooltipVisible: multiplierTooltipVisible,\n  } = useTooltip(\n    <>\n      <Text>\n        {t(\n          'The Multiplier represents the proportion of HOS rewards receives, as a proportion of the HOS produced each block.',\n        )}\n      </Text>\n      <Text my=\"24px\">\n        {t('For example, if a 1x farm received 1 HOS per block, a 40x farm would receive 40 HOS per block.')}\n      </Text>\n      <Text>{t('This amount is already included in all APR calculations for the farm.')}</Text>\n    </>,\n    { placement: 'top-end', tooltipOffset: [20, 10] },\n  )\n\n  const gridRowCount = isFarm ? 4 : 2\n  const apy = (getApy(apr, autoCompoundFrequency > 0 ? autoCompoundFrequency : 1, 365, performanceFee) * 100).toFixed(2)\n\n  return (\n    <Footer p=\"16px\" flexDirection=\"column\">\n      <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded((prev) => !prev)}>\n        {isExpanded ? t('Hide') : t('Details')}\n      </ExpandableLabel>\n      {isExpanded && (\n        <Box px=\"8px\">\n          <Grid gridTemplateColumns=\"2.5fr 1fr\" gridRowGap=\"8px\" gridTemplateRows={`repeat(${gridRowCount}, auto)`}>\n            {isFarm && (\n              <>\n                <Text color=\"textSubtle\" small>\n                  {t('APR (incl. LP rewards)')}\n                </Text>\n                <Text small textAlign=\"right\">\n                  {displayApr}%\n                </Text>\n              </>\n            )}\n            <Text color=\"textSubtle\" small>\n              {isFarm ? t('Base APR (CAKE yield only)') : t('APR')}\n            </Text>\n            <Text small textAlign=\"right\">\n              {apr.toFixed(2)}%\n            </Text>\n            <Text color=\"textSubtle\" small>\n              {t('APY (%compoundTimes%x daily compound)', {\n                compoundTimes: autoCompoundFrequency > 0 ? autoCompoundFrequency : 1,\n              })}\n            </Text>\n            <Text small textAlign=\"right\">\n              {apy}%\n            </Text>\n            {isFarm && (\n              <>\n                <Text color=\"textSubtle\" small>\n                  {t('Farm Multiplier')}\n                </Text>\n                <Flex justifyContent=\"flex-end\" alignItems=\"flex-end\">\n                  <Text small textAlign=\"right\" mr=\"4px\">\n                    {multiplier}\n                  </Text>\n                  <span ref={multiplierRef}>\n                    <HelpIcon color=\"textSubtle\" width=\"16px\" height=\"16px\" />\n                  </span>\n                  {multiplierTooltipVisible && multiplierTooltip}\n                </Flex>\n              </>\n            )}\n          </Grid>\n          <BulletList>\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t('Calculated based on current rates.')}\n              </Text>\n            </li>\n            {isFarm && (\n              <li>\n                <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('LP rewards: 0.17% trading fees, distributed proportionally among LP token holders.')}\n                </Text>\n              </li>\n            )}\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t(\n                  'All figures are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n                )}\n              </Text>\n            </li>\n            {performanceFee > 0 && (\n              <li>\n                <Text mt=\"14px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('All estimated rates take into account this pool’s %fee%% performance fee', {\n                    fee: performanceFee,\n                  })}\n                </Text>\n              </li>\n            )}\n          </BulletList>\n          <Flex justifyContent=\"center\" mt=\"24px\">\n            <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\n          </Flex>\n        </Box>\n      )}\n    </Footer>\n  )\n}\n\nexport default RoiCalculatorFooter\n","import React, { useRef, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Box, Flex, Text, Input, CheckmarkIcon, PencilIcon, IconButton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { CalculatorMode, RoiCalculatorReducerState } from './useRoiCalculatorReducer'\n\nconst MILLION = 1000000\nconst TRILLION = 1000000000000\n\nconst RoiCardWrapper = styled(Box)`\n  background: #f2f3f7;\n  padding: 1px;\n  width: 100%;\n  border-radius: ${({ theme }) => theme.radii.card};\n`\n\nconst RoiCardInner = styled(Box)`\n  height: 120px;\n  padding: 14px 24px 0 22px;\n  border-radius: ${({ theme }) => theme.radii.card};\n  background: #f2f3f7;\n  .svg-wrapper {\n    path {\n      fill: #8e1673;\n    }\n  }\n`\n\nconst RoiInputContainer = styled(Box)`\n  position: relative;\n  & > input {\n    padding-left: 28px;\n    max-width: 70%;\n    &:focus:not(:disabled) {\n      box-shadow: none;\n    }\n  }\n  &:before {\n    position: absolute;\n    content: '$';\n    color: ${({ theme }) => theme.colors.textSubtle};\n    left: 16px;\n    top: 8px;\n  }\n`\n\nconst RoiDisplayContainer = styled(Flex)`\n  max-width: 82%;\n  margin-right: 8px;\n`\n\nconst RoiDollarAmount = styled(Text)<{ fadeOut: boolean }>`\n  position: relative;\n  overflow-x: auto;\n  &::-webkit-scrollbar {\n    height: 0px;\n  }\n\n  ${({ fadeOut, theme }) =>\n    fadeOut &&\n    `\n      &:after {\n        // background: linear-gradient(\n        //   to right,\n        //   ${theme.colors.background}00,\n        //   ${theme.colors.background}E6\n        // );\n        content: '';\n        height: 100%;\n        pointer-events: none;\n        position: absolute;\n        right: 0;\n        top: 0;\n        width: 40px;\n      }\n  `}\n`\n\ninterface RoiCardProps {\n  earningTokenSymbol: string\n  calculatorState: RoiCalculatorReducerState\n  setTargetRoi: (amount: string) => void\n  setCalculatorMode: (mode: CalculatorMode) => void\n}\n\nconst RoiCard: React.FC<RoiCardProps> = ({ earningTokenSymbol, calculatorState, setTargetRoi, setCalculatorMode }) => {\n  const inputRef = useRef<HTMLInputElement | null>(null)\n  const { roiUSD, roiTokens, roiPercentage } = calculatorState.data\n  const { mode } = calculatorState.controls\n\n  const { t } = useTranslation()\n\n  useEffect(() => {\n    if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI && inputRef.current) {\n      inputRef.current.focus()\n    }\n  }, [mode])\n\n  const onEnterEditing = () => {\n    setCalculatorMode(CalculatorMode.PRINCIPAL_BASED_ON_ROI)\n  }\n\n  const onExitRoiEditing = () => {\n    setCalculatorMode(CalculatorMode.ROI_BASED_ON_PRINCIPAL)\n  }\n  const handleExpectedRoiChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTargetRoi(event.currentTarget.value)\n  }\n  return (\n    <RoiCardWrapper>\n      <RoiCardInner>\n        <Text fontSize=\"12px\" color=\"#8E1673\" bold textTransform=\"uppercase\">\n          {t('ROI at current rates')}\n        </Text>\n        <Flex justifyContent=\"space-between\" mt=\"4px\" height=\"36px\">\n          {mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI ? (\n            <>\n              <RoiInputContainer>\n                <Input\n                  ref={inputRef}\n                  type=\"number\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  value={roiUSD}\n                  placeholder=\"0.0\"\n                  className=\"input\"\n                  onChange={handleExpectedRoiChange}\n                />\n              </RoiInputContainer>\n              <IconButton scale=\"sm\" variant=\"text\" onClick={onExitRoiEditing}>\n                <CheckmarkIcon color=\"primary\" />\n              </IconButton>\n            </>\n          ) : (\n            <>\n              <RoiDisplayContainer onClick={onEnterEditing}>\n                {/* Dollar sign is separate cause its not supposed to scroll with a number if number is huge */}\n                <Text fontSize=\"24px\" bold color=\"#5C5C75\">\n                  $\n                </Text>\n                <RoiDollarAmount color=\"#5C5C75\" fontSize=\"24px\" bold fadeOut={roiUSD > TRILLION}>\n                  {roiUSD.toLocaleString('en', {\n                    minimumFractionDigits: roiUSD > MILLION ? 0 : 2,\n                    maximumFractionDigits: roiUSD > MILLION ? 0 : 2,\n                  })}\n                </RoiDollarAmount>\n              </RoiDisplayContainer>\n              <IconButton scale=\"sm\" variant=\"text\" onClick={onEnterEditing} className=\"svg-wrapper\">\n                <PencilIcon />\n              </IconButton>\n            </>\n          )}\n        </Flex>\n        <Text fontSize=\"12px\" color=\"#5C5C75\">\n          ~ {roiTokens} {earningTokenSymbol} (\n          {roiPercentage.toLocaleString('en', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\n          %)\n        </Text>\n      </RoiCardInner>\n    </RoiCardWrapper>\n  )\n}\n\nexport default RoiCard\n","import React, { useState, useEffect } from 'react'\nimport { Flex, ArrowDownIcon, ArrowUpIcon } from '@pancakeswap/uikit'\nimport styled, { keyframes } from 'styled-components'\nimport { CalculatorMode, RoiCalculatorReducerState } from './useRoiCalculatorReducer'\n\nconst rotate = keyframes`\n  0% {\n    transform: scale(1);\n    stroke-width: 0;\n  }\n  50% {\n    transform: scale(1.3);\n    stroke-width: 2;\n  }\n  100% {\n    transform: scale(1);\n    stroke-width: 0;\n  }\n`\n\nconst ArrowContainer = styled(Flex)`\n  & > svg {\n    animation: 0.2s ${rotate} linear;\n    stroke: ${({ theme }) => `${theme.colors.primary}3D`};\n    stroke-width: 0;\n  }\n`\n\ninterface AnimatedArrowProps {\n  calculatorState: RoiCalculatorReducerState\n}\n\nconst AnimatedArrow: React.FC<AnimatedArrowProps> = ({ calculatorState }) => {\n  const [key, setKey] = useState('roiArrow-0')\n  const { mode } = calculatorState.controls\n\n  // Trigger animation on state change\n  useEffect(() => {\n    setKey((prevKey) => {\n      const prevId = parseInt(prevKey.split('-')[1], 10)\n      return `roiArrow-${prevId + 1}`\n    })\n  }, [calculatorState])\n\n  return (\n    <ArrowContainer justifyContent=\"center\" my=\"24px\" key={key}>\n      {mode === CalculatorMode.ROI_BASED_ON_PRINCIPAL ? (\n        <ArrowDownIcon width=\"24px\" height=\"24px\" color=\"textSubtle\" />\n      ) : (\n        <ArrowUpIcon width=\"24px\" height=\"24px\" color=\"textSubtle\" />\n      )}\n    </ArrowContainer>\n  )\n}\n\nexport default AnimatedArrow\n","import React, { useRef, useEffect } from 'react'\nimport styled from 'styled-components'\nimport {\n  Modal,\n  Text,\n  Button,\n  Flex,\n  ButtonMenu,\n  Checkbox,\n  BalanceInput,\n  HelpIcon,\n  ButtonMenuItem,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport RoiCalculatorFooter from './RoiCalculatorFooter'\nimport RoiCard from './RoiCard'\nimport useRoiCalculatorReducer, { CalculatorMode, EditingCurrency } from './useRoiCalculatorReducer'\nimport AnimatedArrow from './AnimatedArrow'\n\ninterface RoiCalculatorModalProps {\n  onDismiss?: () => void\n  onBack?: () => void\n  earningTokenPrice: number\n  apr: number\n  displayApr?: string\n  linkLabel: string\n  linkHref: string\n  stakingTokenBalance: BigNumber\n  stakingTokenSymbol: string\n  stakingTokenPrice: number\n  earningTokenSymbol?: string\n  multiplier?: string\n  autoCompoundFrequency?: number\n  performanceFee?: number\n  isFarm?: boolean\n  initialValue?: string\n}\n\nconst StyledModal = styled(Modal)`\n  width: 345px;\n  border-radius: 10px;\n  & > :nth-child(2) {\n    padding: 0;\n  }\n  h2 {\n    color: #5c5c75;\n  }\n`\n\nconst ScrollableContainer = styled.div`\n  padding: 24px;\n  max-height: 500px;\n  overflow-y: auto;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-height: none;\n  }\n  .balance-input {\n    margin-top: 8px;\n    border: 1px solid #ededf1;\n    background-color: #fff;\n    box-shadow: none;\n    > * {\n      color: #5c5c75 !important;\n    }\n  }\n  .check-box {\n    width: 18px;\n    height: 18px;\n    border-radius: 4px;\n    &:checked {\n      background: #8e1673;\n    }\n  }\n`\n\nconst FullWidthButtonMenu = styled(ButtonMenu)<{ disabled?: boolean }>`\n  width: 100%;\n  margin-top: 8px;\n  & > button {\n    width: 100%;\n    font-family: PingFang SC;\n    font-style: normal;\n    font-weight: normal;\n    font-size: 14px;\n  }\n  opacity: ${({ disabled }) => (disabled ? 0.5 : 1)};\n`\n\nconst RoiCalculatorModal: React.FC<RoiCalculatorModalProps> = ({\n  onDismiss,\n  onBack,\n  earningTokenPrice,\n  apr,\n  displayApr,\n  linkLabel,\n  linkHref,\n  stakingTokenBalance,\n  stakingTokenSymbol,\n  stakingTokenPrice,\n  multiplier,\n  initialValue,\n  earningTokenSymbol = 'CAKE',\n  autoCompoundFrequency = 0,\n  performanceFee = 0,\n  isFarm = false,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useActiveWeb3React()\n  const balanceInputRef = useRef<HTMLInputElement | null>(null)\n\n  const {\n    state,\n    setPrincipalFromUSDValue,\n    setPrincipalFromTokenValue,\n    setStakingDuration,\n    toggleCompounding,\n    toggleEditingCurrency,\n    setCompoundingFrequency,\n    setCalculatorMode,\n    setTargetRoi,\n  } = useRoiCalculatorReducer(stakingTokenPrice, earningTokenPrice, apr, autoCompoundFrequency, performanceFee)\n\n  const { compounding, activeCompoundingIndex, stakingDuration, editingCurrency } = state.controls\n  const { principalAsUSD, principalAsToken } = state.data\n\n  // Auto-focus input on opening modal\n  useEffect(() => {\n    if (balanceInputRef.current) {\n      balanceInputRef.current.focus()\n    }\n  }, [])\n\n  // If user comes to calculator from staking modal - initialize with whatever they put in there\n  useEffect(() => {\n    if (initialValue) {\n      setPrincipalFromTokenValue(initialValue)\n    }\n  }, [initialValue, setPrincipalFromTokenValue])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    isFarm\n      ? t('“My Balance” here includes both LP Tokens in your wallet, and LP Tokens already staked in this farm.')\n      : t(\n          '“My Balance” here includes both %assetSymbol% in your wallet, and %assetSymbol% already staked in this pool.',\n          { assetSymbol: stakingTokenSymbol },\n        ),\n    { placement: 'top-end', tooltipOffset: [20, 10] },\n  )\n\n  const onBalanceFocus = () => {\n    setCalculatorMode(CalculatorMode.ROI_BASED_ON_PRINCIPAL)\n  }\n\n  const editingUnit = editingCurrency === EditingCurrency.TOKEN ? stakingTokenSymbol : 'USD'\n  const editingValue = editingCurrency === EditingCurrency.TOKEN ? principalAsToken : principalAsUSD\n  const conversionUnit = editingCurrency === EditingCurrency.TOKEN ? 'USD' : stakingTokenSymbol\n  const conversionValue = editingCurrency === EditingCurrency.TOKEN ? principalAsUSD : principalAsToken\n  const onUserInput = editingCurrency === EditingCurrency.TOKEN ? setPrincipalFromTokenValue : setPrincipalFromUSDValue\n\n  return (\n    <StyledModal\n      title={t('ROI Calculator')}\n      onDismiss={onBack || onDismiss}\n      onBack={onBack ?? null}\n      headerBackground=\"gradients.cardHeader\"\n    >\n      <ScrollableContainer>\n        <Flex flexDirection=\"column\" mb=\"8px\">\n          <Text color=\"#8E1673\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n            {t('%asset% staked', { asset: stakingTokenSymbol })}\n          </Text>\n          <BalanceInput\n            currencyValue={`${conversionValue} ${conversionUnit}`}\n            innerRef={balanceInputRef}\n            placeholder=\"0.00\"\n            value={editingValue}\n            unit={editingUnit}\n            className=\"balance-input\"\n            onUserInput={onUserInput}\n            switchEditingUnits={toggleEditingCurrency}\n            onFocus={onBalanceFocus}\n          />\n          <Flex justifyContent=\"space-between\" mt=\"8px\">\n            <Button\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"68px\"\n              variant=\"tertiary\"\n              onClick={() => setPrincipalFromUSDValue('100')}\n            >\n              $100\n            </Button>\n            <Button\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"68px\"\n              variant=\"tertiary\"\n              onClick={() => setPrincipalFromUSDValue('1000')}\n            >\n              $1000\n            </Button>\n            <Button\n              disabled={stakingTokenBalance.lte(0) || !account}\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"128px\"\n              variant=\"tertiary\"\n              onClick={() =>\n                setPrincipalFromUSDValue(getBalanceNumber(stakingTokenBalance.times(stakingTokenPrice)).toString())\n              }\n            >\n              {t('My Balance').toLocaleUpperCase()}\n            </Button>\n            <span ref={targetRef}>\n              <HelpIcon width=\"16px\" height=\"16px\" color=\"#5C5C75\" />\n            </span>\n            {tooltipVisible && tooltip}\n          </Flex>\n          <Text mt=\"24px\" color=\"#8E1673\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n            {t('Staked for')}\n          </Text>\n          <FullWidthButtonMenu activeIndex={stakingDuration} onItemClick={setStakingDuration} scale=\"sm\">\n            <ButtonMenuItem variant=\"tertiary\">{t('1D')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('7D')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('30D')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('1Y')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('5Y')}</ButtonMenuItem>\n          </FullWidthButtonMenu>\n          {autoCompoundFrequency === 0 && (\n            <>\n              <Text mt=\"24px\" color=\"#8E1673\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n                {t('Compounding every')}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Flex flex=\"1\">\n                  <Checkbox className=\"check-box\" scale=\"sm\" checked={compounding} onChange={toggleCompounding} />\n                </Flex>\n                <Flex flex=\"6\">\n                  <FullWidthButtonMenu\n                    disabled={!compounding}\n                    activeIndex={activeCompoundingIndex}\n                    onItemClick={setCompoundingFrequency}\n                    scale=\"sm\"\n                  >\n                    <ButtonMenuItem>{t('1D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('7D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('14D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('30D')}</ButtonMenuItem>\n                  </FullWidthButtonMenu>\n                </Flex>\n              </Flex>\n            </>\n          )}\n        </Flex>\n        <AnimatedArrow calculatorState={state} />\n        <Flex>\n          <RoiCard\n            earningTokenSymbol={earningTokenSymbol}\n            calculatorState={state}\n            setTargetRoi={setTargetRoi}\n            setCalculatorMode={setCalculatorMode}\n          />\n        </Flex>\n      </ScrollableContainer>\n      <RoiCalculatorFooter\n        isFarm={isFarm}\n        apr={apr}\n        displayApr={displayApr}\n        autoCompoundFrequency={autoCompoundFrequency}\n        multiplier={multiplier}\n        linkLabel={linkLabel}\n        linkHref={linkHref}\n        performanceFee={performanceFee}\n      />\n    </StyledModal>\n  )\n}\n\nexport default RoiCalculatorModal\n","import { useEffect, useState } from 'react'\n\n// modified from https://usehooks.com/useDebounce/\nexport default function useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\n\n  useEffect(() => {\n    // Update debounced value after delay\n    const handler = setTimeout(() => {\n      setDebouncedValue(value)\n    }, delay)\n\n    // Cancel the timeout if value changes (also on delay change or unmount)\n    // This is how we prevent debounced value from updating if value is changed ...\n    // .. within the delay period. Timeout gets cleared and restarted.\n    return () => {\n      clearTimeout(handler)\n    }\n  }, [value, delay])\n\n  return debouncedValue\n}\n","import { useCallback } from 'react'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\nimport { ConnectorNames, connectorLocalStorageKey } from '@pancakeswap/uikit'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\nimport useToast from 'hooks/useToast'\nimport { profileClear } from 'state/profile'\nimport { useAppDispatch } from 'state'\nimport { useTranslation } from 'contexts/Localization'\n\nconst useAuth = () => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback(\n    (connectorID: ConnectorNames) => {\n      const connector = connectorsByName[connectorID]\n      if (connector) {\n        activate(connector, async (error: Error) => {\n          if (error instanceof UnsupportedChainIdError) {\n            const hasSetup = await setupNetwork()\n            if (hasSetup) {\n              activate(connector)\n            }\n          } else {\n            window.localStorage.removeItem(connectorLocalStorageKey)\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n              toastError(t('Provider Error'), t('No provider was found'))\n            } else if (\n              error instanceof UserRejectedRequestErrorInjected ||\n              error instanceof UserRejectedRequestErrorWalletConnect\n            ) {\n              if (connector instanceof WalletConnectConnector) {\n                const walletConnector = connector as WalletConnectConnector\n                walletConnector.walletConnectProvider = null\n              }\n              toastError(t('Authorization Error'), t('Please authorize to access your account'))\n            } else {\n              toastError(error.name, error.message)\n            }\n          }\n        })\n      } else {\n        toastError(t('Unable to find connector'), t('The connector config is wrong'))\n      }\n    },\n    [t, activate, toastError],\n  )\n\n  const logout = useCallback(() => {\n    dispatch(profileClear())\n    deactivate()\n    // This localStorage key is set by @web3-react/walletconnect-connector\n    if (window.localStorage.getItem('walletconnect')) {\n      connectorsByName.walletconnect.close()\n      connectorsByName.walletconnect.walletConnectProvider = null\n    }\n  }, [deactivate, dispatch])\n\n  return { login, logout }\n}\n\nexport default useAuth\n","// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = window.ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'HALO Main Net',\n            nativeCurrency: {\n              name: 'HO',\n              symbol: 'HO',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error('Failed to setup the network in Metamask:', error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (tokenAddress: string, tokenSymbol: string, tokenDecimals: number) => {\n  const tokenAdded = await window.ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: `${BASE_URL}/images/tokens/${tokenAddress}.png`,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import { Currency, ETHER, Token } from '@awswap/sdk'\n\nexport function currencyId(currency: Currency): string {\n  if (currency === ETHER) return 'HO'\n  if (currency instanceof Token) return currency.address\n  throw new Error('invalid currency')\n}\n\nexport default currencyId\n","/* eslint-disable no-case-declarations */\n/**\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\n * @param uri to convert to fetch-able http url\n */\nexport default function uriToHttp(uri: string): string[] {\n  const protocol = uri.split(':')[0].toLowerCase()\n  switch (protocol) {\n    case 'https':\n      return [uri]\n    case 'http':\n      return [`https${uri.substr(4)}`, uri]\n    case 'ipfs':\n      const hash = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`]\n    case 'ipns':\n      const name = uri.match(/^ipns:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`]\n    default:\n      return []\n  }\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport teamsList from 'config/constants/teams'\nimport { Team } from 'config/constants/types'\nimport { TeamsById, TeamsState } from '../types'\nimport { getTeam, getTeams } from './helpers'\n\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\n  return {\n    ...accum,\n    [team.id]: team,\n  }\n}, {})\n\nconst initialState: TeamsState = {\n  isInitialized: false,\n  isLoading: true,\n  data: teamsById,\n}\n\nexport const teamsSlice = createSlice({\n  name: 'teams',\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.isLoading = true\n    },\n    fetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data[action.payload.id] = action.payload\n    },\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\n\n// Thunks\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const team = await getTeam(teamId)\n    dispatch(teamFetchSucceeded(team))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport const fetchTeams = () => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const teams = await getTeams()\n    dispatch(teamsFetchSucceeded(teams))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport default teamsSlice.reducer\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst farms: FarmConfig[] = [\n  {\n    pid: 0,\n    lpSymbol: 'AW/HO-LP',\n    lpAddresses: {\n      1280: '0xfc1c5590d31502E4689f82a1DD7957259e6F55D3',\n    },\n    token: tokens.aw,\n    quoteToken: tokens.who,\n    earningToken: tokens.aw,\n  },\n  {\n    pid: 1,\n    lpSymbol: 'AW/USDT-LP',\n    lpAddresses: {\n      1280: '0xb6eB3BB85430c4cFfAD1f23465Df66C6DCBB9ef7',\n    },\n    token: tokens.aw,\n    quoteToken: tokens.usdt,\n    earningToken: tokens.aw,\n  },\n]\n\nexport default farms\n","import React, { useCallback } from 'react'\nimport { ChainId, Currency, Token } from '@awswap/sdk'\nimport styled from 'styled-components'\nimport {\n  Button,\n  Text,\n  ErrorIcon,\n  ArrowUpIcon,\n  MetamaskIcon,\n  Flex,\n  Box,\n  Link,\n  // Spinner,\n  InjectedModalProps,\n} from '@pancakeswap/uikit'\nimport { registerToken } from 'utils/wallet'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { RowFixed } from '../Layout/Row'\nimport { AutoColumn, ColumnCenter } from '../Layout/Column'\nimport { getBscScanLink } from '../../utils'\nimport Modal from '../styles/Modal'\nimport SpinnerLoading from '../icons/SpinnerLoading'\n\nconst Wrapper = styled.div`\n  width: 100%;\n`\nconst Section = styled(AutoColumn)`\n  padding: 24px;\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 24px 0;\n`\n\nfunction ConfirmationPendingContent({ pendingText }: { pendingText: string }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <ConfirmedIcon>\n        <SpinnerLoading />\n      </ConfirmedIcon>\n      <AutoColumn gap=\"12px\" justify=\"center\">\n        <Text fontSize=\"20px\">{t('Waiting For Confirmation')}</Text>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text bold small textAlign=\"center\">\n            {pendingText}\n          </Text>\n        </AutoColumn>\n        <Text small color=\"textSubtle\" textAlign=\"center\">\n          {t('Confirm this transaction in your wallet')}\n        </Text>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nfunction TransactionSubmittedContent({\n  onDismiss,\n  chainId,\n  hash,\n  currencyToAdd,\n}: {\n  onDismiss: () => void\n  hash: string | undefined\n  chainId: ChainId\n  currencyToAdd?: Currency | undefined\n}) {\n  const { library } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const token: Token | undefined = wrappedCurrency(currencyToAdd, chainId)\n\n  return (\n    <Wrapper>\n      <Section>\n        <ConfirmedIcon>\n          <ArrowUpIcon strokeWidth={0.5} width=\"90px\" color=\"primary\" />\n        </ConfirmedIcon>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text fontSize=\"20px\">{t('Transaction Submitted')}</Text>\n          {chainId && hash && (\n            <Link external small href={getBscScanLink(hash, 'transaction', chainId)}>\n              {t('View on BscScan')}\n            </Link>\n          )}\n          {currencyToAdd && library?.provider?.isMetaMask && (\n            <Button\n              variant=\"tertiary\"\n              mt=\"12px\"\n              width=\"fit-content\"\n              onClick={() => registerToken(token.address, token.symbol, token.decimals)}\n            >\n              <RowFixed>\n                {t('Add %asset% to Metamask', { asset: currencyToAdd.symbol })}\n                <MetamaskIcon width=\"16px\" ml=\"6px\" />\n              </RowFixed>\n            </Button>\n          )}\n          <Button onClick={onDismiss} mt=\"20px\">\n            {t('Close')}\n          </Button>\n        </AutoColumn>\n      </Section>\n    </Wrapper>\n  )\n}\n\nexport function ConfirmationModalContent({\n  bottomContent,\n  topContent,\n}: {\n  topContent: () => React.ReactNode\n  bottomContent: () => React.ReactNode\n}) {\n  return (\n    <Wrapper>\n      <Box>{topContent()}</Box>\n      <Box>{bottomContent()}</Box>\n    </Wrapper>\n  )\n}\n\nexport function TransactionErrorContent({ message, onDismiss }: { message: string; onDismiss: () => void }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <AutoColumn justify=\"center\">\n        <ErrorIcon color=\"failure\" width=\"64px\" />\n        <Text color=\"failure\" style={{ textAlign: 'center', width: '85%' }}>\n          {message}\n        </Text>\n      </AutoColumn>\n\n      <Flex justifyContent=\"center\" pt=\"24px\">\n        <Button onClick={onDismiss}>{t('Dismiss')}</Button>\n      </Flex>\n    </Wrapper>\n  )\n}\n\ninterface ConfirmationModalProps {\n  title: string\n  customOnDismiss?: () => void\n  hash: string | undefined\n  content: () => React.ReactNode\n  attemptingTxn: boolean\n  pendingText: string\n  currencyToAdd?: Currency | undefined\n}\n\nconst TransactionConfirmationModal: React.FC<InjectedModalProps & ConfirmationModalProps> = ({\n  title,\n  onDismiss,\n  customOnDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  content,\n  currencyToAdd,\n}) => {\n  const { chainId } = useActiveWeb3React()\n\n  const handleDismiss = useCallback(() => {\n    if (customOnDismiss) {\n      customOnDismiss()\n    }\n    onDismiss()\n  }, [customOnDismiss, onDismiss])\n\n  if (!chainId) return null\n\n  return (\n    <Modal title={title} headerBackground=\"gradients.cardHeader\" onDismiss={handleDismiss}>\n      {attemptingTxn ? (\n        <ConfirmationPendingContent pendingText={pendingText} />\n      ) : hash ? (\n        <TransactionSubmittedContent\n          chainId={chainId}\n          hash={hash}\n          onDismiss={onDismiss}\n          currencyToAdd={currencyToAdd}\n        />\n      ) : (\n        content()\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionConfirmationModal\n","import { isAddress } from '../../utils'\nimport useENSAddress from './useENSAddress'\nimport useENSName from './useENSName'\n\n/**\n * Given a name or address, does a lookup to resolve to an address and name\n * @param nameOrAddress ENS name or address\n */\nexport default function useENS(nameOrAddress?: string | null): {\n  loading: boolean\n  address: string | null\n  name: string | null\n} {\n  const validated = isAddress(nameOrAddress)\n  const reverseLookup = useENSName(validated || undefined)\n  const lookup = useENSAddress(nameOrAddress)\n\n  return {\n    loading: reverseLookup.loading || lookup.loading,\n    address: validated || lookup.address,\n    name: reverseLookup.ENSName ? reverseLookup.ENSName : !validated && lookup.address ? nameOrAddress || null : null,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport { isAddress } from '../../utils'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a reverse lookup for an address to find its ENS name.\n * Note this is not the same as looking up an ENS name to find an address.\n */\nexport default function useENSName(address?: string): { ENSName: string | null; loading: boolean } {\n  const debouncedAddress = useDebounce(address, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedAddress || !isAddress(debouncedAddress)) return [undefined]\n    try {\n      return debouncedAddress ? [namehash(`${debouncedAddress.toLowerCase().substr(2)}.addr.reverse`)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedAddress])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const name = useSingleCallResult(resolverContract, 'name', ensNodeArgument)\n\n  const changed = debouncedAddress !== address\n  return {\n    ENSName: changed ? null : name.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || name.loading,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a lookup for an ENS name to find its address.\n */\nexport default function useENSAddress(ensName?: string | null): { loading: boolean; address: string | null } {\n  const debouncedName = useDebounce(ensName, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedName) return [undefined]\n    try {\n      return debouncedName ? [namehash(debouncedName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const addr = useSingleCallResult(resolverContract, 'addr', ensNodeArgument)\n\n  const changed = debouncedName !== ensName\n  return {\n    address: changed ? null : addr.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || addr.loading,\n  }\n}\n","import { Trade, Percent, currencyEquals } from '@awswap/sdk'\nimport { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from '../config/constants/index'\n\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\nexport function isTradeBetter(\n  tradeA: Trade | undefined | null,\n  tradeB: Trade | undefined | null,\n  minimumDelta: Percent = ZERO_PERCENT,\n): boolean | undefined {\n  if (tradeA && !tradeB) return false\n  if (tradeB && !tradeA) return true\n  if (!tradeA || !tradeB) return undefined\n\n  if (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !currencyEquals(tradeB.outputAmount.currency, tradeB.outputAmount.currency)\n  ) {\n    throw new Error('Trades are not comparable')\n  }\n\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\n  }\n  return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice)\n}\n\nexport default isTradeBetter\n","/* eslint-disable no-param-reassign */\nimport { isTradeBetter } from 'utils/trades'\nimport { Currency, CurrencyAmount, Pair, Token, Trade } from '@awswap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useUserSingleHopOnly } from 'state/user/hooks'\nimport {\n  BASES_TO_CHECK_TRADES_AGAINST,\n  CUSTOM_BASES,\n  BETTER_TRADE_LESS_HOPS_THRESHOLD,\n  ADDITIONAL_BASES,\n} from '../config/constants'\nimport { PairState, usePairs } from './usePairs'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nimport { useUnsupportedTokens } from './Tokens'\n\nfunction useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\n  const { chainId } = useActiveWeb3React()\n\n  const [tokenA, tokenB] = chainId\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n    : [undefined, undefined]\n\n  const bases: Token[] = useMemo(() => {\n    if (!chainId) return []\n\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\n\n    return [...common, ...additionalA, ...additionalB]\n  }, [chainId, tokenA, tokenB])\n\n  const basePairs: [Token, Token][] = useMemo(\n    () => flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])),\n    [bases],\n  )\n\n  const allPairCombinations: [Token, Token][] = useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n            // the direct pair\n            [tokenA, tokenB],\n            // token A against all bases\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\n            // token B against all bases\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\n            // each base against all bases\n            ...basePairs,\n          ]\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n            .filter(([t0, t1]) => t0.address !== t1.address)\n            .filter(([tokenA_, tokenB_]) => {\n              if (!chainId) return true\n              const customBases = CUSTOM_BASES[chainId]\n\n              const customBasesA: Token[] | undefined = customBases?.[tokenA_.address]\n              const customBasesB: Token[] | undefined = customBases?.[tokenB_.address]\n\n              if (!customBasesA && !customBasesB) return true\n\n              if (customBasesA && !customBasesA.find((base) => tokenB_.equals(base))) return false\n              if (customBasesB && !customBasesB.find((base) => tokenA_.equals(base))) return false\n\n              return true\n            })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId],\n  )\n\n  const allPairs = usePairs(allPairCombinations)\n\n  // only pass along valid pairs, non-duplicated pairs\n  return useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\n          // filter out duplicated pairs\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\n            return memo\n          }, {}),\n      ),\n    [allPairs],\n  )\n}\n\nconst MAX_HOPS = 3\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport function useTradeExactIn(currencyAmountIn?: CurrencyAmount, currencyOut?: Currency): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade: Trade | null =\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        // if current trade is best yet, save it\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n\n    return null\n  }, [allowedPairs, currencyAmountIn, currencyOut, singleHopOnly])\n}\n\n/**\n * Returns the best trade for the token in to the exact amount of token out\n */\nexport function useTradeExactOut(currencyIn?: Currency, currencyAmountOut?: CurrencyAmount): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade =\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n    return null\n  }, [currencyIn, currencyAmountOut, allowedPairs, singleHopOnly])\n}\n\nexport function useIsTransactionUnsupported(currencyIn?: Currency, currencyOut?: Currency): boolean {\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n  const { chainId } = useActiveWeb3React()\n\n  const tokenIn = wrappedCurrency(currencyIn, chainId)\n  const tokenOut = wrappedCurrency(currencyOut, chainId)\n\n  // if unsupported list loaded & either token on list, mark as unsupported\n  if (unsupportedTokens) {\n    if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\n      return true\n    }\n    if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\n      return true\n    }\n  }\n\n  return false\n}\n","export const TICKET_LIMIT_PER_REQUEST = 2500\nexport const NUM_ROUNDS_TO_CHECK_FOR_REWARDS = 3\nexport const NUM_ROUNDS_TO_FETCH_FROM_NODES = 3\n","import { ContextApi } from 'contexts/Localization/types'\nimport { PageMeta } from './types'\n\nexport const DEFAULT_META: PageMeta = {\n  title: 'AWSWAP',\n  description:\n    'About Action World upcoming launch on HALO chain. Action World is an IDO platform and SWAP decentralized exchange based on HALO Chain. AW’s vision is to become an incubator for projects in Southeast Asia. The success of AW will drive the growth of Halo Chain in Southeast Asia, as such Halo Labs will also actively promote the launch and development of AW.',\n  image: '/images/hero.png',\n}\n\nexport const getCustomMeta = (path: string, t: ContextApi['t']): PageMeta => {\n  switch (path) {\n    case '/':\n      return {\n        title: `${t('Home')} | ${t('HOSWAP')}`,\n      }\n    case '/competition':\n      return {\n        title: `${t('Trading Battle')} | ${t('HOSWAP')}`,\n      }\n    case '/prediction':\n      return {\n        title: `${t('Prediction')} | ${t('HOSWAP')}`,\n      }\n    case '/farms':\n      return {\n        title: `${t('Farms')} | ${t('HOSWAP')}`,\n      }\n    case '/pools':\n      return {\n        title: `${t('Pools')} | ${t('HOSWAP')}`,\n      }\n    case '/lottery':\n      return {\n        title: `${t('Lottery')} | ${t('HOSWAP')}`,\n      }\n    case '/collectibles':\n      return {\n        title: `${t('Collectibles')} | ${t('HOSWAP')}`,\n      }\n    case '/ifo':\n      return {\n        title: `${t('Initial Farm Offering')} | ${t('HOSWAP')}`,\n      }\n    case '/teams':\n      return {\n        title: `${t('Leaderboard')} | ${t('HOSWAP')}`,\n      }\n    case '/profile/tasks':\n      return {\n        title: `${t('Task Center')} | ${t('HOSWAP')}`,\n      }\n    case '/profile':\n      return {\n        title: `${t('Your Profile')} | ${t('HOSWAP')}`,\n      }\n    default:\n      return {\n        title: `${t('HOSWAP')}`,\n      }\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Helmet } from 'react-helmet-async'\nimport { useLocation } from 'react-router'\nimport { DEFAULT_META, getCustomMeta } from 'config/constants/meta'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport Container from './Container'\n\nconst StyledPage = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nconst PageMeta = () => {\n  const { t } = useTranslation()\n  const { pathname } = useLocation()\n  const cakePriceUsd = usePriceCakeBusd()\n  const cakePriceUsdDisplay = cakePriceUsd.gt(0)\n    ? `$${cakePriceUsd.toNumber().toLocaleString(undefined, {\n        minimumFractionDigits: 3,\n        maximumFractionDigits: 3,\n      })}`\n    : ''\n\n  const pageMeta = getCustomMeta(pathname, t) || {}\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\n  const pageTitle = cakePriceUsdDisplay ? [title].join(' - ') : title\n\n  return (\n    <Helmet>\n      <title>{pageTitle}</title>\n    </Helmet>\n  )\n}\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <>\n      <PageMeta />\n      <StyledPage {...props}>{children}</StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\nimport getGasPrice from 'utils/getGasPrice'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nexport const stakeFarm = async (masterChefContract, pid, amount) => {\n  const gasPrice = getGasPrice()\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n\n  const tx = await masterChefContract.deposit(pid, value, { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const unstakeFarm = async (masterChefContract, pid, amount) => {\n  const gasPrice = getGasPrice()\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n\n  const tx = await masterChefContract.withdraw(pid, value, { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const harvestFarm = async (masterChefContract, pid) => {\n  const gasPrice = getGasPrice()\n\n  const tx = await masterChefContract.deposit(pid, '0', { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n","import { useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { State, ProfileState } from '../types'\nimport { fetchProfile } from '.'\n\nexport const useFetchProfile = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchProfile(account))\n  }, [account, dispatch])\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\n}\n","import React, { useState } from 'react'\nimport { Text, Input, Flex, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useUserSlippageTolerance, useUserTransactionTTL } from 'state/user/hooks'\nimport QuestionHelper from '../../QuestionHelper'\nimport Button from '../../styles/Button'\n\nenum SlippageError {\n  InvalidInput = 'InvalidInput',\n  RiskyLow = 'RiskyLow',\n  RiskyHigh = 'RiskyHigh',\n}\n\nenum DeadlineError {\n  InvalidInput = 'InvalidInput',\n}\n\nconst SlippageTabs = () => {\n  const [userSlippageTolerance, setUserSlippageTolerance] = useUserSlippageTolerance()\n  const [ttl, setTtl] = useUserTransactionTTL()\n  const [slippageInput, setSlippageInput] = useState('')\n  const [deadlineInput, setDeadlineInput] = useState('')\n\n  const { t } = useTranslation()\n\n  const slippageInputIsValid =\n    slippageInput === '' || (userSlippageTolerance / 100).toFixed(2) === Number.parseFloat(slippageInput).toFixed(2)\n  const deadlineInputIsValid = deadlineInput === '' || (ttl / 60).toString() === deadlineInput\n\n  let slippageError: SlippageError | undefined\n  if (slippageInput !== '' && !slippageInputIsValid) {\n    slippageError = SlippageError.InvalidInput\n  } else if (slippageInputIsValid && userSlippageTolerance < 50) {\n    slippageError = SlippageError.RiskyLow\n  } else if (slippageInputIsValid && userSlippageTolerance > 500) {\n    slippageError = SlippageError.RiskyHigh\n  } else {\n    slippageError = undefined\n  }\n\n  let deadlineError: DeadlineError | undefined\n  if (deadlineInput !== '' && !deadlineInputIsValid) {\n    deadlineError = DeadlineError.InvalidInput\n  } else {\n    deadlineError = undefined\n  }\n\n  const parseCustomSlippage = (value: string) => {\n    setSlippageInput(value)\n\n    try {\n      const valueAsIntFromRoundedFloat = Number.parseInt((Number.parseFloat(value) * 100).toString())\n      if (!Number.isNaN(valueAsIntFromRoundedFloat) && valueAsIntFromRoundedFloat < 5000) {\n        setUserSlippageTolerance(valueAsIntFromRoundedFloat)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  const parseCustomDeadline = (value: string) => {\n    setDeadlineInput(value)\n\n    try {\n      const valueAsInt: number = Number.parseInt(value) * 60\n      if (!Number.isNaN(valueAsInt) && valueAsInt > 0) {\n        setTtl(valueAsInt)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\" mb=\"24px\">\n        <Flex mb=\"12px\">\n          <Text color=\"#5C5C75\">{t('Slippage Tolerance')}</Text>\n          <QuestionHelper\n            text={t(\n              'Setting a high slippage tolerance can help transactions succeed, but you may not get such a good price. Use with caution.',\n            )}\n            placement=\"top-start\"\n            ml=\"4px\"\n          />\n        </Flex>\n        <Flex flexWrap=\"wrap\">\n          <Button\n            mt=\"4px\"\n            mr=\"4px\"\n            scale=\"sm\"\n            onClick={() => {\n              setSlippageInput('')\n              setUserSlippageTolerance(10)\n            }}\n            variant={userSlippageTolerance === 10 ? 'primary' : 'tertiary'}\n          >\n            0.1%\n          </Button>\n          <Button\n            mt=\"4px\"\n            mr=\"4px\"\n            scale=\"sm\"\n            onClick={() => {\n              setSlippageInput('')\n              setUserSlippageTolerance(50)\n            }}\n            variant={userSlippageTolerance === 50 ? 'primary' : 'tertiary'}\n          >\n            0.5%\n          </Button>\n          <Button\n            mr=\"4px\"\n            mt=\"4px\"\n            scale=\"sm\"\n            onClick={() => {\n              setSlippageInput('')\n              setUserSlippageTolerance(100)\n            }}\n            variant={userSlippageTolerance === 100 ? 'primary' : 'tertiary'}\n          >\n            1.0%\n          </Button>\n          <Flex alignItems=\"center\">\n            <Box width=\"76px\" mt=\"4px\">\n              <Input\n                scale=\"sm\"\n                placeholder={(userSlippageTolerance / 100).toFixed(2)}\n                value={slippageInput}\n                onBlur={() => {\n                  parseCustomSlippage((userSlippageTolerance / 100).toFixed(2))\n                }}\n                onChange={(e) => parseCustomSlippage(e.target.value)}\n                isWarning={!slippageInputIsValid}\n                isSuccess={![10, 50, 100].includes(userSlippageTolerance)}\n                style={{ boxShadow: 'none' }}\n              />\n            </Box>\n            <Text color=\"primary\" bold ml=\"2px\">\n              %\n            </Text>\n          </Flex>\n        </Flex>\n        {!!slippageError && (\n          <Text fontSize=\"14px\" color={slippageError === SlippageError.InvalidInput ? 'red' : '#F3841E'} mt=\"8px\">\n            {slippageError === SlippageError.InvalidInput\n              ? t('Enter a valid slippage percentage')\n              : slippageError === SlippageError.RiskyLow\n              ? t('Your transaction may fail')\n              : t('Your transaction may be frontrun')}\n          </Text>\n        )}\n      </Flex>\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Flex alignItems=\"center\">\n          <Text>{t('Tx deadline (mins)')}</Text>\n          <QuestionHelper\n            text={t('Your transaction will revert if it is left confirming for longer than this time.')}\n            placement=\"top-start\"\n            ml=\"4px\"\n          />\n        </Flex>\n        <Flex>\n          <Box width=\"52px\" mt=\"4px\">\n            <Input\n              scale=\"sm\"\n              color={deadlineError ? 'red' : undefined}\n              onBlur={() => {\n                parseCustomDeadline((ttl / 60).toString())\n              }}\n              placeholder={(ttl / 60).toString()}\n              value={deadlineInput}\n              onChange={(e) => parseCustomDeadline(e.target.value)}\n              style={{ boxShadow: 'none' }}\n            />\n          </Box>\n        </Flex>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default SlippageTabs\n","import { Checkbox } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nexport default styled(Checkbox)`\n  &:checked {\n    background-color: ${({ theme }) => theme.colors.primary};\n\n    &:after {\n      border-color: white;\n    }\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: none;\n  }\n\n  &:hover:not(:disabled):not(:checked) {\n    box-shadow: none;\n  }\n`\n","import React, { useState } from 'react'\nimport { Button, Text, Flex, Message, InjectedModalProps } from '@pancakeswap/uikit'\nimport { useExpertModeManager } from 'state/user/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport Modal from '../../styles/Modal'\nimport Checkbox from '../../styles/Checkbox'\n\ninterface ExpertModalProps extends InjectedModalProps {\n  setShowConfirmExpertModal: (boolean) => void\n  setRememberExpertModeAcknowledgement: (boolean) => void\n}\n\nconst ExpertModal: React.FC<ExpertModalProps> = ({\n  setShowConfirmExpertModal,\n  setRememberExpertModeAcknowledgement,\n}) => {\n  const [, toggleExpertMode] = useExpertModeManager()\n  const [isRememberChecked, setIsRememberChecked] = useState(false)\n\n  const { t } = useTranslation()\n\n  return (\n    <Modal\n      title={t('Expert Mode')}\n      onBack={() => setShowConfirmExpertModal(false)}\n      onDismiss={() => setShowConfirmExpertModal(false)}\n      headerBackground=\"gradients.cardHeader\"\n      style={{ maxWidth: '360px' }}\n    >\n      <Message variant=\"warning\" mb=\"24px\">\n        <Text>\n          {t(\n            \"Expert mode turns off the 'Confirm' transaction prompt, and allows high slippage trades that often result in bad rates and lost funds.\",\n          )}\n        </Text>\n      </Message>\n      <Text mb=\"24px\">{t('Only use this mode if you know what you’re doing.')}</Text>\n      <Flex alignItems=\"center\" mb=\"24px\">\n        <Checkbox\n          name=\"confirmed\"\n          type=\"checkbox\"\n          checked={isRememberChecked}\n          onChange={() => setIsRememberChecked(!isRememberChecked)}\n          scale=\"sm\"\n        />\n        <Text ml=\"10px\" color=\"textSubtle\" style={{ userSelect: 'none' }}>\n          {t('Don’t show this again')}\n        </Text>\n      </Flex>\n      <Button\n        mb=\"8px\"\n        id=\"confirm-expert-mode\"\n        onClick={() => {\n          // eslint-disable-next-line no-alert\n          if (window.prompt(`Please type the word \"confirm\" to enable expert mode.`) === 'confirm') {\n            toggleExpertMode()\n            setShowConfirmExpertModal(false)\n            if (isRememberChecked) {\n              setRememberExpertModeAcknowledgement(true)\n            }\n          }\n        }}\n      >\n        {t('Turn On Expert Mode')}\n      </Button>\n      <Button\n        variant=\"secondary\"\n        onClick={() => {\n          setShowConfirmExpertModal(false)\n        }}\n      >\n        {t('Cancel')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default ExpertModal\n","import React from 'react'\nimport { Flex, Text } from '@pancakeswap/uikit'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { useTranslation } from 'contexts/Localization'\nimport { GAS_PRICE_GWEI, GAS_PRICE } from 'state/user/hooks/helpers'\nimport { useGasPriceManager } from 'state/user/hooks'\nimport { Button4 as Button } from '../../styles/Button'\n\nconst GasSettings = () => {\n  const { t } = useTranslation()\n  const [gasPrice, setGasPrice] = useGasPriceManager()\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex mb=\"12px\" alignItems=\"center\">\n        <Text color=\"#5C5C75\">{t('Default Transaction Speed (GWEI)')}</Text>\n        <QuestionHelper\n          text={t(\n            'Adjusts the gas price (transaction fee) for your transaction. Higher GWEI = higher speed = higher fees',\n          )}\n          placement=\"top-start\"\n          ml=\"4px\"\n        />\n      </Flex>\n      <Flex flexWrap=\"wrap\" justifyContent=\"space-between\">\n        <Button\n          mt=\"4px\"\n          scale=\"sm\"\n          onClick={() => {\n            setGasPrice(GAS_PRICE_GWEI.default)\n          }}\n          variant={gasPrice === GAS_PRICE_GWEI.default ? 'primary' : 'tertiary'}\n          data-variant={gasPrice === GAS_PRICE_GWEI.default ? 'primary' : 'tertiary'}\n        >\n          {t('Standard (%gasPrice%)', { gasPrice: GAS_PRICE.default })}\n        </Button>\n        <Button\n          mt=\"4px\"\n          scale=\"sm\"\n          mr=\"10px\"\n          ml=\"10px\"\n          onClick={() => {\n            setGasPrice(GAS_PRICE_GWEI.fast)\n          }}\n          variant={gasPrice === GAS_PRICE_GWEI.fast ? 'primary' : 'tertiary'}\n          data-variant={gasPrice === GAS_PRICE_GWEI.fast ? 'primary' : 'tertiary'}\n        >\n          {t('Fast (%gasPrice%)', { gasPrice: GAS_PRICE.fast })}\n        </Button>\n        <Button\n          mt=\"4px\"\n          scale=\"sm\"\n          onClick={() => {\n            setGasPrice(GAS_PRICE_GWEI.instant)\n          }}\n          variant={gasPrice === GAS_PRICE_GWEI.instant ? 'primary' : 'tertiary'}\n          data-variant={gasPrice === GAS_PRICE_GWEI.instant ? 'primary' : 'tertiary'}\n        >\n          {t('Instant (%gasPrice%)', { gasPrice: GAS_PRICE.instant })}\n        </Button>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default GasSettings\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, Toggle, Flex, Modal, InjectedModalProps } from '@pancakeswap/uikit'\nimport { useAudioModeManager, useExpertModeManager, useUserSingleHopOnly } from 'state/user/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { useSwapActionHandlers } from 'state/swap/hooks'\nimport usePersistState from 'hooks/usePersistState'\nimport QuestionHelper from '../../QuestionHelper'\nimport TransactionSettings from './TransactionSettings'\nimport ExpertModal from './ExpertModal'\nimport GasSettings from './GasSettings'\nimport { ToggleWrapper } from '../../styles/Toggle'\n\n// TODO: Temporary. Once uikit is merged with this style change, this can be removed.\nconst PancakeToggleWrapper = styled.div`\n  .pancakes {\n    position: absolute;\n  }\n`\n\nconst TModal = styled(Modal)`\n  border-radius: 8px;\n`\n\nconst SettingsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const [showConfirmExpertModal, setShowConfirmExpertModal] = useState(false)\n  const [rememberExpertModeAcknowledgement, setRememberExpertModeAcknowledgement] = usePersistState(false, {\n    localStorageKey: 'pancake_expert_mode_remember_acknowledgement',\n  })\n  const [expertMode, toggleExpertMode] = useExpertModeManager()\n  const [singleHopOnly, setSingleHopOnly] = useUserSingleHopOnly()\n  const [audioPlay, toggleSetAudioMode] = useAudioModeManager()\n  const { onChangeRecipient } = useSwapActionHandlers()\n\n  const { t } = useTranslation()\n\n  if (showConfirmExpertModal) {\n    return (\n      <ExpertModal\n        setShowConfirmExpertModal={setShowConfirmExpertModal}\n        onDismiss={onDismiss}\n        setRememberExpertModeAcknowledgement={setRememberExpertModeAcknowledgement}\n      />\n    )\n  }\n\n  const handleExpertModeToggle = () => {\n    if (expertMode) {\n      onChangeRecipient(null)\n      toggleExpertMode()\n    } else if (rememberExpertModeAcknowledgement) {\n      onChangeRecipient(null)\n      toggleExpertMode()\n    } else {\n      setShowConfirmExpertModal(true)\n    }\n  }\n\n  return (\n    <TModal\n      title={t('Settings')}\n      headerBackground=\"gradients.cardHeader\"\n      onDismiss={onDismiss}\n      style={{ maxWidth: '420px', overflowY: 'auto' }}\n    >\n      <Flex flexDirection=\"column\">\n        <Flex pb=\"22px\" flexDirection=\"column\">\n          <Text bold textTransform=\"uppercase\" fontSize=\"14px\" color=\"#8E1673\" mb=\"14px\">\n            {t('Global')}\n          </Text>\n          <GasSettings />\n        </Flex>\n        <Flex pt=\"22px\" flexDirection=\"column\">\n          <Text bold textTransform=\"uppercase\" fontSize=\"14px\" color=\"#8E1673\" mb=\"14px\">\n            {t('Swaps & Liquidity')}\n          </Text>\n          <TransactionSettings />\n        </Flex>\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n          <Flex alignItems=\"center\">\n            <Text>{t('Expert Mode')}</Text>\n            <QuestionHelper\n              text={t('Bypasses confirmation modals and allows high slippage trades. Use at your own risk.')}\n              placement=\"top-start\"\n              ml=\"4px\"\n            />\n          </Flex>\n          <ToggleWrapper checked={expertMode}>\n            <Toggle id=\"toggle-expert-mode-button\" scale=\"md\" checked={expertMode} onChange={handleExpertModeToggle} />\n          </ToggleWrapper>\n        </Flex>\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n          <Flex alignItems=\"center\">\n            <Text>{t('Disable Multihops')}</Text>\n            <QuestionHelper text={t('Restricts swaps to direct pairs only.')} placement=\"top-start\" ml=\"4px\" />\n          </Flex>\n          <ToggleWrapper checked={singleHopOnly}>\n            <Toggle\n              id=\"toggle-disable-multihop-button\"\n              checked={singleHopOnly}\n              scale=\"md\"\n              onChange={() => {\n                setSingleHopOnly(!singleHopOnly)\n              }}\n            />\n          </ToggleWrapper>\n        </Flex>\n      </Flex>\n    </TModal>\n  )\n}\n\nexport default SettingsModal\n","import React from 'react'\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\n\nconst CogIcon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 25 25\" {...props}>\n      <path\n        className=\"cls-1\"\n        d=\"M12.61,16.44A3.45,3.45,0,0,1,9.16,13a3.49,3.49,0,0,1,.26-1.32A3.47,3.47,0,0,1,11.29,9.8a3.51,3.51,0,0,1,3.76.75h0a3.45,3.45,0,0,1-2.44,5.89Zm0-5.4a1.93,1.93,0,0,0-.75.15,2,2,0,0,0-.63.42,2,2,0,0,0,0,2.76,2,2,0,0,0,2.76,0A2,2,0,0,0,12.61,11Z\"\n      />\n      <path\n        className=\"cls-1\"\n        d=\"M14,22.74H11.2a1.66,1.66,0,0,1-1.63-1.42l-.22-1.51c0-.06-.08-.1-.1-.12a7.15,7.15,0,0,1-.76-.44l-.15,0-1.42.57a1.65,1.65,0,0,1-1.16,0,1.69,1.69,0,0,1-.89-.73L3.46,16.64a1.66,1.66,0,0,1-.19-1.14,1.68,1.68,0,0,1,.61-1l1.25-1c0-.18,0-.37,0-.55h0c0-.18,0-.36,0-.54l-1.26-1a1.71,1.71,0,0,1-.6-1,1.68,1.68,0,0,1,.19-1.14L4.87,6.89a1.69,1.69,0,0,1,.89-.73,1.63,1.63,0,0,1,1.15,0l1.43.57.15,0a7.15,7.15,0,0,1,.76-.44l.1-.12.22-1.52a1.72,1.72,0,0,1,.55-1,1.66,1.66,0,0,1,1.08-.4H14a1.64,1.64,0,0,1,1.08.4,1.67,1.67,0,0,1,.55,1l.22,1.52.1.11a7.23,7.23,0,0,1,.76.45l.16,0,1.42-.57a1.63,1.63,0,0,1,1.15,0,1.69,1.69,0,0,1,.89.73l1.41,2.44A1.63,1.63,0,0,1,22,10.47a1.66,1.66,0,0,1-.6,1l-1.26,1c0,.18,0,.37,0,.55s0,.37,0,.55l1.26,1a1.66,1.66,0,0,1,.6,1,1.59,1.59,0,0,1-.19,1.13l-1.41,2.45a1.69,1.69,0,0,1-.89.73,1.65,1.65,0,0,1-1.16,0l-1.41-.57-.16,0a5.77,5.77,0,0,1-.76.44l-.1.12-.22,1.52a1.67,1.67,0,0,1-.55,1A1.64,1.64,0,0,1,14,22.74Zm-5.63-5h.19a1.79,1.79,0,0,1,.75.28,5,5,0,0,0,.6.36,1.68,1.68,0,0,1,.91,1.24l.22,1.51a.15.15,0,0,0,.14.13H14a.11.11,0,0,0,.09,0,.15.15,0,0,0,.06-.09l.21-1.51a1.79,1.79,0,0,1,.31-.75,1.76,1.76,0,0,1,.62-.5A5.08,5.08,0,0,0,15.9,18a1.69,1.69,0,0,1,.74-.27,1.57,1.57,0,0,1,.8.1l1.43.57a.17.17,0,0,0,.1,0,.13.13,0,0,0,.08-.07l1.41-2.44a.16.16,0,0,0,0-.1.22.22,0,0,0-.05-.08l-1.59-1.25a.75.75,0,0,1-.29-.68,5.25,5.25,0,0,0,.06-.79,5.16,5.16,0,0,0-.06-.79.75.75,0,0,1,.29-.68l1.58-1.25a.16.16,0,0,0,.06-.08.2.2,0,0,0,0-.11L19.05,7.64A.16.16,0,0,0,19,7.58a.14.14,0,0,0-.11,0l-1.41.57a1.74,1.74,0,0,1-.81.1A1.67,1.67,0,0,1,15.89,8a6.56,6.56,0,0,0-.59-.35,1.67,1.67,0,0,1-.6-.49,1.74,1.74,0,0,1-.32-.74l-.21-1.53a.22.22,0,0,0-.05-.08.14.14,0,0,0-.1,0H11.2a.14.14,0,0,0-.14.13l-.22,1.51a1.67,1.67,0,0,1-.93,1.25A6.08,6.08,0,0,0,9.32,8a1.68,1.68,0,0,1-1.53.17L6.36,7.58a.11.11,0,0,0-.11,0,.16.16,0,0,0-.08.06L4.76,10.08a.22.22,0,0,0,0,.11.24.24,0,0,0,.06.09l1.59,1.24a.75.75,0,0,1,.28.69,5.12,5.12,0,0,0-.06.78,6.83,6.83,0,0,0,.06.79.77.77,0,0,1-.28.68L4.8,15.7a.24.24,0,0,0-.06.09l0,.1,1.41,2.45a.16.16,0,0,0,.08.06.14.14,0,0,0,.11,0l1.42-.57A1.62,1.62,0,0,1,8.39,17.71Z\"\n      />\n    </Svg>\n  )\n}\n\nexport default CogIcon\n","import React from 'react'\nimport { Flex, IconButton, useModal } from '@pancakeswap/uikit'\nimport SettingsModal from './SettingsModal'\nimport CogIcon from './CogIcon'\n\nconst GlobalSettings = () => {\n  const [onPresentSettingsModal] = useModal(<SettingsModal />)\n\n  return (\n    <Flex>\n      <IconButton onClick={onPresentSettingsModal} variant=\"text\" scale=\"sm\" mr=\"8px\">\n        <CogIcon height={22} width={22} color=\"textSubtle\" />\n      </IconButton>\n    </Flex>\n  )\n}\n\nexport default GlobalSettings\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Flex, Heading, IconButton, ArrowBackIcon, NotificationDot } from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport { useExpertModeManager } from 'state/user/hooks'\nimport GlobalSettings from 'components/Menu/GlobalSettings'\n// import Transactions from './Transactions'\nimport QuestionHelper from '../QuestionHelper'\n\ninterface Props {\n  title: string\n  subtitle: string\n  helper?: string\n  backTo?: string\n  noConfig?: boolean\n}\n\nconst AppHeaderContainer = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  padding: 24px;\n  width: 100%;\n`\n\nconst AppHeader: React.FC<Props> = ({ title, subtitle, helper, backTo, noConfig = false }) => {\n  const [expertMode] = useExpertModeManager()\n\n  return (\n    <AppHeaderContainer>\n      <Flex alignItems=\"center\" mr={noConfig ? 0 : '16px'}>\n        {backTo && (\n          <IconButton as={Link} to={backTo}>\n            <ArrowBackIcon width=\"32px\" />\n          </IconButton>\n        )}\n        <Flex flexDirection=\"column\">\n          <Heading as=\"h2\" mb=\"8px\">\n            {title}\n          </Heading>\n          <Flex alignItems=\"center\">\n            {helper && <QuestionHelper text={helper} mr=\"4px\" />}\n            <Text color=\"textSubtle\" fontSize=\"14px\">\n              {subtitle}\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n      {!noConfig && (\n        <Flex alignItems=\"center\">\n          <NotificationDot show={expertMode}>\n            <GlobalSettings />\n          </NotificationDot>\n        </Flex>\n      )}\n    </AppHeaderContainer>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card } from '@pancakeswap/uikit'\n\nexport const BodyWrapper = styled(Card)`\n  border-radius: 4px;\n  max-width: 436px;\n  width: 100%;\n  z-index: 1;\n  padding: 0;\n\n  > div {\n    border-radius: 4px;\n  }\n`\n\n/**\n * The styled container element that wraps the content of most pages and the tabs.\n */\nexport default function AppBody({ children }: { children: React.ReactNode }) {\n  return <BodyWrapper>{children}</BodyWrapper>\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { BlockState } from '../types'\n\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (state, action: PayloadAction<number>) => {\n      if (state.initialBlock === 0) {\n        state.initialBlock = action.payload\n      }\n\n      state.currentBlock = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","import sample from 'lodash/sample'\n\n// Array of available nodes to connect to\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  return sample(nodes)\n}\n\nexport default getNodeUrl\n","const ENS_NAME_REGEX = /^(([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\\.)+)eth(\\/.*)?$/\n\nexport function parseENSAddress(ensAddress: string): { ensName: string; ensPath: string | undefined } | undefined {\n  const match = ensAddress.match(ENS_NAME_REGEX)\n  if (!match) return undefined\n  return { ensName: `${match[1].toLowerCase()}eth`, ensPath: match[4] }\n}\n\nexport default parseENSAddress\n","/* eslint-disable no-continue */\n/* eslint-disable no-await-in-loop */\nimport { TokenList } from '@uniswap/token-lists'\nimport schema from '@uniswap/token-lists/src/tokenlist.schema.json'\nimport Ajv from 'ajv'\nimport contenthashToUri from './contenthashToUri'\nimport { parseENSAddress } from './ENS/parseENSAddress'\nimport uriToHttp from './uriToHttp'\n\nconst tokenListValidator = new Ajv({ allErrors: true }).compile(schema)\n\n/**\n * Contains the logic for resolving a list URL to a validated token list\n * @param listUrl list url\n * @param resolveENSContentHash resolves an ens name to a contenthash\n */\nexport default async function getTokenList(\n  listUrl: string,\n  resolveENSContentHash: (ensName: string) => Promise<string>,\n): Promise<TokenList> {\n  const parsedENS = parseENSAddress(listUrl)\n  let urls: string[]\n  if (parsedENS) {\n    let contentHashUri\n    try {\n      contentHashUri = await resolveENSContentHash(parsedENS.ensName)\n    } catch (error) {\n      console.error(`Failed to resolve ENS name: ${parsedENS.ensName}`, error)\n      throw new Error(`Failed to resolve ENS name: ${parsedENS.ensName}`)\n    }\n    let translatedUri\n    try {\n      translatedUri = contenthashToUri(contentHashUri)\n    } catch (error) {\n      console.error('Failed to translate contenthash to URI', contentHashUri)\n      throw new Error(`Failed to translate contenthash to URI: ${contentHashUri}`)\n    }\n    urls = uriToHttp(`${translatedUri}${parsedENS.ensPath ?? ''}`)\n  } else {\n    urls = uriToHttp(listUrl)\n  }\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i]\n    const isLast = i === urls.length - 1\n    let response\n    try {\n      response = await fetch(url)\n    } catch (error) {\n      console.error('Failed to fetch list', listUrl, error)\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    if (!response.ok) {\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    const json = await response.json()\n    if (!tokenListValidator(json)) {\n      const validationErrors: string =\n        tokenListValidator.errors?.reduce<string>((memo, error) => {\n          const add = `${(error as any).dataPath} ${error.message ?? ''}`\n          return memo.length > 0 ? `${memo}; ${add}` : `${add}`\n        }, '') ?? 'unknown error'\n      throw new Error(`Token list failed validation: ${validationErrors}`)\n    }\n    return json as TokenList\n  }\n  throw new Error('Unrecognized list URL protocol.')\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { Provider } from '@ethersproject/abstract-provider'\nimport { namehash } from 'ethers/lib/utils'\n\nconst REGISTRAR_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'resolver',\n    outputs: [\n      {\n        name: 'resolverAddress',\n        type: 'address',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\nconst REGISTRAR_ADDRESS = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n\nconst RESOLVER_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'contenthash',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\n\n// cache the resolver contracts since most of them are the public resolver\nfunction resolverContract(resolverAddress: string, provider: Provider): Contract {\n  return new Contract(resolverAddress, RESOLVER_ABI, provider)\n}\n\n/**\n * Fetches and decodes the result of an ENS contenthash lookup on mainnet to a URI\n * @param ensName to resolve\n * @param provider provider to use to fetch the data\n */\nexport default async function resolveENSContentHash(ensName: string, provider: Provider): Promise<string> {\n  const ensRegistrarContract = new Contract(REGISTRAR_ADDRESS, REGISTRAR_ABI, provider)\n  const hash = namehash(ensName)\n  const resolverAddress = await ensRegistrarContract.resolver(hash)\n  return resolverContract(resolverAddress, provider).contenthash(hash)\n}\n","import { nanoid } from '@reduxjs/toolkit'\nimport { ChainId } from '@awswap/sdk'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch } from '../state'\nimport { fetchTokenList } from '../state/lists/actions'\nimport getTokenList from '../utils/getTokenList'\nimport resolveENSContentHash from '../utils/ENS/resolveENSContentHash'\nimport useWeb3Provider from './useActiveWeb3React'\n\nfunction useFetchListCallback(): (listUrl: string, sendDispatch?: boolean) => Promise<TokenList> {\n  const { library } = useWeb3Provider()\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const ensResolver = useCallback(\n    (ensName: string) => {\n      if (chainId !== ChainId.MAINNET) {\n        throw new Error('Could not construct mainnet ENS resolver')\n      }\n      return resolveENSContentHash(ensName, library)\n    },\n    [chainId, library],\n  )\n\n  // note: prevent dispatch if using for list search or unsupported list\n  return useCallback(\n    async (listUrl: string, sendDispatch = true) => {\n      const requestId = nanoid()\n      if (sendDispatch) {\n        dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\n      }\n      return getTokenList(listUrl, ensResolver)\n        .then((tokenList) => {\n          if (sendDispatch) {\n            dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\n          }\n          return tokenList\n        })\n        .catch((error) => {\n          console.error(`Failed to get list at url ${listUrl}`, error)\n          if (sendDispatch) {\n            dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\n          }\n          throw error\n        })\n    },\n    [dispatch, ensResolver],\n  )\n}\n\nexport default useFetchListCallback\n","import React, { createContext, ReactNode, useCallback, useState } from 'react'\nimport { kebabCase } from 'lodash'\nimport { Toast, toastTypes } from '@pancakeswap/uikit'\nimport { ToastContextApi } from './types'\n\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\n\nexport const ToastsProvider: React.FC = ({ children }) => {\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\n\n  const toast = useCallback(\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\n      setToasts((prevToasts) => {\n        const id = kebabCase(title)\n\n        // Remove any existing toasts with the same id\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\n\n        return [\n          {\n            id,\n            title,\n            description,\n            type,\n          },\n          ...currentToasts,\n        ]\n      })\n    },\n    [setToasts],\n  )\n\n  const toastError = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.DANGER })\n  }\n  const toastInfo = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.INFO })\n  }\n  const toastSuccess = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.SUCCESS })\n  }\n  const toastWarning = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.WARNING })\n  }\n  const clear = () => setToasts([])\n  const remove = (id: string) => {\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\n  }\n\n  return (\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\n      {children}\n    </ToastsContext.Provider>\n  )\n}\n","import React from 'react'\nimport { ToastContainer } from '@pancakeswap/uikit'\nimport useToast from 'hooks/useToast'\n\nconst ToastListener = () => {\n  const { toasts, remove } = useToast()\n\n  const handleRemove = (id: string) => remove(id)\n\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\n}\n\nexport default ToastListener\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { escapeRegExp } from '../../utils'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: transparent;\n  font-size: 16px;\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  const { t } = useTranslation()\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={(event) => {\n        // replace commas with periods, because we exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title={t('Token Amount')}\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n","import React from 'react'\nimport { Currency, Pair } from '@awswap/sdk'\nimport { Button, ChevronDownIcon, Text, useModal, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal'\nimport { CurrencyLogo, DoubleCurrencyLogo } from '../Logo'\n\nimport { RowBetween } from '../Layout/Row'\nimport { Input as NumericalInput } from './NumericalInput'\n\nconst InputRow = styled.div<{ selected: boolean }>`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\n`\nconst CurrencySelectButton = styled(Button).attrs({ variant: 'text', scale: 'sm' })`\n  padding: 0 0.5rem;\n`\nconst LabelRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n`\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n  // background-color: ${({ theme }) => theme.colors.background};\n  z-index: 1;\n`\nconst Container = styled.div<{ hideInput: boolean }>`\n  border-radius: 16px;\n  // background-color: #fff;\n`\ninterface CurrencyInputPanelProps {\n  value: string\n  onUserInput: (value: string) => void\n  onMax?: () => void\n  showMaxButton: boolean\n  label?: string\n  onCurrencySelect: (currency: Currency) => void\n  currency?: Currency | null\n  disableCurrencySelect?: boolean\n  hideBalance?: boolean\n  pair?: Pair | null\n  hideInput?: boolean\n  otherCurrency?: Currency | null\n  id: string\n  showCommonBases?: boolean\n}\nexport default function CurrencyInputPanel({\n  value,\n  onUserInput,\n  onMax,\n  showMaxButton,\n  label,\n  onCurrencySelect,\n  currency,\n  disableCurrencySelect = false,\n  hideBalance = false,\n  pair = null, // used for double token logo\n  hideInput = false,\n  otherCurrency,\n  id,\n  showCommonBases,\n}: CurrencyInputPanelProps) {\n  const { account } = useActiveWeb3React()\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  const { t } = useTranslation()\n  const translatedLabel = label || t('Input')\n\n  const [onPresentCurrencyModal] = useModal(\n    <CurrencySearchModal\n      onCurrencySelect={onCurrencySelect}\n      selectedCurrency={currency}\n      otherSelectedCurrency={otherCurrency}\n      showCommonBases={showCommonBases}\n    />,\n  )\n  return (\n    <InputPanel id={id}>\n      <Container hideInput={hideInput}>\n        {!hideInput && (\n          <LabelRow>\n            <RowBetween>\n              <Text fontSize=\"14px\">{translatedLabel}</Text>\n              {account && (\n                <Text onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\n                  {!hideBalance && !!currency && selectedCurrencyBalance\n                    ? t('Balance: %amount%', { amount: selectedCurrencyBalance?.toSignificant(6) ?? '' })\n                    : ' -'}\n                </Text>\n              )}\n            </RowBetween>\n          </LabelRow>\n        )}\n        <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\n          {!hideInput && (\n            <>\n              <NumericalInput\n                className=\"token-amount-input\"\n                value={value}\n                onUserInput={(val) => {\n                  onUserInput(val)\n                }}\n              />\n              {account && currency && showMaxButton && label !== 'To' && (\n                <Button onClick={onMax} scale=\"sm\" variant=\"text\">\n                  MAX\n                </Button>\n              )}\n            </>\n          )}\n          <CurrencySelectButton\n            selected={!!currency}\n            className=\"open-currency-select-button\"\n            onClick={() => {\n              if (!disableCurrencySelect) {\n                onPresentCurrencyModal()\n              }\n            }}\n          >\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\n              {pair ? (\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={16} margin />\n              ) : currency ? (\n                <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\n              ) : null}\n              {pair ? (\n                <Text id=\"pair\">\n                  {pair?.token0.symbol}:{pair?.token1.symbol}\n                </Text>\n              ) : (\n                <Text id=\"pair\">\n                  {(currency && currency.symbol && currency.symbol.length > 20\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\n                        currency.symbol.length - 5,\n                        currency.symbol.length,\n                      )}`\n                    : currency?.symbol) || t('Select a currency')}\n                </Text>\n              )}\n              {!disableCurrencySelect && <ChevronDownIcon />}\n            </Flex>\n          </CurrencySelectButton>\n        </InputRow>\n      </Container>\n    </InputPanel>\n  )\n}\n","import { useMemo } from 'react'\nimport { Token } from '@awswap/sdk'\nimport { isAddress } from '../../utils'\n\nexport function filterTokens(tokens: Token[], search: string): Token[] {\n  if (search.length === 0) return tokens\n\n  const searchingAddress = isAddress(search)\n\n  if (searchingAddress) {\n    return tokens.filter((token) => token.address === searchingAddress)\n  }\n\n  const lowerSearchParts = search\n    .toLowerCase()\n    .split(/\\s+/)\n    .filter((s) => s.length > 0)\n\n  if (lowerSearchParts.length === 0) {\n    return tokens\n  }\n\n  const matchesSearch = (s: string): boolean => {\n    const sParts = s\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s_) => s_.length > 0)\n\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\n  }\n\n  return tokens.filter((token) => {\n    const { symbol, name } = token\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\n  })\n}\n\nexport function useSortedTokensByQuery(tokens: Token[] | undefined, searchQuery: string): Token[] {\n  return useMemo(() => {\n    if (!tokens) {\n      return []\n    }\n\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s) => s.length > 0)\n\n    if (symbolMatch.length > 1) {\n      return tokens\n    }\n\n    const exactMatches: Token[] = []\n    const symbolSubtrings: Token[] = []\n    const rest: Token[] = []\n\n    // sort tokens by exact match -> subtring on symbol match -> rest\n    tokens.map((token) => {\n      if (token.symbol?.toLowerCase() === symbolMatch[0]) {\n        return exactMatches.push(token)\n      }\n      if (token.symbol?.toLowerCase().startsWith(searchQuery.toLowerCase().trim())) {\n        return symbolSubtrings.push(token)\n      }\n      return rest.push(token)\n    })\n\n    return [...exactMatches, ...symbolSubtrings, ...rest]\n  }, [tokens, searchQuery])\n}\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport { ConnectorNames } from '@pancakeswap/uikit'\nimport { ethers } from 'ethers'\nimport getNodeUrl from './getRpcUrl'\n\nconst POLLING_INTERVAL = 12000\nconst rpcUrl = getNodeUrl()\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: { [chainId]: rpcUrl },\n  bridge: 'https://pancakeswap.bridge.walletconnect.org/',\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL,\n})\n\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  [ConnectorNames.BSC]: bscConnector,\n}\n\nexport const getLibrary = (provider): ethers.providers.Web3Provider => {\n  const library = new ethers.providers.Web3Provider(provider)\n  library.pollingInterval = POLLING_INTERVAL\n  return library\n}\n\n/**\n * BSC Wallet requires a different sign method\n * @see https://docs.binance.org/smart-chain/wallet/wallet_api.html#binancechainbnbsignaddress-string-message-string-promisepublickey-string-signature-string\n */\nexport const signMessage = async (provider: any, account: string, message: string): Promise<string> => {\n  if (window.BinanceChain) {\n    const { signature } = await window.BinanceChain.bnbSign(account, message)\n    return signature\n  }\n\n  /**\n   * Wallet Connect does not sign the message correctly unless you use their method\n   * @see https://github.com/WalletConnect/walletconnect-monorepo/issues/462\n   */\n  if (provider.provider?.wc) {\n    const wcMessage = ethers.utils.hexlify(ethers.utils.toUtf8Bytes(message))\n    const signature = await provider.provider?.wc.signPersonalMessage([wcMessage, account])\n    return signature\n  }\n\n  return provider.getSigner(account).signMessage(message)\n}\n","export default {\n  masterChef: {\n    1280: '0x224B525239669DAd0D2eA5b3ab89CdD48Bf1077d', // AWSwap\n  },\n  sousChef: {\n    1280: '0x000000000000000000000000000000000000dead',\n  },\n  lotteryV2: {\n    1280: '0x000000000000000000000000000000000000dead',\n  },\n  multiCall: {\n    1280: '0xece32251731D91ec737131E875c4b7662de544f8',\n  },\n  pancakeProfile: {\n    1280: '0x000000000000000000000000000000000000dead',\n  },\n  pancakeRabbits: {\n    1280: '0x000000000000000000000000000000000000dead',\n  },\n  bunnyFactory: {\n    1280: '0x000000000000000000000000000000000000dead',\n  },\n  claimRefund: {\n    1280: '0x000000000000000000000000000000000000dead',\n  },\n  pointCenterIfo: {\n    1280: '0x000000000000000000000000000000000000dead',\n  },\n  bunnySpecial: {\n    1280: '0x000000000000000000000000000000000000dead',\n  },\n  tradingCompetition: {\n    1280: '0x000000000000000000000000000000000000dead',\n  },\n  easterNft: {\n    1280: '0x000000000000000000000000000000000000dead',\n  },\n  cakeVault: {\n    1280: '0x000000000000000000000000000000000000dead',\n  },\n  predictions: {\n    1280: '0x000000000000000000000000000000000000dead',\n  },\n  chainlinkOracle: {\n    1280: '0x000000000000000000000000000000000000dead',\n  },\n  bunnySpecialCakeVault: {\n    1280: '0x000000000000000000000000000000000000dead',\n  },\n  bunnySpecialPrediction: {\n    1280: '0x000000000000000000000000000000000000dead',\n  },\n  bunnySpecialLottery: {\n    1280: '0x000000000000000000000000000000000000dead',\n  },\n  farmAuction: {\n    1280: '0x000000000000000000000000000000000000dead',\n  },\n}\n","import { ChainId } from '@awswap/sdk'\nimport addresses from 'config/constants/contracts'\nimport tokens from 'config/constants/tokens'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\n}\n\nexport const getCakeAddress = () => {\n  return getAddress(tokens.usdt.address)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(tokens.who.address)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\nexport const getBunnySpecialCakeVaultAddress = () => {\n  return getAddress(addresses.bunnySpecialCakeVault)\n}\nexport const getBunnySpecialPredictionAddress = () => {\n  return getAddress(addresses.bunnySpecialPrediction)\n}\nexport const getBunnySpecialLotteryAddress = () => {\n  return getAddress(addresses.bunnySpecialLottery)\n}\nexport const getFarmAuctionAddress = () => {\n  return getAddress(addresses.farmAuction)\n}\n","import styled from 'styled-components'\n\nconst Dots = styled.span`\n  &::after {\n    display: inline-block;\n    animation: ellipsis 1.25s infinite;\n    content: '.';\n    width: 1em;\n    text-align: left;\n  }\n  @keyframes ellipsis {\n    0% {\n      content: '.';\n    }\n    33% {\n      content: '..';\n    }\n    66% {\n      content: '...';\n    }\n  }\n`\n\nexport default Dots\n","import identity from 'lodash/identity'\nimport { useEffect, useState } from 'react'\n\ninterface UsePersistStateOptions {\n  localStorageKey: string\n  hydrate?: (value: any) => any\n  dehydrate?: (value: any) => any\n}\n\nconst defaultOptions = {\n  hydrate: identity,\n  dehydrate: identity,\n}\n\n/**\n * Same as \"useState\" but saves the value to local storage each time it changes\n */\nconst usePersistState = (initialValue: any, userOptions: UsePersistStateOptions) => {\n  const { localStorageKey, hydrate, dehydrate } = { ...defaultOptions, ...userOptions }\n  const [value, setValue] = useState(() => {\n    try {\n      const valueFromLS = localStorage.getItem(localStorageKey)\n\n      return valueFromLS ? hydrate(JSON.parse(valueFromLS)) : initialValue\n    } catch (error) {\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem(localStorageKey, JSON.stringify(dehydrate(value)))\n  }, [value, localStorageKey, dehydrate])\n\n  return [value, setValue]\n}\n\nexport default usePersistState\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Token, TokenAmount } from '@awswap/sdk'\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nfunction useTotalSupply(token?: Token): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\n\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\n}\n\nexport default useTotalSupply\n","import merge from 'lodash/merge'\nimport teamsList from 'config/constants/teams'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Team } from 'config/constants/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { TeamsById } from 'state/types'\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\n\nconst profileContract = getProfileContract()\n\nexport const getTeam = async (teamId: number): Promise<Team> => {\n  try {\n    const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = await profileContract.getTeamProfile(teamId)\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\n\n    return merge({}, staticTeamInfo, {\n      isJoinable,\n      name: teamName,\n      users: numberUsers.toNumber(),\n      points: numberPoints.toNumber(),\n    })\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets on-chain data and merges it with the existing static list of teams\n */\nexport const getTeams = async (): Promise<TeamsById> => {\n  try {\n    const teamsById = teamsList.reduce((accum, team) => {\n      return {\n        ...accum,\n        [team.id]: team,\n      }\n    }, {})\n    const nbTeams = await profileContract.numberTeams()\n\n    const calls = []\n    for (let i = 1; i <= nbTeams; i++) {\n      calls.push({\n        address: getPancakeProfileAddress(),\n        name: 'getTeamProfile',\n        params: [i],\n      })\n    }\n    const teamData = await multicallv2(profileABI, calls)\n\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\n\n      return {\n        ...accum,\n        [index + 1]: {\n          name: teamName,\n          users: numberUsers.toNumber(),\n          points: numberPoints.toNumber(),\n          isJoinable,\n        },\n      }\n    }, {})\n\n    return merge({}, teamsById, onChainTeamData)\n  } catch (error) {\n    return null\n  }\n}\n","import { IPFS_GATEWAY } from './nfts'\nimport { Team } from './types'\n\nconst teams: Team[] = [\n  {\n    id: 1,\n    name: 'Syrup Storm',\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\n    images: {\n      lg: 'syrup-storm-lg.png',\n      md: 'syrup-storm-md.png',\n      sm: 'syrup-storm-sm.png',\n      alt: 'syrup-storm-alt.png',\n      ipfs: `${IPFS_GATEWAY}/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png`,\n    },\n    background: 'syrup-storm-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 2,\n    name: 'Fearsome Flippers',\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped, too!\",\n    images: {\n      lg: 'fearsome-flippers-lg.png',\n      md: 'fearsome-flippers-md.png',\n      sm: 'fearsome-flippers-sm.png',\n      alt: 'fearsome-flippers-alt.png',\n      ipfs: `${IPFS_GATEWAY}/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png`,\n    },\n    background: 'fearsome-flippers-bg.svg',\n    textColor: '#FFFFFF',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 3,\n    name: 'Chaotic Cakers',\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\n    images: {\n      lg: 'chaotic-cakers-lg.png',\n      md: 'chaotic-cakers-md.png',\n      sm: 'chaotic-cakers-sm.png',\n      alt: 'chaotic-cakers-alt.png',\n      ipfs: `${IPFS_GATEWAY}/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png`,\n    },\n    background: 'chaotic-cakers-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n]\n\nexport default teams\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryTicket } from 'config/constants/types'\nimport { LotteryUserGraphEntity, LotteryResponse, UserRound } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries, hasRoundBeenClaimed } from './helpers'\nimport { fetchUserTicketsForMultipleRounds } from './getUserTicketsData'\n\nconst MAX_USER_LOTTERIES_REQUEST_SIZE = 100\n\n/* eslint-disable camelcase */\ntype UserLotteriesWhere = { lottery_in?: string[] }\n\nconst applyNodeDataToUserGraphResponse = (\n  userNodeData: { roundId: string; userTickets: LotteryTicket[] }[],\n  userGraphData: UserRound[],\n  lotteryNodeData: LotteryResponse[],\n): UserRound[] => {\n  //   If no graph rounds response - return node data\n  if (userGraphData.length === 0) {\n    return lotteryNodeData.map((nodeRound) => {\n      const ticketDataForRound = userNodeData.find((roundTickets) => roundTickets.roundId === nodeRound.lotteryId)\n      return {\n        endTime: nodeRound.endTime,\n        status: nodeRound.status,\n        lotteryId: nodeRound.lotteryId.toString(),\n        claimed: hasRoundBeenClaimed(ticketDataForRound.userTickets),\n        totalTickets: `${ticketDataForRound.userTickets.length.toString()}`,\n        tickets: ticketDataForRound.userTickets,\n      }\n    })\n  }\n\n  //   Else if there is a graph response - merge with node data where node data is more accurate\n  const mergedResponse = userGraphData.map((graphRound, index) => {\n    const nodeRound = lotteryNodeData[index]\n    // if there is node data for this index, overwrite graph data. Otherwise - return graph data.\n    if (nodeRound) {\n      const ticketDataForRound = userNodeData.find((roundTickets) => roundTickets.roundId === nodeRound.lotteryId)\n      // if isLoading === true, there has been a node error - return graphRound\n      if (!nodeRound.isLoading) {\n        return {\n          endTime: nodeRound.endTime,\n          status: nodeRound.status,\n          lotteryId: nodeRound.lotteryId.toString(),\n          claimed: hasRoundBeenClaimed(ticketDataForRound.userTickets),\n          totalTickets: graphRound.totalTickets,\n          tickets: ticketDataForRound.userTickets,\n        }\n      }\n      return graphRound\n    }\n    return graphRound\n  })\n  return mergedResponse\n}\n\nexport const getGraphLotteryUser = async (\n  account: string,\n  first = MAX_USER_LOTTERIES_REQUEST_SIZE,\n  skip = 0,\n  where: UserLotteriesWhere = {},\n): Promise<LotteryUserGraphEntity> => {\n  let user\n  const blankUser = {\n    account,\n    totalCake: '',\n    totalTickets: '',\n    rounds: [],\n  }\n\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getUserLotteries($account: ID!, $first: Int!, $skip: Int!, $where: Round_filter) {\n          user(id: $account) {\n            id\n            totalTickets\n            totalCake\n            rounds(first: $first, skip: $skip, where: $where, orderDirection: desc, orderBy: block) {\n              id\n              lottery {\n                id\n                endTime\n                status\n              }\n              claimed\n              totalTickets\n            }\n          }\n        }\n      `,\n      { account: account.toLowerCase(), first, skip, where },\n    )\n    const userRes = response.user\n\n    // If no user returned - return blank user\n    if (!userRes) {\n      user = blankUser\n    } else {\n      user = {\n        account: userRes.id,\n        totalCake: userRes.totalCake,\n        totalTickets: userRes.totalTickets,\n        rounds: userRes.rounds.map((round) => {\n          return {\n            lotteryId: round?.lottery?.id,\n            endTime: round?.lottery?.endTime,\n            claimed: round?.claimed,\n            totalTickets: round?.totalTickets,\n            status: round?.lottery?.status,\n          }\n        }),\n      }\n    }\n  } catch (error) {\n    console.error(error)\n    user = blankUser\n  }\n\n  return user\n}\n\nconst getUserLotteryData = async (account: string, currentLotteryId: string): Promise<LotteryUserGraphEntity> => {\n  const idsForTicketsNodeCall = getRoundIdsArray(currentLotteryId)\n  const roundDataAndUserTickets = await fetchUserTicketsForMultipleRounds(idsForTicketsNodeCall, account)\n  const userRoundsNodeData = roundDataAndUserTickets.filter((round) => round.userTickets.length > 0)\n  const idsForLotteriesNodeCall = userRoundsNodeData.map((round) => round.roundId)\n\n  const lotteriesNodeData = await fetchMultipleLotteries(idsForLotteriesNodeCall)\n  const graphResponse = await getGraphLotteryUser(account)\n  const mergedRoundData = applyNodeDataToUserGraphResponse(userRoundsNodeData, graphResponse.rounds, lotteriesNodeData)\n  const graphResponseWithNodeRounds = { ...graphResponse, rounds: mergedRoundData }\n  return graphResponseWithNodeRounds\n}\n\nexport default getUserLotteryData\n","import { useMemo } from 'react'\nimport { ChainId, Token } from '@awswap/sdk'\nimport { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../../index'\nimport { deserializeToken } from './helpers'\n\nexport default function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap?.[chainId as ChainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n","import { Toggle } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nexport default styled(Toggle)`\n  background-color: ${({ theme, checked }) => (checked ? theme.colors.primary : theme.colors.input)};\n`\n\nexport const ToggleWrapper = styled.div<{ checked: boolean }>`\n  > div {\n    background-color: ${({ theme, checked }) => (checked ? theme.colors.primary : theme.colors.input)};\n\n    > * {\n      box-shadow: none !important;\n    }\n  }\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ColumnCenter } from '../Layout/Column'\n\nconst Loading = styled(ColumnCenter)<{ size?: number }>`\n  width: ${({ size }) => (size && `${size}px`) || '128px'};\n  height: ${({ size }) => (size && `${0.73 * size}px`) || '93px'};\n  background: url('/images/loading.gif') no-repeat;\n  background-size: cover;\n`\nconst SpinnerLoading = (props) => {\n  const { size } = props\n  return <Loading size={size} />\n}\n\nexport default SpinnerLoading\n","import { useEffect, useState, useRef } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { simpleRpcProvider } from 'utils/providers'\n// eslint-disable-next-line import/no-unresolved\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\n\n/**\n * Provides a web3 provider with or without user's signer\n * Recreate web3 instance only if the provider change\n */\nconst useActiveWeb3React = (): Web3ReactContextInterface<Web3Provider> => {\n  const { library, chainId, ...web3React } = useWeb3React()\n  const refEth = useRef(library)\n  const [provider, setprovider] = useState(library || simpleRpcProvider)\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setprovider(library || simpleRpcProvider)\n      refEth.current = library\n    }\n  }, [library])\n\n  return { library: provider, chainId: chainId ?? parseInt(process.env.REACT_APP_CHAIN_ID, 10), ...web3React }\n}\n\nexport default useActiveWeb3React\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledNav = styled.nav`\n  margin-bottom: 40px;\n\n  > div {\n    background: #fff;\n    border-color: #fff;\n  }\n\n  a[data-active='true'] {\n    color: #fff;\n    background: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst getActiveIndex = (pathname: string): number => {\n  if (\n    pathname.includes('/pool') ||\n    pathname.includes('/create') ||\n    pathname.includes('/add') ||\n    pathname.includes('/remove') ||\n    pathname.includes('/find') ||\n    pathname.includes('/liquidity')\n  ) {\n    return 1\n  }\n  return 0\n}\n\nconst Nav = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  const activeIndex = getActiveIndex(location.pathname)\n\n  return (\n    <StyledNav>\n      <ButtonMenu activeIndex={activeIndex} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem id=\"swap-nav-link\" to=\"/swap\" as={Link} data-active={activeIndex === 0}>\n          {t('Swap')}\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/pool\" as={Link} data-active={activeIndex === 1}>\n          {t('Liquidity')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </StyledNav>\n  )\n}\n\nexport default Nav\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex } from '@pancakeswap/uikit'\nimport SubNav from 'components/Menu/SubNav'\n\nconst StyledPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  padding: 16px;\n  padding-bottom: 0;\n  min-height: calc(100vh - 64px);\n  //background: ${({ theme }) => theme.colors.gradients.bubblegum};\n  //background: radial-gradient(67.22% 50% at 50% 50%, rgba(128, 194, 255, 0.15) 0%, rgba(245, 228, 255, 0) 100%),\n  //  radial-gradient(67.22% 50% at 50% 50%, rgba(255, 135, 135, 0.15) 0%, rgba(245, 228, 255, 0) 100%);\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    background-size: auto;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 24px;\n    padding-bottom: 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    min-height: calc(100vh - 64px);\n  }\n`\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <StyledPage {...props}>\n      <SubNav />\n      {children}\n      <Flex flexGrow={1} />\n    </StyledPage>\n  )\n}\n\nexport default Page\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string; noLiquidity: boolean }>('mint/typeInputMint')\nexport const resetMintState = createAction<void>('mint/resetMintState')\n","import React from 'react'\nimport {\n  TokenPairImage as UIKitTokenPairImage,\n  TokenPairImageProps as UIKitTokenPairImageProps,\n  TokenImage as UIKitTokenImage,\n  ImageProps,\n} from '@pancakeswap/uikit'\nimport tokens from 'config/constants/tokens'\nimport { Token } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\n\ninterface TokenPairImageProps extends Omit<UIKitTokenPairImageProps, 'primarySrc' | 'secondarySrc'> {\n  primaryToken: Token\n  secondaryToken: Token\n}\n\nconst getImageUrlFromToken = (token: Token) => {\n  const address = getAddress(token.symbol === 'HO' ? tokens.who.address : token.address)\n  return `/images/tokens/${address}.svg`\n}\n\nexport const TokenPairImage: React.FC<TokenPairImageProps> = ({ primaryToken, secondaryToken, ...props }) => {\n  return (\n    <UIKitTokenPairImage\n      primarySrc={getImageUrlFromToken(primaryToken)}\n      secondarySrc={getImageUrlFromToken(secondaryToken)}\n      {...props}\n    />\n  )\n}\n\ninterface TokenImageProps extends ImageProps {\n  token: Token\n}\n\nexport const TokenImage: React.FC<TokenImageProps> = ({ token, ...props }) => {\n  return <UIKitTokenImage src={getImageUrlFromToken(token)} {...props} />\n}\n","import tokens from './tokens'\nimport farms from './farms'\nimport { Ifo, Token } from './types'\n\n// const cakeBnbLpToken: Token = {\n//   symbol: farms[1].lpSymbol,\n//   address: farms[1].lpAddresses,\n//   decimals: 18,\n// }\n\nconst ifos: Ifo[] = [\n  // {\n  //   id: 'kalmar',\n  //   address: '0x1aFB32b76696CdF05593Ca3f3957AEFB23a220FB',\n  //   isActive: true,\n  //   name: 'Kalmar (KALM)',\n  //   poolBasic: {\n  //     saleAmount: '375,000 KALM',\n  //     raiseAmount: '$750,000',\n  //     cakeToBurn: '$375,000',\n  //     distributionRatio: 0.3,\n  //   },\n  //   poolUnlimited: {\n  //     saleAmount: '875,000 KALM',\n  //     raiseAmount: '$2,500,000',\n  //     cakeToBurn: '$1,250,000',\n  //     distributionRatio: 0.7,\n  //   },\n  //   currency: cakeBnbLpToken,\n  //   token: tokens.kalm,\n  //   releaseBlockNumber: 7707736,\n  //   campaignId: '511110000',\n  //   articleUrl: 'https://pancakeswap.medium.com/kalmar-kalm-ifo-to-be-hosted-on-pancakeswap-4540059753e4',\n  //   tokenOfferingPrice: 2.0,\n  //   version: 2,\n  // },\n]\n\nexport default ifos\n","import Nfts, { IPFS_GATEWAY, nftSources } from 'config/constants/nfts'\nimport { Nft, NftType } from 'config/constants/types'\nimport { getAddress } from './addressHelpers'\nimport { getErc721Contract } from './contractHelpers'\n\n/**\n * Gets the identifier key based on the nft address\n * Helpful for looking up the key when all you have is the address\n */\nexport const getIdentifierKeyFromAddress = (nftAddress: string) => {\n  const nftSource = Object.values(nftSources).find((nftSourceEntry) => {\n    const address = getAddress(nftSourceEntry.address)\n    return address === nftAddress\n  })\n\n  return nftSource ? nftSource.identifierKey : null\n}\n\n/**\n * Some sources like Pancake do not return HTTP tokenURI's\n */\nexport const getTokenUrl = (tokenUri: string) => {\n  if (tokenUri.startsWith('ipfs://')) {\n    return `${IPFS_GATEWAY}/${tokenUri.slice(6)}`\n  }\n\n  return tokenUri\n}\n\nexport const getAddressByType = (type: NftType) => {\n  return getAddress(nftSources[type].address)\n}\n\nexport const getTokenUriData = async (nftAddress: string, tokenId: number) => {\n  try {\n    const contract = getErc721Contract(nftAddress)\n    const tokenUri = await contract.tokenURI(tokenId)\n    const uriDataResponse = await fetch(getTokenUrl(tokenUri))\n\n    if (!uriDataResponse.ok) {\n      return null\n    }\n\n    const uriData = await uriDataResponse.json()\n    return uriData\n  } catch (error) {\n    console.error('getTokenUriData', error)\n    return null\n  }\n}\n\nexport const getNftByTokenId = async (nftAddress: string, tokenId: number): Promise<Nft | null> => {\n  const uriData = await getTokenUriData(nftAddress, tokenId)\n  const identifierKey = getIdentifierKeyFromAddress(nftAddress)\n\n  // Bail out early if we have no uriData, identifierKey, or the value does not\n  // exist in the object\n  if (!uriData) {\n    return null\n  }\n\n  if (!identifierKey) {\n    return null\n  }\n\n  if (!uriData[identifierKey]) {\n    return null\n  }\n\n  return Nfts.find((nft) => {\n    return uriData[identifierKey].includes(nft.identifier)\n  })\n}\n","import { useCallback, useState } from 'react'\nimport usePreviousValue from './usePreviousValue'\n\n/**\n * A helper hook to keep track of the time between events\n * Can also be used to force an effect to re-run\n */\nconst useLastUpdated = () => {\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now())\n  const previousLastUpdated = usePreviousValue(lastUpdated)\n\n  const setLastUpdated = useCallback(() => {\n    setStateLastUpdated(Date.now())\n  }, [setStateLastUpdated])\n\n  return { lastUpdated, previousLastUpdated, setLastUpdated }\n}\n\nexport default useLastUpdated\n","import { BigNumber } from 'ethers'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../state'\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp'\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline(): BigNumber | undefined {\n  const ttl = useSelector<AppState, number>((state) => state.user.userDeadline)\n  const blockTimestamp = useCurrentBlockTimestamp()\n  return useMemo(() => {\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\n    return undefined\n  }, [blockTimestamp, ttl])\n}\n","import { BigNumber } from 'ethers'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useMulticallContract } from './useContract'\n\n// gets the current timestamp from the blockchain\nexport default function useCurrentBlockTimestamp(): BigNumber | undefined {\n  const multicall = useMulticallContract()\n  return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\n}\n","import BigNumber from 'bignumber.js'\nimport { Farm, Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\ntype UserData =\n  | Pool['userData']\n  | {\n      allowance: number | string\n      stakingTokenBalance: number | string\n      stakedBalance: number | string\n      pendingReward: number | string\n    }\n\nexport const transformUserData = (userData: UserData) => {\n  return {\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\n  }\n}\n\nexport const transformPool = (pool: Pool): Pool => {\n  const { totalStaked, stakingLimit, userData, ...rest } = pool\n\n  return {\n    ...rest,\n    userData: transformUserData(userData),\n    totalStaked: new BigNumber(totalStaked),\n    stakingLimit: new BigNumber(stakingLimit),\n  } as Pool\n}\n\nexport const getTokenPricesFromFarm = (farms: Farm[]) => {\n  return farms.reduce((prices, farm) => {\n    const quoteTokenAddress = getAddress(farm.quoteToken.address).toLocaleLowerCase()\n    const tokenAddress = getAddress(farm.token.address).toLocaleLowerCase()\n    /* eslint-disable no-param-reassign */\n    if (!prices[quoteTokenAddress]) {\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteToken.busdPrice).toNumber()\n    }\n    if (!prices[tokenAddress]) {\n      prices[tokenAddress] = new BigNumber(farm.token.busdPrice).toNumber()\n    }\n    /* eslint-enable no-param-reassign */\n    return prices\n  }, {})\n}\n","import { TICKET_LIMIT_PER_REQUEST } from 'config/constants/lottery'\nimport { LotteryTicket } from 'config/constants/types'\nimport { UserTicketsResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\n\nconst lotteryContract = getLotteryV2Contract()\n\nexport const processRawTicketsResponse = (ticketsResponse: UserTicketsResponse): LotteryTicket[] => {\n  const [ticketIds, ticketNumbers, ticketStatuses] = ticketsResponse\n\n  if (ticketIds?.length > 0) {\n    return ticketIds.map((ticketId, index) => {\n      return {\n        id: ticketId.toString(),\n        number: ticketNumbers[index].toString(),\n        status: ticketStatuses[index],\n      }\n    })\n  }\n  return []\n}\n\nexport const viewUserInfoForLotteryId = async (\n  account: string,\n  lotteryId: string,\n  cursor: number,\n  perRequestLimit: number,\n): Promise<LotteryTicket[]> => {\n  try {\n    const data = await lotteryContract.viewUserInfoForLotteryId(account, lotteryId, cursor, perRequestLimit)\n    return processRawTicketsResponse(data)\n  } catch (error) {\n    console.error('viewUserInfoForLotteryId', error)\n    return null\n  }\n}\n\nexport const fetchUserTicketsForOneRound = async (account: string, lotteryId: string): Promise<LotteryTicket[]> => {\n  let cursor = 0\n  let numReturned = TICKET_LIMIT_PER_REQUEST\n  const ticketData = []\n\n  while (numReturned === TICKET_LIMIT_PER_REQUEST) {\n    // eslint-disable-next-line no-await-in-loop\n    const response = await viewUserInfoForLotteryId(account, lotteryId, cursor, TICKET_LIMIT_PER_REQUEST)\n    cursor += TICKET_LIMIT_PER_REQUEST\n    numReturned = response.length\n    ticketData.push(...response)\n  }\n\n  return ticketData\n}\n\nexport const fetchUserTicketsForMultipleRounds = async (\n  idsToCheck: string[],\n  account: string,\n): Promise<{ roundId: string; userTickets: LotteryTicket[] }[]> => {\n  const ticketsForMultipleRounds = []\n  for (let i = 0; i < idsToCheck.length; i += 1) {\n    const roundId = idsToCheck[i]\n    // eslint-disable-next-line no-await-in-loop\n    const ticketsForRound = await fetchUserTicketsForOneRound(account, roundId)\n    ticketsForMultipleRounds.push({\n      roundId,\n      userTickets: ticketsForRound,\n    })\n  }\n  return ticketsForMultipleRounds\n}\n","import { useEffect, useState } from 'react'\n\nconst VISIBILITY_STATE_SUPPORTED = 'visibilityState' in document\n\nfunction isWindowVisible() {\n  if (!VISIBILITY_STATE_SUPPORTED) {\n    return true\n  }\n\n  return document.visibilityState === 'visible'\n}\n\n/**\n * Returns whether the window is currently visible to the user.\n */\nexport default function useIsWindowVisible() {\n  const [isVisible, setIsVisible] = useState(isWindowVisible())\n\n  useEffect(() => {\n    if (!VISIBILITY_STATE_SUPPORTED) return undefined\n\n    const handleVisibilityChange = () => {\n      setIsVisible(isWindowVisible())\n    }\n\n    document.addEventListener('visibilitychange', handleVisibilityChange)\n    return () => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange)\n    }\n  }, [setIsVisible])\n\n  return isVisible\n}\n","import { Interface } from '@ethersproject/abi'\nimport ERC20_ABI from './erc20.json'\nimport ERC20_BYTES32_ABI from './erc20_bytes32.json'\n\nconst ERC20_INTERFACE = new Interface(ERC20_ABI)\n\nconst ERC20_BYTES32_INTERFACE = new Interface(ERC20_BYTES32_ABI)\n\nexport default ERC20_INTERFACE\nexport { ERC20_ABI, ERC20_BYTES32_INTERFACE, ERC20_BYTES32_ABI }\n","import CID from 'cids'\nimport { getCodec, rmPrefix } from 'multicodec'\nimport { decode, toB58String } from 'multihashes'\n\nfunction hexToUint8Array(hex: string): Uint8Array {\n  // eslint-disable-next-line no-param-reassign\n  hex = hex.startsWith('0x') ? hex.substr(2) : hex\n  if (hex.length % 2 !== 0) throw new Error('hex must have length that is multiple of 2')\n  const arr = new Uint8Array(hex.length / 2)\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = parseInt(hex.substr(i * 2, 2), 16)\n  }\n  return arr\n}\n\nconst UTF_8_DECODER = new TextDecoder()\n\n/**\n * Returns the URI representation of the content hash for supported codecs\n * @param contenthash to decode\n */\nexport default function contenthashToUri(contenthash: string): string {\n  const buff = hexToUint8Array(contenthash)\n  const codec = getCodec(buff as Buffer) // the typing is wrong for @types/multicodec\n  switch (codec) {\n    case 'ipfs-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      return `ipfs://${toB58String(cid.multihash)}`\n    }\n    case 'ipns-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      const multihash = decode(cid.multihash)\n      if (multihash.name === 'identity') {\n        return `ipns://${UTF_8_DECODER.decode(multihash.digest).trim()}`\n      }\n      return `ipns://${toB58String(cid.multihash)}`\n    }\n    default:\n      throw new Error(`Unrecognized codec: ${codec}`)\n  }\n}\n","import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\n\nconst Row = styled(Box)<{\n  width?: string\n  align?: string\n  justify?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  display: flex;\n  padding: 0;\n  align-items: ${({ align }) => align ?? 'center'};\n  justify-content: ${({ justify }) => justify ?? 'flex-start'};\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n\n  #token-search-input,\n  #list-add-input {\n    border-radius: 8px;\n    background-color: #fff;\n\n    &:focus {\n      box-shadow: none;\n    }\n  }\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\n  flex-wrap: wrap;\n  margin: ${({ gap }) => gap && `-${gap}`};\n  justify-content: ${({ justify }) => justify && justify};\n\n  &.icon:after {\n    position: absolute;\n    content: '';\n    display: block;\n    height: 1px;\n    background-color: #ededf1;\n    left: 16px;\n    right: 16px;\n    z-index: 0;\n  }\n\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\n  width: fit-content;\n  margin: ${({ gap }) => gap && `-${gap}`};\n`\n\nexport default Row\n","import React, { useState, useEffect, useRef } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// Check if the tab is active in the user browser\nconst useIsBrowserTabActive = () => {\n  const isBrowserTabActiveRef = useRef(true)\n\n  useEffect(() => {\n    const onVisibilityChange = () => {\n      isBrowserTabActiveRef.current = !document.hidden\n    }\n\n    window.addEventListener('visibilitychange', onVisibilityChange)\n\n    return () => {\n      window.removeEventListener('visibilitychange', onVisibilityChange)\n    }\n  }, [])\n\n  return isBrowserTabActiveRef\n}\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n  const isBrowserTabActiveRef = useIsBrowserTabActive()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setFast((prev) => prev + 1)\n      }\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setSlow((prev) => prev + 1)\n      }\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT',\n}\n\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('swap/selectCurrency')\nexport const switchCurrencies = createAction<void>('swap/switchCurrencies')\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('swap/typeInput')\nexport const replaceSwapState = createAction<{\n  field: Field\n  typedValue: string\n  inputCurrencyId?: string\n  outputCurrencyId?: string\n  recipient: string | null\n}>('swap/replaceSwapState')\nexport const setRecipient = createAction<{ recipient: string | null }>('swap/setRecipient')\n","import { useEffect, useRef } from 'react'\n\n/**\n * Returns the previous value of the given value\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */\nconst usePreviousValue = (value: any) => {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  }, [value])\n\n  return ref.current\n}\n\nexport default usePreviousValue\n","import React from 'react'\nimport { Currency, Token } from '@awswap/sdk'\nimport { Button, Text, Modal, useModal, InjectedModalProps, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { AutoRow } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { useUnsupportedTokens } from '../hooks/Tokens'\n\ninterface Props extends InjectedModalProps {\n  currencies: (Currency | undefined)[]\n}\n\nconst DetailsFooter = styled.div`\n  padding: 8px 0;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.colors.text};\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  text-align: center;\n`\n\nconst UnsupportedModal: React.FC<Props> = ({ currencies, onDismiss }) => {\n  const { chainId } = useActiveWeb3React()\n  const tokens =\n    chainId && currencies\n      ? currencies.map((currency) => {\n          return wrappedCurrency(currency, chainId)\n        })\n      : []\n\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n\n  return (\n    <Modal title=\"Unsupported Assets\" maxWidth=\"420px\" onDismiss={onDismiss}>\n      <AutoColumn gap=\"lg\">\n        {tokens.map((token) => {\n          return (\n            token &&\n            unsupportedTokens &&\n            Object.keys(unsupportedTokens).includes(token.address) && (\n              <AutoColumn key={token.address?.concat('not-supported')} gap=\"10px\">\n                <AutoRow gap=\"5px\" align=\"center\">\n                  <CurrencyLogo currency={token} size=\"24px\" />\n                  <Text>{token.symbol}</Text>\n                </AutoRow>\n                {chainId && (\n                  <Link external small color=\"primaryDark\" href={getBscScanLink(token.address, 'address', chainId)}>\n                    {token.address}\n                  </Link>\n                )}\n              </AutoColumn>\n            )\n          )\n        })}\n        <AutoColumn gap=\"lg\">\n          <Text>\n            Some assets are not available through this interface because they may not work well with our smart contract\n            or we are unable to allow trading for legal reasons.\n          </Text>\n        </AutoColumn>\n      </AutoColumn>\n    </Modal>\n  )\n}\n\nexport default function UnsupportedCurrencyFooter({ currencies }: { currencies: (Currency | undefined)[] }) {\n  const [onPresentModal] = useModal(<UnsupportedModal currencies={currencies} />)\n\n  return (\n    <DetailsFooter>\n      <Button variant=\"text\" onClick={onPresentModal}>\n        Read more about unsupported assets\n      </Button>\n    </DetailsFooter>\n  )\n}\n","import React, { useState } from 'react'\nimport { HelpIcon } from '@pancakeswap/uikit'\n\nconst BAD_SRCS: { [tokenAddress: string]: true } = {}\n\nexport interface LogoProps extends React.ImgHTMLAttributes<HTMLImageElement> {\n  srcs: string[]\n}\n\n/**\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\n */\nconst Logo: React.FC<LogoProps> = ({ srcs, alt, ...rest }) => {\n  const [, refresh] = useState<number>(0)\n\n  const src: string | undefined = srcs.find((s) => !BAD_SRCS[s])\n\n  if (src) {\n    return (\n      <img\n        {...rest}\n        alt={alt}\n        src={src}\n        onError={() => {\n          if (src) BAD_SRCS[src] = true\n          refresh((i) => i + 1)\n        }}\n      />\n    )\n  }\n\n  return <HelpIcon {...rest} />\n}\n\nexport default Logo\n","import { Modal } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nexport default styled(Modal)`\n  border-radius: 8px;\n`\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst StyledSVG = styled.svg<{ size: string; stroke?: string }>`\n  animation: 2s ${rotate} linear infinite;\n  height: ${({ size }) => size};\n  width: ${({ size }) => size};\n  path {\n    stroke: ${({ stroke, theme }) => stroke ?? theme.colors.primary};\n  }\n`\n\n/**\n * Takes in custom size and stroke for circle color, default to primary color as fill,\n * need ...rest for layered styles on top\n */\nexport default function CircleLoader({\n  size = '16px',\n  stroke,\n  ...rest\n}: {\n  size?: string\n  stroke?: string\n  [k: string]: any\n}) {\n  return (\n    <StyledSVG viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" size={size} stroke={stroke} {...rest}>\n      <path\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\n        strokeWidth=\"2.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </StyledSVG>\n  )\n}\n","import React, { useState } from 'react'\nimport { Token, Currency } from '@awswap/sdk'\nimport { Button, Text, ErrorIcon, Flex, Message, Checkbox, Link, Tag, Grid } from '@pancakeswap/uikit'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { useAddUserToken } from 'state/user/hooks'\nimport { getBscScanLink } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport { ListLogo } from 'components/Logo'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  tokens: Token[]\n  handleCurrencySelect?: (currency: Currency) => void\n}\n\nfunction ImportToken({ tokens, handleCurrencySelect }: ImportProps) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [confirmed, setConfirmed] = useState(false)\n\n  const addToken = useAddUserToken()\n\n  // use for showing import source on inactive tokens\n  const inactiveTokenList = useCombinedInactiveList()\n\n  return (\n    <AutoColumn gap=\"lg\">\n      <Message variant=\"warning\">\n        <Text>\n          {t(\n            'Anyone can create a BEP20 token on BSC with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.',\n          )}\n          <br />\n          <br />\n          {t('If you purchase an arbitrary token, you may be unable to sell it back.')}\n        </Text>\n      </Message>\n\n      {tokens.map((token) => {\n        const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n        const address = token.address\n          ? `${token.address.substring(0, 6)}...${token.address.substring(token.address.length - 4)}`\n          : null\n        return (\n          <Grid key={token.address} gridTemplateRows=\"1fr 1fr 1fr\" gridGap=\"4px\">\n            {list !== undefined ? (\n              <Tag\n                variant=\"success\"\n                outline\n                scale=\"sm\"\n                startIcon={list.logoURI && <ListLogo logoURI={list.logoURI} size=\"12px\" />}\n              >\n                {t('via')} {list.name}\n              </Tag>\n            ) : (\n              <Tag variant=\"failure\" outline scale=\"sm\" startIcon={<ErrorIcon color=\"failure\" />}>\n                {t('Unknown Source')}\n              </Tag>\n            )}\n            <Flex alignItems=\"center\">\n              <Text mr=\"8px\">{token.name}</Text>\n              <Text>({token.symbol})</Text>\n            </Flex>\n            {chainId && (\n              <Flex justifyContent=\"space-between\" width=\"100%\">\n                <Text mr=\"4px\">{address}</Text>\n                <Link href={getBscScanLink(token.address, 'address', chainId)} external>\n                  ({t('View on BscScan')})\n                </Link>\n              </Flex>\n            )}\n          </Grid>\n        )\n      })}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex alignItems=\"center\" onClick={() => setConfirmed(!confirmed)}>\n          <Checkbox\n            scale=\"sm\"\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={confirmed}\n            onChange={() => setConfirmed(!confirmed)}\n          />\n          <Text ml=\"8px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n        <Button\n          variant=\"danger\"\n          disabled={!confirmed}\n          onClick={() => {\n            tokens.map((token) => addToken(token))\n            if (handleCurrencySelect) {\n              handleCurrencySelect(tokens[0])\n            }\n          }}\n          className=\".token-dismiss-button\"\n        >\n          {t('Import')}\n        </Button>\n      </Flex>\n    </AutoColumn>\n  )\n}\n\nexport default ImportToken\n","import { CurrencyAmount, ETHER, JSBI } from '@awswap/sdk'\nimport { MIN_BNB } from '../config/constants'\n\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount): CurrencyAmount | undefined {\n  if (!currencyAmount) return undefined\n  if (currencyAmount.currency === ETHER) {\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_BNB)) {\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_BNB))\n    }\n    return CurrencyAmount.ether(JSBI.BigInt(0))\n  }\n  return currencyAmount\n}\n\nexport default maxAmountSpend\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { SerializedBigNumber } from 'state/types'\n\nexport const BIG_ZERO = new BigNumber(0)\nexport const BIG_ONE = new BigNumber(1)\nexport const BIG_NINE = new BigNumber(9)\nexport const BIG_TEN = new BigNumber(10)\n\nexport const ethersToSerializedBigNumber = (ethersBn: ethers.BigNumber): SerializedBigNumber =>\n  ethersToBigNumber(ethersBn).toJSON()\n\nexport const ethersToBigNumber = (ethersBn: ethers.BigNumber): BigNumber => new BigNumber(ethersBn.toString())\n","import { useMemo } from 'react'\nimport contenthashToUri from 'utils/contenthashToUri'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport uriToHttp from 'utils/uriToHttp'\nimport useENSContentHash from './ENS/useENSContentHash'\n\nexport default function useHttpLocations(uri: string | undefined): string[] {\n  const ens = useMemo(() => (uri ? parseENSAddress(uri) : undefined), [uri])\n  const resolvedContentHash = useENSContentHash(ens?.ensName)\n  return useMemo(() => {\n    if (ens) {\n      return resolvedContentHash.contenthash ? uriToHttp(contenthashToUri(resolvedContentHash.contenthash)) : []\n    }\n    return uri ? uriToHttp(uri) : []\n  }, [ens, resolvedContentHash.contenthash, uri])\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\n\n/**\n * Does a lookup for an ENS name to find its contenthash.\n */\nexport default function useENSContentHash(ensName?: string | null): { loading: boolean; contenthash: string | null } {\n  const ensNodeArgument = useMemo(() => {\n    if (!ensName) return [undefined]\n    try {\n      return ensName ? [namehash(ensName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [ensName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddressResult = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddress = resolverAddressResult.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddress && isZero(resolverAddress) ? undefined : resolverAddress,\n    false,\n  )\n  const contenthash = useSingleCallResult(resolverContract, 'contenthash', ensNodeArgument)\n\n  return {\n    contenthash: contenthash.result?.[0] ?? null,\n    loading: resolverAddressResult.loading || contenthash.loading,\n  }\n}\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport { getLanguageCodeFromLS } from 'contexts/Localization/helpers'\nimport { BIG_TEN } from './bigNumber'\n\n/**\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\n */\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\n}\n\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\n}\n\n/**\n * This function is not really necessary but is used throughout the site.\n */\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  return getBalanceAmount(balance, decimals).toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, displayDecimals?: number) => {\n  return getBalanceAmount(balance, decimals).toFixed(displayDecimals)\n}\n\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\n  const options = {\n    minimumFractionDigits: minPrecision,\n    maximumFractionDigits: maxPrecision,\n  }\n  return number.toLocaleString(undefined, options)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object\n * Note: does NOT round\n */\nexport const formatBigNumber = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const remainder = number.mod(ethers.BigNumber.from(10).pow(decimals - displayDecimals))\n  return formatUnits(number.sub(remainder), decimals)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object with toFixed\n * Note: rounds\n */\nexport const formatBigNumberToFixed = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const formattedString = formatUnits(number, decimals)\n  return (+formattedString).toFixed(displayDecimals)\n}\n\n/**\n * Formats a FixedNumber like BigNumber\n * i.e. Formats 9763410526137450427.1196 into 9.763 (3 display decimals)\n */\nexport const formatFixedNumber = (number: ethers.FixedNumber, displayDecimals = 18, decimals = 18) => {\n  // Remove decimal\n  const [leftSide] = number.toString().split('.')\n  return formatBigNumber(ethers.BigNumber.from(leftSide), displayDecimals, decimals)\n}\n\nexport const formatLocalisedCompactNumber = (number: number): string => {\n  const codeFromStorage = getLanguageCodeFromLS()\n  return new Intl.NumberFormat(codeFromStorage, {\n    notation: 'compact',\n    compactDisplay: 'long',\n    maximumSignificantDigits: 2,\n  }).format(number)\n}\n\nexport default formatLocalisedCompactNumber\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  LIQUIDITY_PERCENT = 'LIQUIDITY_PERCENT',\n  LIQUIDITY = 'LIQUIDITY',\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('burn/typeInputBurn')\n","import styled from 'styled-components'\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  &.icon:after {\n    position: absolute;\n    content: '';\n    display: block;\n    height: 1px;\n    background-color: #ededf1;\n    left: 16px;\n    right: 16px;\n    z-index: 0;\n    bottom: 20px;\n  }\n\n  > svg {\n    z-index: 1;\n  }\n`\n\nexport const AutoColumn = styled.div<{\n  gap?: 'sm' | 'md' | 'lg' | string\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\n}>`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n\n  > div {\n    border-radius: 8px;\n  }\n`\n\nexport default Column\n","import React from 'react'\nimport {\n  Tag,\n  VerifiedIcon,\n  CommunityIcon,\n  RefreshIcon,\n  AutoRenewIcon,\n  TagProps,\n  TimerIcon,\n  BlockIcon,\n  VoteIcon,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst CoreTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Core')}\n    </Tag>\n  )\n}\n\nconst CommunityTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\n      {t('Community')}\n    </Tag>\n  )\n}\n\nconst DualTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textSubtle\" outline {...props}>\n      {t('Dual')}\n    </Tag>\n  )\n}\n\nconst ManualPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Manual')}\n    </Tag>\n  )\n}\n\nconst CompoundingPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Auto')}\n    </Tag>\n  )\n}\n\nconst VoteNowTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" startIcon={<VoteIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Vote Now')}\n    </Tag>\n  )\n}\n\nconst SoonTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"binance\" startIcon={<TimerIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Soon')}\n    </Tag>\n  )\n}\n\nconst ClosedTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textDisabled\" startIcon={<BlockIcon width=\"18px\" color=\"textDisabled\" mr=\"4px\" />} {...props}>\n      {t('Closed')}\n    </Tag>\n  )\n}\n\nexport { CoreTag, CommunityTag, DualTag, ManualPoolTag, CompoundingPoolTag, VoteNowTag, SoonTag, ClosedTag }\n","import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { DefaultTheme } from 'styled-components'\nimport get from 'lodash/get'\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from '@awswap/sdk'\nimport { ROUTER_ADDRESS } from '../config/constants'\nimport { BASE_BSC_SCAN_URLS, BASE_BROWSER_URLS } from '../config'\nimport { TokenAddressMap } from '../state/lists/hooks'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nexport function getBscScanLink(\n  data: string | number,\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  switch (type) {\n    case 'transaction': {\n      return `${BASE_BROWSER_URLS[chainId]}/tx/${data}/internal-transactions`\n    }\n    case 'token': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/token/${data}`\n    }\n    case 'block': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/${data}`\n    }\n    case 'countdown': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/countdown/${data}`\n    }\n    default: {\n      return `${BASE_BROWSER_URLS[chainId]}/address/${data}`\n    }\n  }\n}\n\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address: string, chars = 4): string {\n  const parsed = isAddress(address)\n  if (!parsed) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\n// account is optional\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\n  if (currency === ETHER) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n\nexport const isTouchDevice = (): boolean => {\n  return 'ontouchstart' in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0\n}\n\nexport const getThemeValue =\n  (path: string, fallback?: string | number) =>\n  (theme: DefaultTheme): string =>\n    get(theme, path, fallback)\n\nexport const getExternalLinkProps = (): { target: string; rel: string } => ({\n  target: '_blank',\n  rel: 'noreferrer noopener',\n})\n","export const Latinise = {\n  latin_map: {\n    τ: 't',\n    Τ: 'T',\n  },\n}\n\nexport const latinise = (input: string) => {\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Pair, Percent, Price, TokenAmount } from '@awswap/sdk'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { PairState, usePair } from 'hooks/usePairs'\nimport useTotalSupply from 'hooks/useTotalSupply'\n\nimport { wrappedCurrency, wrappedCurrencyAmount } from 'utils/wrappedCurrency'\nimport { AppDispatch, AppState } from '../index'\nimport { tryParseAmount } from '../swap/hooks'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, typeInput } from './actions'\n\nconst ZERO = JSBI.BigInt(0)\n\nexport function useMintState(): AppState['mint'] {\n  return useSelector<AppState, AppState['mint']>((state) => state.mint)\n}\n\nexport function useMintActionHandlers(noLiquidity: boolean | undefined): {\n  onFieldAInput: (typedValue: string) => void\n  onFieldBInput: (typedValue: string) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onFieldAInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n  const onFieldBInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n\n  return {\n    onFieldAInput,\n    onFieldBInput,\n  }\n}\n\nexport function useDerivedMintInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n): {\n  dependentField: Field\n  currencies: { [field in Field]?: Currency }\n  pair?: Pair | null\n  pairState: PairState\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  price?: Price\n  noLiquidity?: boolean\n  liquidityMinted?: TokenAmount\n  poolTokenPercentage?: Percent\n  error?: string\n} {\n  const { account, chainId } = useActiveWeb3React()\n\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  // tokens\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA ?? undefined,\n      [Field.CURRENCY_B]: currencyB ?? undefined,\n    }),\n    [currencyA, currencyB],\n  )\n\n  // pair\n  const [pairState, pair] = usePair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\n\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n\n  const noLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS || Boolean(totalSupply && JSBI.equal(totalSupply.raw, ZERO))\n\n  // balances\n  const balances = useCurrencyBalances(account ?? undefined, [\n    currencies[Field.CURRENCY_A],\n    currencies[Field.CURRENCY_B],\n  ])\n  const currencyBalances: { [field in Field]?: CurrencyAmount } = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1],\n  }\n\n  // amounts\n  const independentAmount: CurrencyAmount | undefined = tryParseAmount(typedValue, currencies[independentField])\n  const dependentAmount: CurrencyAmount | undefined = useMemo(() => {\n    if (noLiquidity) {\n      if (otherTypedValue && currencies[dependentField]) {\n        return tryParseAmount(otherTypedValue, currencies[dependentField])\n      }\n      return undefined\n    }\n    if (independentAmount) {\n      // we wrap the currencies just to get the price in terms of the other token\n      const wrappedIndependentAmount = wrappedCurrencyAmount(independentAmount, chainId)\n      const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\n        const dependentTokenAmount =\n          dependentField === Field.CURRENCY_B\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\n        return dependentCurrency === ETHER ? CurrencyAmount.ether(dependentTokenAmount.raw) : dependentTokenAmount\n      }\n      return undefined\n    }\n    return undefined\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, chainId, currencyB, pair])\n\n  const parsedAmounts: { [field in Field]: CurrencyAmount | undefined } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\n    }),\n    [dependentAmount, independentAmount, independentField],\n  )\n\n  const price = useMemo(() => {\n    if (noLiquidity) {\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n      if (currencyAAmount && currencyBAmount) {\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, currencyAAmount.raw, currencyBAmount.raw)\n      }\n      return undefined\n    }\n    const wrappedCurrencyA = wrappedCurrency(currencyA, chainId)\n    return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\n  }, [chainId, currencyA, noLiquidity, pair, parsedAmounts])\n\n  // liquidity minted\n  const liquidityMinted = useMemo(() => {\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n    const [tokenAmountA, tokenAmountB] = [\n      wrappedCurrencyAmount(currencyAAmount, chainId),\n      wrappedCurrencyAmount(currencyBAmount, chainId),\n    ]\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\n      return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\n    }\n    return undefined\n  }, [parsedAmounts, chainId, pair, totalSupply])\n\n  const poolTokenPercentage = useMemo(() => {\n    if (liquidityMinted && totalSupply) {\n      return new Percent(liquidityMinted.raw, totalSupply.add(liquidityMinted).raw)\n    }\n    return undefined\n  }, [liquidityMinted, totalSupply])\n\n  let error: string | undefined\n  if (!account) {\n    error = 'Connect Wallet'\n  }\n\n  if (pairState === PairState.INVALID) {\n    error = error ?? 'Invalid pair'\n  }\n\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? 'Enter an amount'\n  }\n\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_A]?.symbol} balance`\n  }\n\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_B]?.symbol} balance`\n  }\n\n  return {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  }\n}\n","import { Currency, CurrencyAmount, Fraction, Percent } from '@awswap/sdk'\nimport React from 'react'\nimport { Button, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { RowBetween, RowFixed } from '../../components/Layout/Row'\nimport { CurrencyLogo } from '../../components/Logo'\nimport { Field } from '../../state/mint/actions'\n\nfunction ConfirmAddModalBottom({\n  noLiquidity,\n  price,\n  currencies,\n  parsedAmounts,\n  poolTokenPercentage,\n  onAdd,\n}: {\n  noLiquidity?: boolean\n  price?: Fraction\n  currencies: { [field in Field]?: Currency }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  poolTokenPercentage?: Percent\n  onAdd: () => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Rates')}</Text>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\n            currencies[Field.CURRENCY_B]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\n            currencies[Field.CURRENCY_A]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Share of Pool')}:</Text>\n        <Text>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Text>\n      </RowBetween>\n      <Button onClick={onAdd} mt=\"20px\">\n        {noLiquidity ? t('Create Pool & Supply') : t('Confirm Supply')}\n      </Button>\n    </>\n  )\n}\n\nexport default ConfirmAddModalBottom\n","import { Currency, Percent, Price } from '@awswap/sdk'\nimport React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { AutoColumn } from '../../components/Layout/Column'\nimport { AutoRow } from '../../components/Layout/Row'\nimport { ONE_BIPS } from '../../config/constants'\nimport { Field } from '../../state/mint/actions'\n\nfunction PoolPriceBar({\n  currencies,\n  noLiquidity,\n  poolTokenPercentage,\n  price,\n}: {\n  currencies: { [field in Field]?: Currency }\n  noLiquidity?: boolean\n  poolTokenPercentage?: Percent\n  price?: Price\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow justify=\"space-around\" gap=\"4px\">\n        <AutoColumn justify=\"center\">\n          <Text>{price?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_B]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_A]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>{price?.invert()?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>\n            {noLiquidity && price\n              ? '100'\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\n            %\n          </Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('Share of Pool')}\n          </Text>\n        </AutoColumn>\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n\nexport default PoolPriceBar\n","import React, { useCallback, useState } from 'react'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from '@awswap/sdk'\nimport { Text, Flex, CardBody, Message, useModal } from '@pancakeswap/uikit'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport { useTranslation } from 'contexts/Localization'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { DoubleCurrencyLogo } from '../../components/Logo'\nimport { AppHeader, AppBody } from '../../components/App'\nimport { MinimalPositionCard } from '../../components/PositionCard'\nimport Row, { RowBetween } from '../../components/Layout/Row'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { ROUTER_ADDRESS } from '../../config/constants'\nimport { PairState } from '../../hooks/usePairs'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { Field } from '../../state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks'\n\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { useGasPrice, useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\nimport Dots from '../../components/Loader/Dots'\nimport ConfirmAddModalBottom from './ConfirmAddModalBottom'\nimport { currencyId } from '../../utils/currencyId'\nimport PoolPriceBar from './PoolPriceBar'\nimport Page from '../Page'\nimport Button from '../../components/styles/Button'\nimport AddIcon from './AddIcon'\n\nexport default function AddLiquidity({\n  match: {\n    params: { currencyIdA, currencyIdB },\n  },\n  history,\n}: RouteComponentProps<{ currencyIdA?: string; currencyIdB?: string }>) {\n  const { account, chainId, library } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const gasPrice = useGasPrice()\n\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\n        (currencyB && currencyEquals(currencyB, WETH[chainId]))),\n  )\n\n  const expertMode = useIsExpertMode()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  const isValid = !error\n\n  // modal and loading\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {},\n  )\n\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {},\n  )\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS)\n\n  const addTransaction = useTransactionAdder()\n\n  async function onAdd() {\n    if (!chainId || !library || !account) return\n    const router = getRouterContract(chainId, library, account)\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\n    }\n\n    let estimate\n    let method: (...args: any) => Promise<TransactionResponse>\n    let args: Array<string | string[] | number>\n    let value: BigNumber | null\n\n    if (currencyA === ETHER || currencyB === ETHER) {\n      const tokenBIsETH = currencyB === ETHER\n      estimate = router.estimateGas.addLiquidityETH\n      method = router.addLiquidityETH\n      args = [\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadline.toHexString(),\n      ]\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\n    } else {\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\n        parsedAmountA.raw.toString(),\n        parsedAmountB.raw.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadline.toHexString(),\n      ]\n      value = null\n    }\n    setAttemptingTxn(true)\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n          gasPrice,\n        }).then((response) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\n              currencies[Field.CURRENCY_A]?.symbol\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\n          })\n\n          setTxHash(response.hash)\n        }),\n      )\n      .catch((err) => {\n        setAttemptingTxn(false)\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (err?.code !== 4001) {\n          console.error(err)\n        }\n      })\n  }\n\n  const modalHeader = () => {\n    return noLiquidity ? (\n      <Flex alignItems=\"center\">\n        <Text fontSize=\"48px\" marginRight=\"10px\">\n          {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol}`}\n        </Text>\n        <DoubleCurrencyLogo\n          currency0={currencies[Field.CURRENCY_A]}\n          currency1={currencies[Field.CURRENCY_B]}\n          size={30}\n        />\n      </Flex>\n    ) : (\n      <AutoColumn>\n        <Flex alignItems=\"center\">\n          <Text fontSize=\"48px\" marginRight=\"10px\">\n            {liquidityMinted?.toSignificant(6)}\n          </Text>\n          <DoubleCurrencyLogo\n            currency0={currencies[Field.CURRENCY_A]}\n            currency1={currencies[Field.CURRENCY_B]}\n            size={30}\n          />\n        </Flex>\n        <Row>\n          <Text fontSize=\"24px\">\n            {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol} Pool Tokens`}\n          </Text>\n        </Row>\n        <Text small textAlign=\"left\" my=\"24px\">\n          {t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\n            slippage: allowedSlippage / 100,\n          })}\n        </Text>\n      </AutoColumn>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\n  const pendingText = t('Supplying %amountA% %symbolA% and %amountB% %symbolB%', {\n    amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n    amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n    symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n  })\n\n  const handleCurrencyASelect = useCallback(\n    (currencyA_: Currency) => {\n      const newCurrencyIdA = currencyId(currencyA_)\n      if (newCurrencyIdA === currencyIdB) {\n        history.push(`/add/${currencyIdB}/${currencyIdA}`)\n      } else {\n        history.push(`/add/${newCurrencyIdA}/${currencyIdB}`)\n      }\n    },\n    [currencyIdB, history, currencyIdA],\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currencyB_: Currency) => {\n      const newCurrencyIdB = currencyId(currencyB_)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          history.push(`/add/${currencyIdB}/${newCurrencyIdB}`)\n        } else {\n          history.push(`/add/${newCurrencyIdB}`)\n        }\n      } else {\n        history.push(`/add/${currencyIdA || 'HO'}/${newCurrencyIdB}`)\n      }\n    },\n    [currencyIdA, history, currencyIdB],\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n  }, [onFieldAInput, txHash])\n\n  const addIsUnsupported = useIsTransactionUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  const [onPresentAddLiquidityModal] = useModal(\n    <TransactionConfirmationModal\n      title={noLiquidity ? t('You are creating a pool') : t('You will receive')}\n      customOnDismiss={handleDismissConfirmation}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={() => <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />}\n      pendingText={pendingText}\n      currencyToAdd={pair?.liquidityToken}\n    />,\n    true,\n    true,\n    'addLiquidityModal',\n  )\n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader\n          title={t('Add Liquidity')}\n          subtitle={t('Add liquidity to receive LP tokens')}\n          helper={t(\n            'Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.',\n          )}\n          backTo=\"/pool\"\n        />\n        <CardBody>\n          <AutoColumn gap=\"20px\">\n            {noLiquidity && (\n              <ColumnCenter>\n                <Message variant=\"warning\">\n                  <div>\n                    <Text bold mb=\"8px\">\n                      {t('You are the first liquidity provider.')}\n                    </Text>\n                    <Text mb=\"8px\">{t('The ratio of tokens you add will set the price of this pool.')}</Text>\n                    <Text>{t('Once you are happy with the rate click supply to review.')}</Text>\n                  </div>\n                </Message>\n              </ColumnCenter>\n            )}\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_A]}\n              onUserInput={onFieldAInput}\n              onMax={() => {\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n              }}\n              onCurrencySelect={handleCurrencyASelect}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n              currency={currencies[Field.CURRENCY_A]}\n              id=\"add-liquidity-input-tokena\"\n              showCommonBases\n            />\n            <ColumnCenter className=\"icon\">\n              <AddIcon width=\"40px\" />\n            </ColumnCenter>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_B]}\n              onUserInput={onFieldBInput}\n              onCurrencySelect={handleCurrencyBSelect}\n              onMax={() => {\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n              }}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n              currency={currencies[Field.CURRENCY_B]}\n              id=\"add-liquidity-input-tokenb\"\n              showCommonBases\n            />\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n              <>\n                <LightCard padding=\"0px\" borderRadius=\"20px\">\n                  <RowBetween padding=\"1rem\">\n                    <Text fontSize=\"14px\">\n                      {noLiquidity ? t('Initial prices and pool share') : t('Prices and pool share')}\n                    </Text>\n                  </RowBetween>{' '}\n                  <LightCard padding=\"1rem\" borderRadius=\"20px\">\n                    <PoolPriceBar\n                      currencies={currencies}\n                      poolTokenPercentage={poolTokenPercentage}\n                      noLiquidity={noLiquidity}\n                      price={price}\n                    />\n                  </LightCard>\n                </LightCard>\n              </>\n            )}\n\n            {addIsUnsupported ? (\n              <Button disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton />\n            ) : (\n              <AutoColumn gap=\"md\">\n                {(approvalA === ApprovalState.NOT_APPROVED ||\n                  approvalA === ApprovalState.PENDING ||\n                  approvalB === ApprovalState.NOT_APPROVED ||\n                  approvalB === ApprovalState.PENDING) &&\n                  isValid && (\n                    <RowBetween>\n                      {approvalA !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveACallback}\n                          disabled={approvalA === ApprovalState.PENDING}\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalA === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                      {approvalB !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveBCallback}\n                          disabled={approvalB === ApprovalState.PENDING}\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalB === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                    </RowBetween>\n                  )}\n                <Button\n                  variant={\n                    !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\n                      ? 'danger'\n                      : 'primary'\n                  }\n                  onClick={() => {\n                    if (expertMode) {\n                      onAdd()\n                    } else {\n                      onPresentAddLiquidityModal()\n                    }\n                  }}\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n                >\n                  {error ?? t('Supply')}\n                </Button>\n              </AutoColumn>\n            )}\n          </AutoColumn>\n        </CardBody>\n      </AppBody>\n      {!addIsUnsupported ? (\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n          </AutoColumn>\n        ) : null\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]} />\n      )}\n    </Page>\n  )\n}\n","import { ChainId, JSBI, Percent, Token } from '@awswap/sdk'\nimport { USDT, WHO, AW } from './tokens'\n\nexport const ROUTER_ADDRESS = '0xB80122C3096AbDd09D43660905895Be41707CC9d'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  [ChainId.MAINNET]: [USDT[ChainId.MAINNET], AW[ChainId.MAINNET], WHO[ChainId.MAINNET]],\n}\n\n/**\n * Addittional bases for specific tokens\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\n */\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n * @example [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  [ChainId.MAINNET]: [USDT[ChainId.MAINNET], AW[ChainId.MAINNET]],\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  [ChainId.MAINNET]: [USDT[ChainId.MAINNET], AW[ChainId.MAINNET]],\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [[USDT[ChainId.MAINNET], AW[ChainId.MAINNET]]],\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much BNB so they end up with <.01\nexport const MIN_BNB: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 BNB\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n\n// SDN OFAC addresses\nexport const BLOCKED_ADDRESSES: string[] = [\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\n  '0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C',\n]\n\nexport { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import React from 'react'\nimport { Box, BoxProps } from '@pancakeswap/uikit'\n\nconst Container: React.FC<BoxProps> = ({ children, ...props }) => (\n  <Box px={['16px', '24px']} mx=\"auto\" maxWidth=\"1200px\" {...props}>\n    {children}\n  </Box>\n)\n\nexport default Container\n","import { ethers } from 'ethers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\n\n// Addresses\nimport {\n  getAddress,\n  getPancakeProfileAddress,\n  getPancakeRabbitsAddress,\n  getBunnyFactoryAddress,\n  getBunnySpecialAddress,\n  getCakeAddress,\n  getLotteryV2Address,\n  getMasterChefAddress,\n  getPointCenterIfoAddress,\n  getClaimRefundAddress,\n  getTradingCompetitionAddress,\n  getEasterNftAddress,\n  getCakeVaultAddress,\n  getPredictionsAddress,\n  getChainlinkOracleAddress,\n  getMulticallAddress,\n  getBunnySpecialCakeVaultAddress,\n  getBunnySpecialPredictionAddress,\n  getBunnySpecialLotteryAddress,\n  getFarmAuctionAddress,\n} from 'utils/addressHelpers'\n\n// ABI\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\nimport bep20Abi from 'config/abi/erc20.json'\nimport erc721Abi from 'config/abi/erc721.json'\nimport lpTokenAbi from 'config/abi/lpToken.json'\nimport cakeAbi from 'config/abi/cake.json'\nimport ifoV1Abi from 'config/abi/ifoV1.json'\nimport ifoV2Abi from 'config/abi/ifoV2.json'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport claimRefundAbi from 'config/abi/claimRefund.json'\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\nimport easterNftAbi from 'config/abi/easterNft.json'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport bunnySpecialCakeVaultAbi from 'config/abi/bunnySpecialCakeVault.json'\nimport bunnySpecialPredictionAbi from 'config/abi/bunnySpecialPrediction.json'\nimport bunnySpecialLotteryAbi from 'config/abi/bunnySpecialLottery.json'\nimport farmAuctionAbi from 'config/abi/farmAuction.json'\nimport { ChainLinkOracleContract, FarmAuctionContract, PredictionsContract } from './types'\n\nconst getContract = (abi: any, address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const signerOrProvider = signer ?? simpleRpcProvider\n  return new ethers.Contract(address, abi, signerOrProvider)\n}\n\nexport const getBep20Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bep20Abi, address, signer)\n}\nexport const getErc721Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(erc721Abi, address, signer)\n}\nexport const getLpContract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lpTokenAbi, address, signer)\n}\nexport const getIfoV1Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV1Abi, address, signer)\n}\nexport const getIfoV2Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV2Abi, address, signer)\n}\nexport const getSouschefContract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  return getContract(abi, getAddress(config.contractAddress), signer)\n}\nexport const getSouschefV2Contract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  return getContract(sousChefV2, getAddress(config.contractAddress), signer)\n}\nexport const getPointCenterIfoContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), signer)\n}\nexport const getCakeContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getCakeAddress(), signer)\n}\nexport const getProfileContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(profileABI, getPancakeProfileAddress(), signer)\n}\nexport const getPancakeRabbitContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), signer)\n}\nexport const getBunnyFactoryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), signer)\n}\nexport const getBunnySpecialContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), signer)\n}\nexport const getLotteryV2Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lotteryV2Abi, getLotteryV2Address(), signer)\n}\nexport const getMasterchefContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(masterChef, getMasterChefAddress(), signer)\n}\nexport const getClaimRefundContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(claimRefundAbi, getClaimRefundAddress(), signer)\n}\nexport const getTradingCompetitionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), signer)\n}\nexport const getEasterNftContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(easterNftAbi, getEasterNftAddress(), signer)\n}\nexport const getCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), signer)\n}\n\nexport const getPredictionsContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(predictionsAbi, getPredictionsAddress(), signer) as PredictionsContract\n}\n\nexport const getChainlinkOracleContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), signer) as ChainLinkOracleContract\n}\nexport const getMulticallContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(MultiCallAbi, getMulticallAddress(), signer)\n}\nexport const getBunnySpecialCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialCakeVaultAbi, getBunnySpecialCakeVaultAddress(), signer)\n}\nexport const getBunnySpecialPredictionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialPredictionAbi, getBunnySpecialPredictionAddress(), signer)\n}\nexport const getBunnySpecialLotteryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialLotteryAbi, getBunnySpecialLotteryAddress(), signer)\n}\nexport const getFarmAuctionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(farmAuctionAbi, getFarmAuctionAddress(), signer) as FarmAuctionContract\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { CollectiblesState } from 'state/types'\nimport { nftSources } from 'config/constants/nfts'\nimport { NftType } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { ethers } from 'ethers'\n\nconst initialState: CollectiblesState = {\n  isInitialized: false,\n  isLoading: true,\n  data: {},\n}\n\ntype NftSourceItem = [number, string]\n\n// Thunks\nexport const fetchWalletNfts = createAsyncThunk<NftSourceItem[], string>(\n  'collectibles/fetchWalletNfts',\n  async (account) => {\n    // For each nft source get nft data\n    const nftSourcePromises = Object.keys(nftSources).map(async (nftSourceType) => {\n      const { address: addressObj } = nftSources[nftSourceType as NftType]\n      const address = getAddress(addressObj)\n      const contract = getErc721Contract(address)\n\n      const getTokenIdAndData = async (index: number) => {\n        try {\n          const tokenIdBn: ethers.BigNumber = await contract.tokenOfOwnerByIndex(account, index)\n          const tokenId = tokenIdBn.toNumber()\n\n          const walletNft = await getNftByTokenId(address, tokenId)\n          return [tokenId, walletNft.identifier]\n        } catch (error) {\n          console.error('getTokenIdAndData', error)\n          return null\n        }\n      }\n\n      const balanceOfResponse = await contract.balanceOf(account)\n      const balanceOf = balanceOfResponse.toNumber()\n\n      if (balanceOf === 0) {\n        return []\n      }\n\n      const nftDataFetchPromises = []\n\n      // For each index get the tokenId and data associated with it\n      for (let i = 0; i < balanceOf; i++) {\n        nftDataFetchPromises.push(getTokenIdAndData(i))\n      }\n\n      const nftData = await Promise.all(nftDataFetchPromises)\n      return nftData\n    })\n\n    const nftSourceData = await Promise.all(nftSourcePromises)\n\n    return nftSourceData.flat()\n  },\n)\n\nexport const collectiblesSlice = createSlice({\n  name: 'collectibles',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchWalletNfts.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchWalletNfts.fulfilled, (state, action) => {\n      state.isLoading = false\n      state.isInitialized = true\n      state.data = action.payload.reduce((accum, association) => {\n        if (!association) {\n          return accum\n        }\n\n        const [tokenId, identifier] = association as NftSourceItem\n\n        return {\n          ...accum,\n          [identifier]: accum[identifier] ? [...accum[identifier], tokenId] : [tokenId],\n        }\n      }, {})\n    })\n  },\n})\n\nexport default collectiblesSlice.reducer\n","import React, { useState } from 'react'\nimport { JSBI, Pair, Percent } from '@awswap/sdk'\nimport {\n  Button,\n  Text,\n  ChevronUpIcon,\n  ChevronDownIcon,\n  Card,\n  CardBody,\n  Flex,\n  CardProps,\n  AddIcon,\n} from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useTotalSupply from '../../hooks/useTotalSupply'\n\nimport { useTokenBalance } from '../../state/wallet/hooks'\nimport { currencyId } from '../../utils/currencyId'\nimport { unwrappedToken } from '../../utils/wrappedCurrency'\n\nimport { LightCard } from '../Card'\nimport { AutoColumn } from '../Layout/Column'\nimport CurrencyLogo from '../Logo/CurrencyLogo'\nimport { DoubleCurrencyLogo } from '../Logo'\nimport { RowBetween, RowFixed } from '../Layout/Row'\nimport { BIG_INT_ZERO } from '../../config/constants'\nimport Dots from '../Loader/Dots'\n\nconst FixedHeightRow = styled(RowBetween)`\n  height: 24px;\n`\n\ninterface PositionCardProps extends CardProps {\n  pair: Pair\n  showUnwrapped?: boolean\n}\n\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <>\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, JSBI.BigInt(0)) ? (\n        <Card>\n          <CardBody>\n            <AutoColumn gap=\"16px\">\n              <FixedHeightRow>\n                <RowFixed>\n                  <Text color=\"secondary\" bold>\n                    {t('LP tokens in your wallet')}\n                  </Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <FixedHeightRow onClick={() => setShowMore(!showMore)}>\n                <RowFixed>\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\n                  <Text small color=\"textSubtle\">\n                    {currency0.symbol}-{currency1.symbol} LP\n                  </Text>\n                </RowFixed>\n                <RowFixed>\n                  <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <AutoColumn gap=\"4px\">\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Share of Pool')}:\n                  </Text>\n                  <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(6)}%` : '-'}</Text>\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency0.symbol })}:\n                  </Text>\n                  {token0Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency1.symbol })}:\n                  </Text>\n                  {token1Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n              </AutoColumn>\n            </AutoColumn>\n          </CardBody>\n        </Card>\n      ) : (\n        <LightCard>\n          <Text fontSize=\"14px\" style={{ textAlign: 'center' }}>\n            <span role=\"img\" aria-label=\"pancake-icon\">\n              🥞\n            </span>{' '}\n            {t(\n              \"By adding liquidity you'll earn 0.17% of all trades on this pair proportional to your share of the pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\",\n            )}\n          </Text>\n        </LightCard>\n      )}\n    </>\n  )\n}\n\nexport default function FullPositionCard({ pair, ...props }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const currency0 = unwrappedToken(pair.token0)\n  const currency1 = unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <Card style={{ borderRadius: '12px' }} {...props}>\n      <Flex justifyContent=\"space-between\" role=\"button\" onClick={() => setShowMore(!showMore)} p=\"16px\">\n        <Flex flexDirection=\"column\">\n          <Flex alignItems=\"center\" mb=\"4px\">\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={20} />\n            <Text bold ml=\"8px\">\n              {!currency0 || !currency1 ? <Dots>Loading</Dots> : `${currency0.symbol}/${currency1.symbol}`}\n            </Text>\n          </Flex>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {userPoolBalance?.toSignificant(4)}\n          </Text>\n        </Flex>\n        {showMore ? <ChevronUpIcon /> : <ChevronDownIcon />}\n      </Flex>\n\n      {showMore && (\n        <AutoColumn gap=\"8px\" style={{ padding: '16px' }}>\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency0} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency0.symbol}\n              </Text>\n            </RowFixed>\n            {token0Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency1} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency1.symbol}\n              </Text>\n            </RowFixed>\n            {token1Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <Text color=\"textSubtle\">Share of pool</Text>\n            <Text>\n              {poolTokenPercentage\n                ? `${poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)}%`\n                : '-'}\n            </Text>\n          </FixedHeightRow>\n\n          {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, BIG_INT_ZERO) && (\n            <Flex flexDirection=\"column\">\n              <Button\n                as={Link}\n                to={`/remove/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"primary\"\n                width=\"100%\"\n                mb=\"8px\"\n              >\n                Remove\n              </Button>\n              <Button\n                as={Link}\n                to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"text\"\n                startIcon={<AddIcon color=\"primary\" />}\n                width=\"100%\"\n              >\n                Add liquidity instead\n              </Button>\n            </Flex>\n          )}\n        </AutoColumn>\n      )}\n    </Card>\n  )\n}\n","import { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n  getBunnySpecialCakeVaultContract,\n  getBunnySpecialPredictionContract,\n  getFarmAuctionContract,\n  getBunnySpecialLotteryContract,\n} from 'utils/contractHelpers'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\n// Imports below migrated from Exchange useContract.ts\nimport { Contract } from '@ethersproject/contracts'\nimport { ChainId, WETH } from '@awswap/sdk'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport ENS_PUBLIC_RESOLVER_ABI from '../config/abi/ens-public-resolver.json'\nimport ENS_ABI from '../config/abi/ens-registrar.json'\nimport { ERC20_BYTES32_ABI } from '../config/abi/erc20'\nimport ERC20_ABI from '../config/abi/erc20.json'\nimport WETH_ABI from '../config/abi/weth.json'\nimport multiCallAbi from '../config/abi/Multicall.json'\nimport { getContract } from '../utils'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV1Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV2Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useERC20 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBep20Contract(address, library.getSigner()), [address, library])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getErc721Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useCake = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeContract(library.getSigner()), [library])\n}\n\nexport const useBunnyFactory = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnyFactoryContract(library.getSigner()), [library])\n}\n\nexport const usePancakeRabbits = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPancakeRabbitContract(library.getSigner()), [library])\n}\n\nexport const useProfile = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getProfileContract(library.getSigner()), [library])\n}\n\nexport const useLotteryV2Contract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getLotteryV2Contract(library.getSigner()), [library])\n}\n\nexport const useMasterchef = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getMasterchefContract(library.getSigner()), [library])\n}\n\nexport const useSousChef = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefContract(id, library.getSigner()), [id, library])\n}\n\nexport const useSousChefV2 = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefV2Contract(id, library.getSigner()), [id, library])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPointCenterIfoContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialContract(library.getSigner()), [library])\n}\n\nexport const useClaimRefundContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getClaimRefundContract(library.getSigner()), [library])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getTradingCompetitionContract(library.getSigner()), [library])\n}\n\nexport const useEasterNftContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getEasterNftContract(library.getSigner()), [library])\n}\n\nexport const useCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const usePredictionsContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPredictionsContract(library.getSigner()), [library])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getChainlinkOracleContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyPredictionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialPredictionContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialLotteryContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialLotteryContract(library.getSigner()), [library])\n}\n\nexport const useFarmAuctionContract = () => {\n  const { account, library } = useActiveWeb3React()\n  // This hook is slightly different from others\n  // Calls were failing if unconnected user goes to farm auction page\n  // Using library instead of library.getSigner() fixes the problem for unconnected users\n  // However, this fix is not ideal, it currently has following behavior:\n  // - If you visit Farm Auction page coming from some other page there are no errors in console (unconnected or connected)\n  // - If you go directly to Farm Auction page\n  //   - as unconnected user you don't see any console errors\n  //   - as connected user you see `unknown account #0 (operation=\"getAddress\", code=UNSUPPORTED_OPERATION, ...` errors\n  //     the functionality of the page is not affected, data is loading fine and you can interact with the contract\n  //\n  // Similar behavior was also noticed on Trading Competition page.\n  return useMemo(() => getFarmAuctionContract(account ? library.getSigner() : library), [library, account])\n}\n\n// Code below migrated from Exchange useContract.ts\n\n// returns null on errors\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  let address: string | undefined\n  if (chainId) {\n    // eslint-disable-next-line default-case\n    switch (chainId) {\n      case ChainId.MAINNET:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n        break\n    }\n  }\n  return useContract(address, ENS_ABI, withSignerIfPossible)\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\n}\n\nexport function useMulticallContract(): Contract | null {\n  return useContract(getMulticallAddress(), multiCallAbi, false)\n}\n","const ARCHIVED_FARMS_START_PID = 139\nconst ARCHIVED_FARMS_END_PID = 250\n\nconst isArchivedPid = (pid: number) => pid >= ARCHIVED_FARMS_START_PID && pid <= ARCHIVED_FARMS_END_PID\n\nexport default isArchivedPid\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, CAKE_PER_YEAR } from 'config'\nimport lpAprs from 'config/constants/lpAprs.json'\n\n/**\n * Get the APR value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APR is NaN or infinite.\n */\nexport const getPoolApr = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n): number => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\n/**\n * Get farm APR value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param cakePriceUsd Cake price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @returns\n */\nexport const getFarmApr = (\n  poolWeight: BigNumber,\n  cakePriceUsd: BigNumber,\n  poolLiquidityUsd: BigNumber,\n  farmAddress: string,\n): { cakeRewardsApr: number; lpRewardsApr: number } => {\n  const yearlyCakeRewardAllocation = CAKE_PER_YEAR.times(poolWeight)\n  const cakeRewardsApr = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\n  let cakeRewardsAprAsNumber = null\n  if (!cakeRewardsApr.isNaN() && cakeRewardsApr.isFinite()) {\n    cakeRewardsAprAsNumber = cakeRewardsApr.toNumber()\n  }\n  const lpRewardsApr = lpAprs[farmAddress?.toLocaleLowerCase()] ?? 0\n  return { cakeRewardsApr: cakeRewardsAprAsNumber, lpRewardsApr }\n}\n\nexport default null\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import styled from 'styled-components'\n\nconst Loading = styled.div`\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px solid #ddd;\n  border-bottom: 8px solid #ddd;\n  width: 20px;\n  height: 20px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport default Loading\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport { Text, TextProps } from '@pancakeswap/uikit'\n\ninterface BalanceProps extends TextProps {\n  value: number\n  decimals?: number\n  unit?: string\n  isDisabled?: boolean\n  prefix?: string\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nconst Balance: React.FC<BalanceProps> = ({\n  value,\n  color = 'text',\n  decimals = 3,\n  isDisabled = false,\n  unit,\n  prefix,\n  onClick,\n  ...props\n}) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\n      <CountUp\n        start={previousValue.current}\n        end={value}\n        prefix={prefix}\n        suffix={unit}\n        decimals={decimals}\n        duration={1}\n        separator=\",\"\n      />\n    </Text>\n  )\n}\n\nexport default Balance\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = Math.abs(seconds)\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Text } from '@pancakeswap/uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid #ededf1;\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n  background: #fff;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n  width: 100%;\n  background: #fff;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\n  cursor: pointer;\n  width: ${({ width }) => width}px;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n  background: #fff;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        // border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border: 1px solid #ededf1;\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        background: #fff;\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: rgba(244, 243, 255, 1);\n  }\n`\n\nexport interface SelectProps {\n  options: OptionProps[]\n  onChange?: (option: OptionProps) => void\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\n  const containerRef = useRef(null)\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(0)\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\n\n  const toggling = (event: React.MouseEvent<HTMLDivElement>) => {\n    setIsOpen(!isOpen)\n    event.stopPropagation()\n  }\n\n  const onOptionClicked = (selectedIndex: number) => () => {\n    setSelectedOptionIndex(selectedIndex)\n    setIsOpen(false)\n\n    if (onChange) {\n      onChange(options[selectedIndex])\n    }\n  }\n\n  useEffect(() => {\n    setContainerSize({\n      width: dropdownRef.current.offsetWidth, // Consider border\n      height: dropdownRef.current.offsetHeight,\n    })\n\n    const handleClickOutside = () => {\n      setIsOpen(false)\n    }\n\n    document.addEventListener('click', handleClickOutside)\n    return () => {\n      document.removeEventListener('click', handleClickOutside)\n    }\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\n      {containerSize.width !== 0 && (\n        <DropDownHeader onClick={toggling}>\n          <Text color=\"#5C5C75\">{options[selectedOptionIndex].label}</Text>\n        </DropDownHeader>\n      )}\n      <ArrowDropDownIcon color=\"#A6A6B7\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option, index) =>\n            index !== selectedOptionIndex ? (\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\n                <Text color=\"#5C5C75\">{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","import { useState, useEffect } from 'react'\n\n/**\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\n * This hook \"shows\" element immediately when the isMounted is true\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\n * delayTime should be the same as animation time in most cases.\n */\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\n  const [shouldRender, setShouldRender] = useState(false)\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>\n    if (isMounted && !shouldRender) {\n      setShouldRender(true)\n    } else if (!isMounted && shouldRender) {\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\n    }\n    return () => clearTimeout(timeoutId)\n  }, [isMounted, delayTime, shouldRender])\n  return shouldRender\n}\n\nexport default useDelayedUnmount\n","import React from 'react'\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\n\nconst ArrowDownIcon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 42 42\" {...props}>\n      <rect x=\"0.502686\" y=\"0.989014\" width=\"40\" height=\"40\" rx=\"20\" fill=\"#32324A\" />\n      <path d=\"M13.8247 20.989H27.1807\" stroke=\"white\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n      <path\n        d=\"M20.5024 27.667L20.5024 14.311\"\n        stroke=\"white\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </Svg>\n  )\n}\n\nexport default ArrowDownIcon\n","import React from 'react'\nimport { ChainId, Currency, currencyEquals, ETHER, Token } from '@awswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\nimport { SUGGESTED_BASES } from '../../config/constants'\nimport { AutoColumn } from '../Layout/Column'\nimport QuestionHelper from '../QuestionHelper'\nimport { AutoRow } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo'\n\nconst BaseWrapper = styled.div<{ disable?: boolean }>`\n  border: 1px solid ${({ theme, disable }) => (disable ? 'transparent' : theme.colors.dropdown)};\n  border-radius: 10px;\n  display: flex;\n  padding: 6px;\n\n  align-items: center;\n  :hover {\n    cursor: ${({ disable }) => !disable && 'pointer'};\n    background-color: ${({ theme, disable }) => !disable && theme.colors.background};\n  }\n\n  background-color: ${({ theme, disable }) => disable && theme.colors.dropdown};\n  opacity: ${({ disable }) => disable && '0.4'};\n`\n\nexport default function CommonBases({\n  chainId,\n  onSelect,\n  selectedCurrency,\n}: {\n  chainId?: ChainId\n  selectedCurrency?: Currency | null\n  onSelect: (currency: Currency) => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow>\n        <Text fontSize=\"14px\">{t('Common bases')}</Text>\n        <QuestionHelper text={t('These tokens are commonly paired with other tokens.')} ml=\"4px\" />\n      </AutoRow>\n      <AutoRow gap=\"auto\">\n        <BaseWrapper\n          onClick={() => {\n            if (!selectedCurrency || !currencyEquals(selectedCurrency, ETHER)) {\n              onSelect(ETHER)\n            }\n          }}\n          disable={selectedCurrency === ETHER}\n        >\n          <CurrencyLogo currency={ETHER} style={{ marginRight: 8 }} />\n          <Text>HO</Text>\n        </BaseWrapper>\n        {(chainId ? SUGGESTED_BASES[chainId] : []).map((token: Token) => {\n          const selected = selectedCurrency instanceof Token && selectedCurrency.address === token.address\n          return (\n            <BaseWrapper onClick={() => !selected && onSelect(token)} disable={selected} key={token.address}>\n              <CurrencyLogo currency={token} style={{ marginRight: 8 }} />\n              <Text>{token.symbol}</Text>\n            </BaseWrapper>\n          )\n        })}\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n","import React, { CSSProperties } from 'react'\nimport { Token } from '@awswap/sdk'\nimport { Button, Text, CheckmarkCircleIcon } from '@pancakeswap/uikit'\nimport { AutoRow, RowFixed } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport { ListLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport styled from 'styled-components'\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens'\nimport { useTranslation } from 'contexts/Localization'\n\nconst TokenSection = styled.div<{ dim?: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto;\n  grid-gap: 16px;\n  align-items: center;\n\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\n`\n\nconst CheckIcon = styled(CheckmarkCircleIcon)`\n  height: 16px;\n  width: 16px;\n  margin-right: 6px;\n  stroke: ${({ theme }) => theme.colors.success};\n`\n\nconst NameOverflow = styled.div`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 140px;\n  font-size: 12px;\n`\n\nexport default function ImportRow({\n  token,\n  style,\n  dim,\n  showImportView,\n  setImportToken,\n}: {\n  token: Token\n  style?: CSSProperties\n  dim?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}) {\n  // globals\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  // check if token comes from list\n  const inactiveTokenList = useCombinedInactiveList()\n  const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n\n  // check if already active on list or local storage tokens\n  const isAdded = useIsUserAddedToken(token)\n  const isActive = useIsTokenActive(token)\n\n  return (\n    <TokenSection style={style}>\n      <CurrencyLogo currency={token} size=\"24px\" style={{ opacity: dim ? '0.6' : '1' }} />\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\n        <AutoRow>\n          <Text>{token.symbol}</Text>\n          <Text color=\"textDisabled\" ml=\"8px\">\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\n          </Text>\n        </AutoRow>\n        {list && list.logoURI && (\n          <RowFixed>\n            <Text small mr=\"4px\" color=\"textSubtle\">\n              {t('via')} {list.name}\n            </Text>\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\n          </RowFixed>\n        )}\n      </AutoColumn>\n      {!isActive && !isAdded ? (\n        <Button\n          width=\"fit-content\"\n          onClick={() => {\n            if (setImportToken) {\n              setImportToken(token)\n            }\n            showImportView()\n          }}\n        >\n          {t('Import')}\n        </Button>\n      ) : (\n        <RowFixed style={{ minWidth: 'fit-content' }}>\n          <CheckIcon />\n          <Text color=\"success\">Active</Text>\n        </RowFixed>\n      )}\n    </TokenSection>\n  )\n}\n","import React, { CSSProperties, MutableRefObject, useCallback, useMemo } from 'react'\nimport { Currency, CurrencyAmount, currencyEquals, ETHER, Token } from '@awswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { FixedSizeList } from 'react-window'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { LightGreyCard } from 'components/Card'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedActiveList } from '../../state/lists/hooks'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport { useIsUserAddedToken, useAllInactiveTokens } from '../../hooks/Tokens'\nimport Column from '../Layout/Column'\nimport { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo'\nimport CircleLoader from '../Loader/CircleLoader'\nimport { isTokenOnList } from '../../utils'\nimport ImportRow from './ImportRow'\n\nfunction currencyKey(currency: Currency): string {\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\n}\n\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 5rem;\n  text-overflow: ellipsis;\n`\n\nconst FixedContentRow = styled.div`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-gap: 16px;\n  align-items: center;\n`\n\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\n  return <StyledBalanceText title={balance.toExact()}>{balance.toSignificant(4)}</StyledBalanceText>\n}\n\nconst MenuItem = styled(RowBetween)<{ disabled: boolean; selected: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) minmax(0, 72px);\n  grid-gap: 8px;\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n  :hover {\n    background-color: ${({ theme, disabled }) => !disabled && theme.colors.background};\n  }\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\n`\n\nfunction CurrencyRow({\n  currency,\n  onSelect,\n  isSelected,\n  otherSelected,\n  style,\n}: {\n  currency: Currency\n  onSelect: () => void\n  isSelected: boolean\n  otherSelected: boolean\n  style: CSSProperties\n}) {\n  const { account } = useActiveWeb3React()\n  const key = currencyKey(currency)\n  const selectedTokenList = useCombinedActiveList()\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\n  const customAdded = useIsUserAddedToken(currency)\n  const balance = useCurrencyBalance(account ?? undefined, currency)\n\n  // only show add or remove buttons if not on selected list\n  return (\n    <MenuItem\n      style={style}\n      className={`token-item-${key}`}\n      onClick={() => (isSelected ? null : onSelect())}\n      disabled={isSelected}\n      selected={otherSelected}\n    >\n      <CurrencyLogo currency={currency} size=\"24px\" />\n      <Column>\n        <Text bold>{currency.symbol}</Text>\n        <Text color=\"textSubtle\" small ellipsis maxWidth=\"200px\">\n          {!isOnSelectedList && customAdded && 'Added by user •'} {currency.name}\n        </Text>\n      </Column>\n      <RowFixed style={{ justifySelf: 'flex-end' }}>\n        {balance ? <Balance balance={balance} /> : account ? <CircleLoader /> : null}\n      </RowFixed>\n    </MenuItem>\n  )\n}\n\nexport default function CurrencyList({\n  height,\n  currencies,\n  selectedCurrency,\n  onCurrencySelect,\n  otherCurrency,\n  fixedListRef,\n  showETH,\n  showImportView,\n  setImportToken,\n  breakIndex,\n}: {\n  height: number\n  currencies: Currency[]\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherCurrency?: Currency | null\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\n  showETH: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n  breakIndex: number | undefined\n}) {\n  const itemData: (Currency | undefined)[] = useMemo(() => {\n    let formatted: (Currency | undefined)[] = showETH ? [Currency.ETHER, ...currencies] : currencies\n    if (breakIndex !== undefined) {\n      formatted = [...formatted.slice(0, breakIndex), undefined, ...formatted.slice(breakIndex, formatted.length)]\n    }\n    return formatted\n  }, [breakIndex, currencies, showETH])\n\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const inactiveTokens: {\n    [address: string]: Token\n  } = useAllInactiveTokens()\n\n  const Row = useCallback(\n    ({ data, index, style }) => {\n      const currency: Currency = data[index]\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\n      const handleSelect = () => onCurrencySelect(currency)\n\n      const token = wrappedCurrency(currency, chainId)\n\n      const showImport = inactiveTokens && token && Object.keys(inactiveTokens).includes(token.address)\n\n      if (index === breakIndex || !data) {\n        return (\n          <FixedContentRow style={style}>\n            <LightGreyCard padding=\"8px 12px\" borderRadius=\"8px\">\n              <RowBetween>\n                <Text small>{t('Expanded results from inactive Token Lists')}</Text>\n                <QuestionHelper\n                  text={t(\n                    \"Tokens from inactive lists. Import specific tokens below or click 'Manage' to activate more lists.\",\n                  )}\n                  ml=\"4px\"\n                />\n              </RowBetween>\n            </LightGreyCard>\n          </FixedContentRow>\n        )\n      }\n\n      if (showImport && token) {\n        return (\n          <ImportRow style={style} token={token} showImportView={showImportView} setImportToken={setImportToken} dim />\n        )\n      }\n      return (\n        <CurrencyRow\n          style={style}\n          currency={currency}\n          isSelected={isSelected}\n          onSelect={handleSelect}\n          otherSelected={otherSelected}\n        />\n      )\n    },\n    [\n      chainId,\n      inactiveTokens,\n      onCurrencySelect,\n      otherCurrency,\n      selectedCurrency,\n      setImportToken,\n      showImportView,\n      breakIndex,\n      t,\n    ],\n  )\n\n  const itemKey = useCallback((index: number, data: any) => currencyKey(data[index]), [])\n\n  return (\n    <FixedSizeList\n      height={height}\n      ref={fixedListRef as any}\n      width=\"100%\"\n      itemData={itemData}\n      itemCount={itemData.length}\n      itemSize={56}\n      itemKey={itemKey}\n    >\n      {Row}\n    </FixedSizeList>\n  )\n}\n","import { Token, TokenAmount } from '@awswap/sdk'\nimport { useMemo } from 'react'\nimport { useAllTokenBalances } from '../../state/wallet/hooks'\n\n// compare two token amounts with highest one coming first\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\n  if (balanceA && balanceB) {\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\n  }\n  if (balanceA && balanceA.greaterThan('0')) {\n    return -1\n  }\n  if (balanceB && balanceB.greaterThan('0')) {\n    return 1\n  }\n  return 0\n}\n\nfunction getTokenComparator(balances: {\n  [tokenAddress: string]: TokenAmount | undefined\n}): (tokenA: Token, tokenB: Token) => number {\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\n    // -1 = a is first\n    // 1 = b is first\n\n    // sort by balances\n    const balanceA = balances[tokenA.address]\n    const balanceB = balances[tokenB.address]\n\n    const balanceComp = balanceComparator(balanceA, balanceB)\n    if (balanceComp !== 0) return balanceComp\n\n    if (tokenA.symbol && tokenB.symbol) {\n      // sort by symbol\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\n    }\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\n  }\n}\n\nfunction useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\n  const balances = useAllTokenBalances()\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\n  return useMemo(() => {\n    if (inverted) {\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\n    }\n    return comparator\n  }, [inverted, comparator])\n}\n\nexport default useTokenComparator\n","import React, { KeyboardEvent, RefObject, useCallback, useMemo, useRef, useState, useEffect } from 'react'\nimport { Currency, ETHER, Token } from '@awswap/sdk'\nimport { Text, Input, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { FixedSizeList } from 'react-window'\nimport { useAudioModeManager } from 'state/user/hooks'\nimport useDebounce from 'hooks/useDebounce'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens, useToken, useIsUserAddedToken, useFoundOnInactiveList } from '../../hooks/Tokens'\nimport { isAddress } from '../../utils'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport Row from '../Layout/Row'\nimport CommonBases from './CommonBases'\nimport CurrencyList from './CurrencyList'\nimport { filterTokens, useSortedTokensByQuery } from './filtering'\nimport useTokenComparator from './sorting'\n\nimport ImportRow from './ImportRow'\n\ninterface CurrencySearchProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}\n\nconst swapSound = new Audio('swap.mp3')\n\nfunction CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showCommonBases,\n  showImportView,\n  setImportToken,\n}: CurrencySearchProps) {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n\n  // refs for fixed size lists\n  const fixedList = useRef<FixedSizeList>()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const debouncedQuery = useDebounce(searchQuery, 200)\n\n  const [invertSearchOrder] = useState<boolean>(false)\n\n  const allTokens = useAllTokens()\n\n  // if they input an address, use it\n  const searchToken = useToken(debouncedQuery)\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken)\n\n  const [audioPlay] = useAudioModeManager()\n\n  const showETH: boolean = useMemo(() => {\n    const s = debouncedQuery.toLowerCase().trim()\n    return s === '' || s === 'h' || s === 'ho'\n  }, [debouncedQuery])\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const filteredTokens: Token[] = useMemo(() => {\n    return filterTokens(Object.values(allTokens), debouncedQuery)\n  }, [allTokens, debouncedQuery])\n\n  const sortedTokens: Token[] = useMemo(() => {\n    return filteredTokens.sort(tokenComparator)\n  }, [filteredTokens, tokenComparator])\n\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      if (audioPlay) {\n        swapSound.play()\n      }\n    },\n    [audioPlay, onCurrencySelect],\n  )\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n\n  useEffect(() => {\n    inputRef.current.focus()\n  }, [])\n\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    fixedList.current?.scrollTo(0)\n  }, [])\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        const s = debouncedQuery.toLowerCase().trim()\n        if (s === 'ho') {\n          handleCurrencySelect(ETHER)\n        } else if (filteredSortedTokens.length > 0) {\n          if (\n            filteredSortedTokens[0].symbol?.toLowerCase() === debouncedQuery.trim().toLowerCase() ||\n            filteredSortedTokens.length === 1\n          ) {\n            handleCurrencySelect(filteredSortedTokens[0])\n          }\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, debouncedQuery],\n  )\n\n  // if no results on main list, show option to expand into inactive\n  const inactiveTokens = useFoundOnInactiveList(debouncedQuery)\n  const filteredInactiveTokens: Token[] = useSortedTokensByQuery(inactiveTokens, debouncedQuery)\n\n  return (\n    <>\n      <div>\n        <AutoColumn gap=\"16px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              placeholder={t('Search name or paste address')}\n              scale=\"lg\"\n              autoComplete=\"off\"\n              value={searchQuery}\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              onKeyDown={handleEnter}\n            />\n          </Row>\n          {showCommonBases && (\n            <CommonBases chainId={chainId} onSelect={handleCurrencySelect} selectedCurrency={selectedCurrency} />\n          )}\n        </AutoColumn>\n        {searchToken && !searchTokenIsAdded ? (\n          <Column style={{ padding: '20px 0', height: '100%' }}>\n            <ImportRow token={searchToken} showImportView={showImportView} setImportToken={setImportToken} />\n          </Column>\n        ) : filteredSortedTokens?.length > 0 || filteredInactiveTokens?.length > 0 ? (\n          <Box margin=\"24px -24px\">\n            <CurrencyList\n              height={390}\n              showETH={showETH}\n              currencies={\n                filteredInactiveTokens ? filteredSortedTokens.concat(filteredInactiveTokens) : filteredSortedTokens\n              }\n              breakIndex={inactiveTokens && filteredSortedTokens ? filteredSortedTokens.length : undefined}\n              onCurrencySelect={handleCurrencySelect}\n              otherCurrency={otherSelectedCurrency}\n              selectedCurrency={selectedCurrency}\n              fixedListRef={fixedList}\n              showImportView={showImportView}\n              setImportToken={setImportToken}\n            />\n          </Box>\n        ) : (\n          <Column style={{ padding: '20px', height: '100%' }}>\n            <Text color=\"textSubtle\" textAlign=\"center\" mb=\"20px\">\n              {t('No results found.')}\n            </Text>\n          </Column>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default CurrencySearch\n","export enum CurrencyModalView {\n  search,\n  manage,\n  importToken,\n  importList,\n}\n\nexport default CurrencyModalView\n","import React, { memo, useCallback, useMemo, useState, useEffect } from 'react'\nimport { Button, Text, CheckmarkIcon, CogIcon, Input, Toggle, LinkExternal, useTooltip } from '@pancakeswap/uikit'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport { TokenList, Version } from '@uniswap/token-lists'\nimport Card from 'components/Card'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport { useTranslation } from 'contexts/Localization'\nimport useFetchListCallback from '../../hooks/useFetchListCallback'\n\nimport { AppDispatch, AppState } from '../../state'\nimport { acceptListUpdate, removeList, disableList, enableList } from '../../state/lists/actions'\nimport { useIsListActive, useAllLists, useActiveListUrls } from '../../state/lists/hooks'\nimport uriToHttp from '../../utils/uriToHttp'\n\nimport Column, { AutoColumn } from '../Layout/Column'\nimport { ListLogo } from '../Logo'\nimport Row, { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyModalView } from './types'\n\nimport { ToggleWrapper } from '../styles/Toggle'\n\nfunction listVersionLabel(version: Version): string {\n  return `v${version.major}.${version.minor}.${version.patch}`\n}\n\nconst Wrapper = styled(Column)`\n  width: 100%;\n  height: 100%;\n`\n\nconst RowWrapper = styled(Row)<{ active: boolean }>`\n  background-color: ${({ active, theme }) => (active ? `transparent` : 'transparent')};\n  border: solid 1px;\n  border-color: ${({ active, theme }) => (active ? theme.colors.primary : theme.colors.tertiary)};\n  transition: 200ms;\n  align-items: center;\n  padding: 1rem;\n  border-radius: 20px;\n`\n\nfunction listUrlRowHTMLId(listUrl: string) {\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\n}\n\nconst ListRow = memo(function ListRow({ listUrl }: { listUrl: string }) {\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n  const dispatch = useDispatch<AppDispatch>()\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl]\n\n  const isActive = useIsListActive(listUrl)\n\n  const { t } = useTranslation()\n\n  const handleAcceptListUpdate = useCallback(() => {\n    if (!pending) return\n    dispatch(acceptListUpdate(listUrl))\n  }, [dispatch, listUrl, pending])\n\n  const handleRemoveList = useCallback(() => {\n    // eslint-disable-next-line no-alert\n    if (window.confirm('Please confirm you would like to remove this list')) {\n      dispatch(removeList(listUrl))\n    }\n  }, [dispatch, listUrl])\n\n  const handleEnableList = useCallback(() => {\n    dispatch(enableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const handleDisableList = useCallback(() => {\n    dispatch(disableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <div>\n      <Text>{list && listVersionLabel(list.version)}</Text>\n      <LinkExternal external href={`https://tokenlists.org/token-list?url=${listUrl}`}>\n        {t('See')}\n      </LinkExternal>\n      <Button variant=\"danger\" scale=\"xs\" onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\n        {t('Remove')}\n      </Button>\n      {pending && (\n        <Button variant=\"text\" onClick={handleAcceptListUpdate} style={{ fontSize: '12px' }}>\n          {t('Update list')}\n        </Button>\n      )}\n    </div>,\n    { placement: 'right-end', trigger: 'click' },\n  )\n\n  if (!list) return null\n\n  return (\n    <RowWrapper active={isActive} key={listUrl} id={listUrlRowHTMLId(listUrl)}>\n      {tooltipVisible && tooltip}\n      {list.logoURI ? (\n        <ListLogo size=\"40px\" style={{ marginRight: '1rem' }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\n      ) : (\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\n      )}\n      <Column style={{ flex: '1' }}>\n        <Row>\n          <Text bold>{list.name}</Text>\n        </Row>\n        <RowFixed mt=\"4px\">\n          <Text fontSize=\"12px\" mr=\"6px\" textTransform=\"lowercase\">\n            {list.tokens.length} {t('Tokens')}\n          </Text>\n          <span ref={targetRef}>\n            <CogIcon color=\"text\" width=\"12px\" />\n          </span>\n        </RowFixed>\n      </Column>\n      <ToggleWrapper checked={isActive}>\n        <Toggle\n          checked={isActive}\n          onChange={() => {\n            if (isActive) {\n              handleDisableList()\n            } else {\n              handleEnableList()\n            }\n          }}\n        />\n      </ToggleWrapper>\n    </RowWrapper>\n  )\n})\n\nconst ListContainer = styled.div`\n  padding: 1rem 0;\n  height: 100%;\n  overflow: auto;\n`\n\nfunction ManageLists({\n  setModalView,\n  setImportList,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [listUrlInput, setListUrlInput] = useState<string>('')\n\n  const { t } = useTranslation()\n\n  const lists = useAllLists()\n\n  // sort by active but only if not visible\n  const activeListUrls = useActiveListUrls()\n  const [activeCopy, setActiveCopy] = useState<string[] | undefined>()\n  useEffect(() => {\n    if (!activeCopy && activeListUrls) {\n      setActiveCopy(activeListUrls)\n    }\n  }, [activeCopy, activeListUrls])\n\n  const handleInput = useCallback((e) => {\n    setListUrlInput(e.target.value)\n  }, [])\n\n  const fetchList = useFetchListCallback()\n\n  const validUrl: boolean = useMemo(() => {\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput))\n  }, [listUrlInput])\n\n  const sortedLists = useMemo(() => {\n    const listUrls = Object.keys(lists)\n    return listUrls\n      .filter((listUrl) => {\n        // only show loaded lists, hide unsupported lists\n        return Boolean(lists[listUrl].current) && !UNSUPPORTED_LIST_URLS.includes(listUrl)\n      })\n      .sort((u1, u2) => {\n        const { current: l1 } = lists[u1]\n        const { current: l2 } = lists[u2]\n\n        // first filter on active lists\n        if (activeCopy?.includes(u1) && !activeCopy?.includes(u2)) {\n          return -1\n        }\n        if (!activeCopy?.includes(u1) && activeCopy?.includes(u2)) {\n          return 1\n        }\n\n        if (l1 && l2) {\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\n            ? -1\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\n            ? 0\n            : 1\n        }\n        if (l1) return -1\n        if (l2) return 1\n        return 0\n      })\n  }, [lists, activeCopy])\n\n  // temporary fetched list for import flow\n  const [tempList, setTempList] = useState<TokenList>()\n  const [addError, setAddError] = useState<string | undefined>()\n\n  useEffect(() => {\n    async function fetchTempList() {\n      fetchList(listUrlInput, false)\n        .then((list) => setTempList(list))\n        .catch(() => setAddError('Error importing list'))\n    }\n    // if valid url, fetch details for card\n    if (validUrl) {\n      fetchTempList()\n    } else {\n      setTempList(undefined)\n      if (listUrlInput !== '') {\n        setAddError('Enter valid list location')\n      }\n    }\n\n    // reset error\n    if (listUrlInput === '') {\n      setAddError(undefined)\n    }\n  }, [fetchList, listUrlInput, validUrl])\n\n  // check if list is already imported\n  const isImported = Object.keys(lists).includes(listUrlInput)\n\n  // set list values and have parent modal switch to import list view\n  const handleImport = useCallback(() => {\n    if (!tempList) return\n    setImportList(tempList)\n    setModalView(CurrencyModalView.importList)\n    setListUrl(listUrlInput)\n  }, [listUrlInput, setImportList, setListUrl, setModalView, tempList])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"14px\">\n        <Row>\n          <Input\n            id=\"list-add-input\"\n            scale=\"lg\"\n            placeholder={t('https:// or ipfs:// or ENS name')}\n            value={listUrlInput}\n            onChange={handleInput}\n          />\n        </Row>\n        {addError ? (\n          <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n            {addError}\n          </Text>\n        ) : null}\n      </AutoColumn>\n      {tempList && (\n        <AutoColumn style={{ paddingTop: 0 }}>\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {tempList.logoURI && <ListLogo logoURI={tempList.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"4px\" style={{ marginLeft: '20px' }}>\n                  <Text bold>{tempList.name}</Text>\n                  <Text color=\"textSubtle\" small textTransform=\"lowercase\">\n                    {tempList.tokens.length} {t('Tokens')}\n                  </Text>\n                </AutoColumn>\n              </RowFixed>\n              {isImported ? (\n                <RowFixed>\n                  <CheckmarkIcon width=\"16px\" mr=\"10px\" />\n                  <Text>{t('Loaded')}</Text>\n                </RowFixed>\n              ) : (\n                <Button width=\"fit-content\" onClick={handleImport}>\n                  {t('Import')}\n                </Button>\n              )}\n            </RowBetween>\n          </Card>\n        </AutoColumn>\n      )}\n      <ListContainer>\n        <AutoColumn gap=\"md\">\n          {sortedLists.map((listUrl) => (\n            <ListRow key={listUrl} listUrl={listUrl} />\n          ))}\n        </AutoColumn>\n      </ListContainer>\n    </Wrapper>\n  )\n}\n\nexport default ManageLists\n","import React, { useRef, RefObject, useCallback, useState, useMemo } from 'react'\nimport { Token } from '@awswap/sdk'\nimport { Text, CloseIcon, IconButton, LinkExternal, Input, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport Row, { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { useToken } from 'hooks/Tokens'\nimport { useRemoveUserAddedToken } from 'state/user/hooks'\nimport useUserAddedTokens from 'state/user/hooks/useUserAddedTokens'\nimport { CurrencyLogo } from 'components/Logo'\nimport { getBscScanLink, isAddress } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport ImportRow from './ImportRow'\nimport { CurrencyModalView } from './types'\nimport Button from '../styles/Button'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: calc(100% - 60px);\n  position: relative;\n  padding-bottom: 60px;\n`\n\nconst Footer = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport default function ManageTokens({\n  setModalView,\n  setImportToken,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n  }, [])\n\n  // if they input an address, use it\n  const searchToken = useToken(searchQuery)\n\n  // all tokens for local list\n  const userAddedTokens: Token[] = useUserAddedTokens()\n  const removeToken = useRemoveUserAddedToken()\n\n  const handleRemoveAll = useCallback(() => {\n    if (chainId && userAddedTokens) {\n      userAddedTokens.map((token) => {\n        return removeToken(chainId, token.address)\n      })\n    }\n  }, [removeToken, userAddedTokens, chainId])\n\n  const tokenList = useMemo(() => {\n    return (\n      chainId &&\n      userAddedTokens.map((token) => (\n        <RowBetween key={token.address} width=\"100%\">\n          <RowFixed>\n            <CurrencyLogo currency={token} size=\"20px\" />\n            <Link external href={getBscScanLink(token.address, 'address', chainId)} color=\"textSubtle\" ml=\"10px\">\n              {token.symbol}\n            </Link>\n          </RowFixed>\n          <RowFixed>\n            <IconButton variant=\"text\" onClick={() => removeToken(chainId, token.address)}>\n              <CloseIcon />\n            </IconButton>\n            <LinkExternal href={getBscScanLink(token.address, 'address', chainId)} />\n          </RowFixed>\n        </RowBetween>\n      ))\n    )\n  }, [userAddedTokens, chainId, removeToken])\n\n  const isAddressValid = searchQuery === '' || isAddress(searchQuery)\n\n  return (\n    <Wrapper>\n      <Column style={{ width: '100%', flex: '1 1' }}>\n        <AutoColumn gap=\"14px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              scale=\"lg\"\n              placeholder=\"0x0000\"\n              value={searchQuery}\n              autoComplete=\"off\"\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              isWarning={!isAddressValid}\n            />\n          </Row>\n          {!isAddressValid && <Text color=\"failure\">{t('Enter valid token address')}</Text>}\n          {searchToken && (\n            <ImportRow\n              token={searchToken}\n              showImportView={() => setModalView(CurrencyModalView.importToken)}\n              setImportToken={setImportToken}\n              style={{ height: 'fit-content' }}\n            />\n          )}\n        </AutoColumn>\n        {tokenList}\n        <Footer>\n          <Text bold color=\"textSubtle\">\n            {userAddedTokens?.length} {userAddedTokens.length === 1 ? t('Custom Token') : t('Custom Tokens')}\n          </Text>\n          {userAddedTokens.length > 0 && (\n            <Button variant=\"tertiary\" onClick={handleRemoveAll} style={{ height: 36 }}>\n              {t('Clear all')}\n            </Button>\n          )}\n        </Footer>\n      </Column>\n    </Wrapper>\n  )\n}\n","import React, { useState } from 'react'\nimport { Token } from '@awswap/sdk'\nimport { ButtonMenu, ButtonMenuItem, ModalBody } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport ManageLists from './ManageLists'\nimport ManageTokens from './ManageTokens'\nimport { CurrencyModalView } from './types'\n\nconst StyledButtonMenu = styled(ButtonMenu)`\n  width: 100%;\n  background-color: #fff;\n  border-color: #7a6eaa;\n\n  > button {\n    background: #fff;\n    border-color: #fff;\n    box-shadow: none;\n  }\n\n  button[data-active='true'] {\n    color: #fff;\n    background: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nexport default function Manage({\n  setModalView,\n  setImportList,\n  setImportToken,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [showLists, setShowLists] = useState(true)\n\n  const { t } = useTranslation()\n\n  return (\n    <ModalBody>\n      <StyledButtonMenu\n        activeIndex={showLists ? 0 : 1}\n        onItemClick={() => setShowLists((prev) => !prev)}\n        scale=\"sm\"\n        variant=\"subtle\"\n        mb=\"32px\"\n      >\n        <ButtonMenuItem width=\"50%\" data-active={!!showLists}>\n          {t('Lists')}\n        </ButtonMenuItem>\n        <ButtonMenuItem width=\"50%\" data-active={!showLists}>\n          {t('Tokens')}\n        </ButtonMenuItem>\n      </StyledButtonMenu>\n      {showLists ? (\n        <ManageLists setModalView={setModalView} setImportList={setImportList} setListUrl={setListUrl} />\n      ) : (\n        <ManageTokens setModalView={setModalView} setImportToken={setImportToken} />\n      )}\n    </ModalBody>\n  )\n}\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text, Link, Flex, Checkbox, Message } from '@pancakeswap/uikit'\nimport Card from 'components/Card'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport useTheme from 'hooks/useTheme'\nimport { ListLogo } from 'components/Logo'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from 'state'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport { removeList, enableList } from 'state/lists/actions'\nimport { useAllLists } from 'state/lists/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  listURL: string\n  list: TokenList\n  onImport: () => void\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n`\n\nconst TextDot = styled.div`\n  height: 3px;\n  width: 3px;\n  background-color: ${({ theme }) => theme.colors.text};\n  border-radius: 50%;\n`\n\nfunction ImportList({ listURL, list, onImport }: ImportProps) {\n  const { theme } = useTheme()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const { t } = useTranslation()\n\n  // user must accept\n  const [confirmed, setConfirmed] = useState(false)\n\n  const lists = useAllLists()\n  const fetchList = useFetchListCallback()\n\n  // monitor is list is loading\n  const adding = Boolean(lists[listURL]?.loadingRequestId)\n  const [addError, setAddError] = useState<string | null>(null)\n\n  const handleAddList = useCallback(() => {\n    if (adding) return\n    setAddError(null)\n    fetchList(listURL)\n      .then(() => {\n        dispatch(enableList(listURL))\n        onImport()\n      })\n      .catch((error) => {\n        setAddError(error.message)\n        dispatch(removeList(listURL))\n      })\n  }, [adding, dispatch, fetchList, listURL, onImport])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"md\">\n        <AutoColumn gap=\"md\">\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"sm\" style={{ marginLeft: '20px' }}>\n                  <RowFixed>\n                    <Text bold mr=\"6px\">\n                      {list.name}\n                    </Text>\n                    <TextDot />\n                    <Text small color=\"textSubtle\" ml=\"6px\">\n                      {list.tokens.length} tokens\n                    </Text>\n                  </RowFixed>\n                  <Link\n                    small\n                    external\n                    ellipsis\n                    maxWidth=\"90%\"\n                    href={`https://tokenlists.org/token-list?url=${listURL}`}\n                  >\n                    {listURL}\n                  </Link>\n                </AutoColumn>\n              </RowFixed>\n            </RowBetween>\n          </Card>\n\n          <Message variant=\"danger\">\n            <Flex flexDirection=\"column\">\n              <Text fontSize=\"20px\" textAlign=\"center\" color={theme.colors.failure} mb=\"16px\">\n                {t('Import at your own risk')}\n              </Text>\n              <Text color={theme.colors.failure} mb=\"8px\">\n                {t(\n                  'By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists that claim to represent projects that do not have one.',\n                )}\n              </Text>\n              <Text bold color={theme.colors.failure} mb=\"16px\">\n                {typeof 'If you purchase a token from this list, you may not be able to sell it back.'}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Checkbox\n                  name=\"confirmed\"\n                  type=\"checkbox\"\n                  checked={confirmed}\n                  onChange={() => setConfirmed(!confirmed)}\n                  scale=\"sm\"\n                />\n                <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n                  {t('I understand')}\n                </Text>\n              </Flex>\n            </Flex>\n          </Message>\n\n          <Button disabled={!confirmed} onClick={handleAddList}>\n            {t('Import')}\n          </Button>\n          {addError ? (\n            <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n              {addError}\n            </Text>\n          ) : null}\n        </AutoColumn>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nexport default ImportList\n","import React, { useCallback, useState } from 'react'\nimport { Currency, Token } from '@awswap/sdk'\nimport {\n  ModalContainer,\n  ModalHeader,\n  ModalTitle,\n  ModalBackButton,\n  ModalCloseButton,\n  ModalBody,\n  InjectedModalProps,\n  Heading,\n  Button,\n} from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport usePrevious from 'hooks/usePreviousValue'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport CurrencySearch from './CurrencySearch'\nimport ImportToken from './ImportToken'\nimport Manage from './Manage'\nimport ImportList from './ImportList'\nimport { CurrencyModalView } from './types'\n\nconst Footer = styled.div`\n  width: 100%;\n  //background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  text-align: center;\n  height: 58px;\n  line-height: 58px;\n  background-color: rgba(78, 60, 251, 0.08);\n\n  > button {\n    color: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 420px;\n  width: 100%;\n  border-radius: 8px;\n  box-shadow: none;\n  border: 0;\n`\n\nconst StyledModalBody = styled(ModalBody)`\n  padding: 24px;\n`\n\ninterface CurrencySearchModalProps extends InjectedModalProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n}\n\nexport default function CurrencySearchModal({\n  onDismiss = () => null,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n  showCommonBases = false,\n}: CurrencySearchModalProps) {\n  const [modalView, setModalView] = useState<CurrencyModalView>(CurrencyModalView.search)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onDismiss()\n      onCurrencySelect(currency)\n    },\n    [onDismiss, onCurrencySelect],\n  )\n\n  // for token import view\n  const prevView = usePrevious(modalView)\n\n  // used for import token flow\n  const [importToken, setImportToken] = useState<Token | undefined>()\n\n  // used for import list\n  const [importList, setImportList] = useState<TokenList | undefined>()\n  const [listURL, setListUrl] = useState<string | undefined>()\n\n  const { t } = useTranslation()\n\n  const config = {\n    [CurrencyModalView.search]: { title: t('Select a Token'), onBack: undefined },\n    [CurrencyModalView.manage]: { title: t('Manage'), onBack: () => setModalView(CurrencyModalView.search) },\n    [CurrencyModalView.importToken]: {\n      title: t('Import Tokens'),\n      onBack: () =>\n        setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search),\n    },\n    [CurrencyModalView.importList]: { title: t('Import List'), onBack: () => setModalView(CurrencyModalView.search) },\n  }\n\n  return (\n    <StyledModalContainer minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          {config[modalView].onBack && <ModalBackButton onBack={config[modalView].onBack} />}\n          <Heading>{config[modalView].title}</Heading>\n        </ModalTitle>\n        <ModalCloseButton onDismiss={onDismiss} />\n      </ModalHeader>\n      <StyledModalBody>\n        {modalView === CurrencyModalView.search ? (\n          <CurrencySearch\n            onCurrencySelect={handleCurrencySelect}\n            selectedCurrency={selectedCurrency}\n            otherSelectedCurrency={otherSelectedCurrency}\n            showCommonBases={showCommonBases}\n            showImportView={() => setModalView(CurrencyModalView.importToken)}\n            setImportToken={setImportToken}\n          />\n        ) : modalView === CurrencyModalView.importToken && importToken ? (\n          <ImportToken tokens={[importToken]} handleCurrencySelect={handleCurrencySelect} />\n        ) : modalView === CurrencyModalView.importList && importList && listURL ? (\n          <ImportList list={importList} listURL={listURL} onImport={() => setModalView(CurrencyModalView.manage)} />\n        ) : modalView === CurrencyModalView.manage ? (\n          <Manage\n            setModalView={setModalView}\n            setImportToken={setImportToken}\n            setImportList={setImportList}\n            setListUrl={setListUrl}\n          />\n        ) : (\n          ''\n        )}\n      </StyledModalBody>\n      {modalView === CurrencyModalView.search && (\n        <Footer>\n          <Button\n            scale=\"sm\"\n            variant=\"text\"\n            onClick={() => setModalView(CurrencyModalView.manage)}\n            className=\"list-token-manage-button\"\n          >\n            {t('Manage Tokens')}\n          </Button>\n        </Footer>\n      )}\n    </StyledModalContainer>\n  )\n}\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport useRefresh from 'hooks/useRefresh'\nimport { State } from '../types'\nimport { fetchCurrentLotteryId, fetchCurrentLottery, fetchUserTicketsAndLotteries, fetchPublicLotteries } from '.'\nimport { useProcessLotteryResponse } from './helpers'\n\n// Lottery\nexport const useGetCurrentLotteryId = () => {\n  return useSelector((state: State) => state.lottery.currentLotteryId)\n}\n\nexport const useGetUserLotteriesGraphData = () => {\n  return useSelector((state: State) => state.lottery.userLotteryData)\n}\n\nexport const useGetUserLotteryGraphRoundById = (lotteryId: string) => {\n  const userLotteriesData = useGetUserLotteriesGraphData()\n  return userLotteriesData.rounds.find((userRound) => userRound.lotteryId === lotteryId)\n}\n\nexport const useGetLotteriesGraphData = () => {\n  return useSelector((state: State) => state.lottery.lotteriesData)\n}\n\nexport const useGetLotteryGraphDataById = (lotteryId: string) => {\n  const lotteriesData = useGetLotteriesGraphData()\n  return lotteriesData.find((lottery) => lottery.id === lotteryId)\n}\n\nexport const useFetchLottery = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  const currentLotteryId = useGetCurrentLotteryId()\n\n  useEffect(() => {\n    // get current lottery ID & max ticket buy\n    dispatch(fetchCurrentLotteryId())\n  }, [dispatch])\n\n  useEffect(() => {\n    if (currentLotteryId) {\n      // Get historical lottery data from nodes +  last 100 subgraph entires\n      dispatch(fetchPublicLotteries({ currentLotteryId }))\n      // get public data for current lottery\n      dispatch(fetchCurrentLottery({ currentLotteryId }))\n    }\n  }, [dispatch, currentLotteryId, fastRefresh])\n\n  useEffect(() => {\n    // get user tickets for current lottery, and user lottery subgraph data\n    if (account && currentLotteryId) {\n      dispatch(fetchUserTicketsAndLotteries({ account, currentLotteryId }))\n    }\n  }, [dispatch, currentLotteryId, account])\n}\n\nexport const useLottery = () => {\n  const currentRound = useSelector((state: State) => state.lottery.currentRound)\n  const processedCurrentRound = useProcessLotteryResponse(currentRound)\n\n  const isTransitioning = useSelector((state: State) => state.lottery.isTransitioning)\n\n  const currentLotteryId = useGetCurrentLotteryId()\n  const userLotteryData = useGetUserLotteriesGraphData()\n  const lotteriesData = useGetLotteriesGraphData()\n\n  const maxNumberTicketsPerBuyOrClaimAsString = useSelector(\n    (state: State) => state.lottery.maxNumberTicketsPerBuyOrClaim,\n  )\n  const maxNumberTicketsPerBuyOrClaim = useMemo(() => {\n    return new BigNumber(maxNumberTicketsPerBuyOrClaimAsString)\n  }, [maxNumberTicketsPerBuyOrClaimAsString])\n\n  return {\n    currentLotteryId,\n    maxNumberTicketsPerBuyOrClaim,\n    isTransitioning,\n    userLotteryData,\n    lotteriesData,\n    currentRound: processedCurrentRound,\n  }\n}\n","import { getBunnySpecialLotteryContract } from 'utils/contractHelpers'\nimport { UserRound } from 'state/types'\nimport { fetchUserTicketsForOneRound } from 'state/lottery/getUserTicketsData'\n\nexport interface LotteryNftMintData {\n  bunnyId: number | string\n  lotteryId: string\n  cursor: string\n}\n\nexport interface NftClaim {\n  canClaim: boolean\n  mintData: LotteryNftMintData\n}\n\nexport const NO_CLAIM: NftClaim = {\n  canClaim: false,\n  mintData: null,\n}\n\nexport const getLottieClaim = async (\n  account: string,\n  variationId: number | string,\n  lotteryId: string,\n): Promise<NftClaim> => {\n  const lotteryNftContract = getBunnySpecialLotteryContract()\n\n  if (lotteryId) {\n    try {\n      const passesContractCheck = await lotteryNftContract.canClaimNft1(account, lotteryId)\n\n      if (passesContractCheck) {\n        return {\n          canClaim: true,\n          mintData: { bunnyId: variationId, lotteryId, cursor: '0' },\n        }\n      }\n    } catch (error) {\n      console.error(`Failed to check canClaim for Lottie`, error)\n      return NO_CLAIM\n    }\n  }\n\n  return NO_CLAIM\n}\n\nexport const getLuckyClaim = async (\n  account: string,\n  variationId: number | string,\n  userRounds: UserRound[],\n): Promise<NftClaim> => {\n  const lotteryNftContract = getBunnySpecialLotteryContract()\n\n  const claimedWinningRounds = userRounds.filter((round) => round.claimed)\n  if (claimedWinningRounds.length > 0) {\n    const [winningRound] = claimedWinningRounds\n    const userTickets = await fetchUserTicketsForOneRound(account, winningRound.lotteryId)\n    const claimedTickets = userTickets.filter((ticket) => ticket.status)\n    const winningTicketCursor = userTickets.indexOf(claimedTickets[0])\n    // No winning ticket found for an expected winning round. Can happen when switching accounts.\n    if (winningTicketCursor < 0) {\n      return NO_CLAIM\n    }\n    try {\n      const passesContractCheck = await lotteryNftContract.canClaimNft2(\n        account,\n        winningRound.lotteryId,\n        winningTicketCursor.toString(),\n      )\n      if (passesContractCheck) {\n        return {\n          canClaim: true,\n          mintData: {\n            bunnyId: variationId,\n            lotteryId: winningRound.lotteryId,\n            cursor: winningTicketCursor.toString(),\n          },\n        }\n      }\n    } catch (error) {\n      console.error(`Failed to check canClaim for Lucky`, error)\n      return NO_CLAIM\n    }\n  }\n  return NO_CLAIM\n}\n\nexport const getBallerClaim = async (\n  account: string,\n  variationId: number | string,\n  lotteryId?: string,\n): Promise<NftClaim> => {\n  const lotteryNftContract = getBunnySpecialLotteryContract()\n\n  try {\n    const isWhitelisted = await lotteryNftContract.userWhitelistForNft3(account)\n    if (isWhitelisted) {\n      try {\n        const passesContractCheck = await lotteryNftContract.canClaimNft3(account)\n        if (passesContractCheck) {\n          return {\n            canClaim: true,\n            mintData: { bunnyId: variationId, lotteryId, cursor: '0' },\n          }\n        }\n      } catch (error) {\n        console.error(`Failed to check canClaim for Baller`, error)\n        return NO_CLAIM\n      }\n    }\n  } catch (error) {\n    console.error(`Failed to check whitelist for ${account}`, error)\n    return NO_CLAIM\n  }\n  return NO_CLAIM\n}\n","import { useEffect, useState, useCallback } from 'react'\nimport { useAppDispatch } from 'state'\nimport { useWeb3React } from '@web3-react/core'\nimport { useGetCurrentLotteryId } from 'state/lottery/hooks'\nimport { getGraphLotteryUser } from 'state/lottery/getUserLotteryData'\nimport { UserRound } from 'state/types'\nimport { getBunnySpecialLotteryAddress } from 'utils/addressHelpers'\nimport { multicallv2 } from 'utils/multicall'\nimport bunnySpecialLotteryAbi from 'config/abi/bunnySpecialLottery.json'\nimport Nfts from 'config/constants/nfts'\nimport { fetchCurrentLotteryId } from 'state/lottery'\nimport { getBallerClaim, getLottieClaim, getLuckyClaim, NftClaim, NO_CLAIM } from '../helpers'\n\nconst useBunnySpecialLottery = (): {\n  canClaimLottie: () => Promise<NftClaim>\n  canClaimLucky: () => Promise<NftClaim>\n  canClaimBaller: () => Promise<NftClaim>\n} => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n  const currentLotteryId = useGetCurrentLotteryId()\n  const currentLotteryIdNum = currentLotteryId && parseInt(currentLotteryId)\n  const [userRounds, setUserRounds] = useState<UserRound[]>(null)\n\n  useEffect(() => {\n    dispatch(fetchCurrentLotteryId())\n  }, [dispatch])\n\n  useEffect(() => {\n    setUserRounds(null)\n  }, [account])\n\n  useEffect(() => {\n    const getUserData = async () => {\n      const lotteryNftContractAddress = getBunnySpecialLotteryAddress()\n      const calls = [\n        {\n          name: 'startLotteryRound',\n          address: lotteryNftContractAddress,\n          params: [],\n        },\n        {\n          name: 'finalLotteryRound',\n          address: lotteryNftContractAddress,\n          params: [],\n        },\n      ]\n\n      const [[startRound], [finalRound]] = await multicallv2(bunnySpecialLotteryAbi, calls)\n      const startLotteryRoundInt = startRound.toNumber()\n      const finalLotteryRoundInt = finalRound.toNumber()\n\n      const lotteryIdsArray = []\n      for (let i = startLotteryRoundInt; i <= finalLotteryRoundInt; i++) {\n        lotteryIdsArray.push(`${i}`)\n      }\n      const userParticipation = await getGraphLotteryUser(account, undefined, undefined, {\n        lottery_in: lotteryIdsArray,\n      })\n      setUserRounds(userParticipation.rounds)\n    }\n\n    if (account && currentLotteryIdNum && !userRounds) {\n      getUserData()\n    }\n  }, [currentLotteryIdNum, userRounds, account])\n\n  const canClaimLottie = useCallback(async () => {\n    if (!userRounds || userRounds.length === 0) {\n      return NO_CLAIM\n    }\n\n    const { variationId } = Nfts.find((nft) => nft.identifier === 'lottie')\n    const [userRound] = userRounds\n    const lottieClaim = await getLottieClaim(account, variationId, userRound.lotteryId)\n    return lottieClaim\n  }, [account, userRounds])\n\n  const canClaimLucky = useCallback(async () => {\n    if (!userRounds || userRounds.length === 0) {\n      return NO_CLAIM\n    }\n\n    const { variationId } = Nfts.find((nft) => nft.identifier === 'lucky')\n    const luckyClaim = await getLuckyClaim(account, variationId, userRounds)\n    return luckyClaim\n  }, [account, userRounds])\n\n  const canClaimBaller = useCallback(async () => {\n    const { variationId } = Nfts.find((nft) => nft.identifier === 'baller')\n    const lotteryId = userRounds && userRounds.length > 0 && userRounds[0].lotteryId\n\n    const lottieClaim = await getBallerClaim(account, variationId, lotteryId)\n    return lottieClaim\n  }, [account, userRounds])\n\n  return { canClaimLottie, canClaimLucky, canClaimBaller }\n}\n\nexport default useBunnySpecialLottery\n","import { ethers } from 'ethers'\nimport { getMulticallContract } from 'utils/contractHelpers'\nimport { MultiCallResponse } from './types'\n\nexport interface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (example: balanceOf)\n  params?: any[] // Function params\n}\n\ninterface MulticallOptions {\n  requireSuccess?: boolean\n}\n\nconst multicall = async <T = any>(abi: any[], calls: Call[]): Promise<T> => {\n  try {\n    const multi = getMulticallContract()\n    const itf = new ethers.utils.Interface(abi)\n\n    const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n    const { returnData } = await multi.aggregate(calldata)\n\n    const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n    return res\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\n/**\n * Multicall V2 uses the new \"tryAggregate\" function. It is different in 2 ways\n *\n * 1. If \"requireSuccess\" is false multicall will not bail out if one of the calls fails\n * 2. The return includes a boolean whether the call was successful e.g. [wasSuccessful, callResult]\n */\nexport const multicallv2 = async <T = any>(\n  abi: any[],\n  calls: Call[],\n  options: MulticallOptions = { requireSuccess: true },\n): Promise<MultiCallResponse<T>> => {\n  const { requireSuccess } = options\n  const multi = getMulticallContract()\n  const itf = new ethers.utils.Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const returnData = await multi.tryAggregate(requireSuccess, calldata)\n  const res = returnData.map((call, i) => {\n    const [result, data] = call\n    return result ? itf.decodeFunctionResult(calls[i].name, data) : null\n  })\n\n  return res\n}\n\nexport default multicall\n","import BigNumber from 'bignumber.js'\nimport { SerializedBigNumber, TranslatableText } from 'state/types'\n\nexport interface Address {\n  1280: string\n}\n\nexport interface Token {\n  symbol: string\n  address?: Address\n  decimals?: number\n  projectLink?: string\n  busdPrice?: string\n}\n\nexport enum PoolIds {\n  poolBasic = 'poolBasic',\n  poolUnlimited = 'poolUnlimited',\n}\n\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\n\ninterface IfoPoolInfo {\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  distributionRatio: number // Range [0-1]\n}\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  currency: Token\n  token: Token\n  releaseBlockNumber: number\n  articleUrl: string\n  campaignId: string\n  tokenOfferingPrice: number\n  version: number\n  [PoolIds.poolBasic]?: IfoPoolInfo\n  [PoolIds.poolUnlimited]: IfoPoolInfo\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n  'AUTO' = 'Auto',\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  token: Token\n  quoteToken: Token\n  earningToken: Token\n  multiplier?: string\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  earningToken: Token\n  stakingToken: Token\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  enableEmergencyWithdraw?: boolean\n}\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type NftImages = {\n  blur?: string\n} & Images\n\nexport type NftVideo = {\n  webm: string\n  mp4: string\n}\n\nexport type NftSource = {\n  [key in NftType]: {\n    address: Address\n    identifierKey: string\n  }\n}\n\nexport enum NftType {\n  PANCAKE = 'pancake',\n  MIXIE = 'mixie',\n}\n\nexport type Nft = {\n  description: string\n  name: string\n  images: NftImages\n  sortOrder: number\n  type: NftType\n  video?: NftVideo\n\n  // Uniquely identifies the nft.\n  // Used for matching an NFT from the config with the data from the NFT's tokenURI\n  identifier: string\n\n  // Used to be \"bunnyId\". Used when minting NFT\n  variationId?: number | string\n}\n\nexport type TeamImages = {\n  alt: string\n} & Images\n\nexport type Team = {\n  id: number\n  name: string\n  description: string\n  isJoinable?: boolean\n  users: number\n  points: number\n  images: TeamImages\n  background: string\n  textColor: string\n}\n\nexport type CampaignType = 'ifo' | 'teambattle' | 'participation'\n\nexport type Campaign = {\n  id: string\n  type: CampaignType\n  title?: TranslatableText\n  description?: TranslatableText\n  badge?: string\n}\n\nexport type PageMeta = {\n  title: string\n  description?: string\n  image?: string\n}\n\nexport enum LotteryStatus {\n  PENDING = 'pending',\n  OPEN = 'open',\n  CLOSE = 'close',\n  CLAIMABLE = 'claimable',\n}\n\nexport interface LotteryTicket {\n  id: string\n  number: string\n  status: boolean\n  rewardBracket?: number\n  roundId?: string\n  cakeReward?: SerializedBigNumber\n}\n\nexport interface LotteryTicketClaimData {\n  ticketsWithUnclaimedRewards: LotteryTicket[]\n  allWinningTickets: LotteryTicket[]\n  cakeTotal: BigNumber\n  roundId: string\n}\n\n// Farm Auction\nexport interface FarmAuctionBidderConfig {\n  account: string\n  farmName: string\n  tokenAddress: string\n  quoteToken: Token\n  tokenName: string\n  projectSite?: string\n  lpAddress?: string\n}\n\n// Note: this status is slightly different compared to 'status' comfing\n// from Farm Auction smart contract\nexport enum AuctionStatus {\n  ToBeAnnounced, // No specific dates/blocks to display\n  Pending, // Auction is scheduled but not live yet (i.e. waiting for startBlock)\n  Open, // Auction is open for bids\n  Finished, // Auction end block is reached, bidding is not possible\n  Closed, // Auction was closed in smart contract\n}\n\nexport interface Auction {\n  id: number\n  status: AuctionStatus\n  startBlock: number\n  startDate: Date\n  endBlock: number\n  endDate: Date\n  auctionDuration: number\n  farmStartBlock: number\n  farmStartDate: Date\n  farmEndBlock: number\n  farmEndDate: Date\n  initialBidAmount: number\n  topLeaderboard: number\n  leaderboardThreshold: BigNumber\n}\n\nexport interface BidderAuction {\n  id: number\n  amount: BigNumber\n  claimed: boolean\n}\n\nexport interface Bidder extends FarmAuctionBidderConfig {\n  position?: number\n  isTopPosition: boolean\n  samePositionAsAbove: boolean\n  amount: BigNumber\n}\n\nexport interface ConnectedBidder {\n  account: string\n  isWhitelisted: boolean\n  bidderData?: Bidder\n}\n","import { ChainId, Pair, Token } from '@awswap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { AppDispatch, AppState } from '../../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  FarmStakedOnly,\n  muteAudio,\n  removeSerializedToken,\n  SerializedPair,\n  toggleTheme as toggleThemeAction,\n  unmuteAudio,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserFarmStakedOnly,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n  updateGasPrice,\n} from '../actions'\nimport { deserializeToken, GAS_PRICE_GWEI, serializeToken } from './helpers'\n\nexport function useAudioModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio())\n    } else {\n      dispatch(unmuteAudio())\n    }\n  }, [audioPlay, dispatch])\n\n  return [audioPlay, toggleSetAudioMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useThemeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const isDark = useSelector<AppState, AppState['user']['isDark']>((state) => state.user.isDark)\n\n  const toggleTheme = useCallback(() => {\n    dispatch(toggleThemeAction())\n  }, [dispatch])\n\n  return [isDark, toggleTheme]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    (state) => state.user.userSingleHopOnly,\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch],\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (slippage: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\n    },\n    [dispatch],\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserFarmStakedOnly(isActive: boolean): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userFarmStakedOnly = useSelector<AppState, AppState['user']['userFarmStakedOnly']>((state) => {\n    return state.user.userFarmStakedOnly\n  })\n\n  const setUserFarmStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      const farmStakedOnly = stakedOnly ? FarmStakedOnly.TRUE : FarmStakedOnly.FALSE\n      dispatch(updateUserFarmStakedOnly({ userFarmStakedOnly: farmStakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [\n    userFarmStakedOnly === FarmStakedOnly.ON_FINISHED ? !isActive : userFarmStakedOnly === FarmStakedOnly.TRUE,\n    setUserFarmStakedOnly,\n  ]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (deadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\n    },\n    [dispatch],\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useGasPrice(): string {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  const userGas = useSelector<AppState, AppState['user']['gasPrice']>((state) => state.user.gasPrice)\n  return chainId === ChainId.MAINNET.toString() ? userGas : GAS_PRICE_GWEI.testnet\n}\n\nexport function useGasPriceManager(): [string, (userGasPrice: string) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userGasPrice = useGasPrice()\n\n  const setGasPrice = useCallback(\n    (gasPrice: string) => {\n      dispatch(updateGasPrice({ gasPrice }))\n    },\n    [dispatch],\n  )\n\n  return [userGasPrice, setGasPrice]\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch],\n  )\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'Cake-LP', 'Pancake LPs')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  }\n                  return [base, token]\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId],\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs],\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n","import BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { getApy } from 'utils/compoundApyHelpers'\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\n\nexport const convertSharesToCake = (\n  shares: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\n}\n\nexport const convertCakeToShares = (\n  cake: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\n}\n\nconst AUTO_VAULT_COMPOUND_FREQUENCY = 5000\nconst MANUAL_POOL_AUTO_COMPOUND_FREQUENCY = 0\n\nexport const getAprData = (pool: Pool, performanceFee: number) => {\n  const { isAutoVault, apr } = pool\n\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\n  const autoCompoundFrequency = isAutoVault ? AUTO_VAULT_COMPOUND_FREQUENCY : MANUAL_POOL_AUTO_COMPOUND_FREQUENCY\n\n  if (isAutoVault) {\n    const autoApr = getApy(apr, AUTO_VAULT_COMPOUND_FREQUENCY, 365, performanceFee) * 100\n    return { apr: autoApr, autoCompoundFrequency }\n  }\n  return { apr, autoCompoundFrequency }\n}\n\nexport const getCakeVaultEarnings = (\n  account: string,\n  cakeAtLastUserAction: BigNumber,\n  userShares: BigNumber,\n  pricePerFullShare: BigNumber,\n  earningTokenPrice: number,\n) => {\n  const hasAutoEarnings =\n    account && cakeAtLastUserAction && cakeAtLastUserAction.gt(0) && userShares && userShares.gt(0)\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const autoCakeProfit = cakeAsBigNumber.minus(cakeAtLastUserAction)\n  const autoCakeToDisplay = autoCakeProfit.gte(0) ? getBalanceNumber(autoCakeProfit, 18) : 0\n\n  const autoUsdProfit = autoCakeProfit.times(earningTokenPrice)\n  const autoUsdToDisplay = autoUsdProfit.gte(0) ? getBalanceNumber(autoUsdProfit, 18) : 0\n  return { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay }\n}\n\nexport const getPoolBlockInfo = (pool: Pool, currentBlock: number) => {\n  const { startBlock, endBlock, isFinished } = pool\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\n}\n","import React from 'react'\nimport { Currency } from '@awswap/sdk'\nimport styled from 'styled-components'\nimport CurrencyLogo from './CurrencyLogo'\n\nconst Wrapper = styled.div<{ margin: boolean }>`\n  display: flex;\n  flex-direction: row;\n  margin-right: ${({ margin }) => margin && '4px'};\n`\n\ninterface DoubleCurrencyLogoProps {\n  margin?: boolean\n  size?: number\n  currency0?: Currency\n  currency1?: Currency\n}\n\nexport default function DoubleCurrencyLogo({\n  currency0,\n  currency1,\n  size = 20,\n  margin = false,\n}: DoubleCurrencyLogoProps) {\n  return (\n    <Wrapper margin={margin}>\n      {currency0 && <CurrencyLogo currency={currency0} size={`${size.toString()}px`} style={{ marginRight: '4px' }} />}\n      {currency1 && <CurrencyLogo currency={currency1} size={`${size.toString()}px`} />}\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport Logo from './Logo'\n\nconst StyledListLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function ListLogo({\n  logoURI,\n  style,\n  size = '24px',\n  alt,\n}: {\n  logoURI: string\n  size?: string\n  style?: React.CSSProperties\n  alt?: string\n}) {\n  const srcs: string[] = useHttpLocations(logoURI)\n\n  return <StyledListLogo alt={alt} size={size} srcs={srcs} style={style} />\n}\n","/* eslint-disable no-param-reassign */\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, ETHER, Token, currencyEquals } from '@awswap/sdk'\nimport { useMemo } from 'react'\nimport { arrayify } from 'ethers/lib/utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  TokenAddressMap,\n  useDefaultTokenList,\n  useUnsupportedTokenList,\n  useCombinedActiveList,\n  useCombinedInactiveList,\n} from '../state/lists/hooks'\n\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens'\nimport { isAddress } from '../utils'\n\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\nimport { filterTokens } from '../components/SearchModal/filtering'\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\n      newMap[address] = tokenMap[chainId][address].token\n      return newMap\n    }, {})\n\n    if (includeUserAdded) {\n      return (\n        userAddedTokens\n          // reduce into all ALL_TOKENS filtered by the current chain\n          .reduce<{ [address: string]: Token }>(\n            (tokenMap_, token) => {\n              tokenMap_[token.address] = token\n              return tokenMap_\n            },\n            // must make a copy because reduce modifies the map, and we do not\n            // want to make a copy in every iteration\n            { ...mapWithoutUrls },\n          )\n      )\n    }\n\n    return mapWithoutUrls\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\n}\n\nexport function useDefaultTokens(): { [address: string]: Token } {\n  const defaultList = useDefaultTokenList()\n  return useTokensFromMap(defaultList, false)\n}\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens, true)\n}\n\nexport function useAllInactiveTokens(): { [address: string]: Token } {\n  // get inactive tokens\n  const inactiveTokensMap = useCombinedInactiveList()\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\n\n  // filter out any token that are on active list\n  const activeTokensAddresses = Object.keys(useAllTokens())\n  const filteredInactive = activeTokensAddresses\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\n        if (!activeTokensAddresses.includes(address)) {\n          newMap[address] = inactiveTokens[address]\n        }\n        return newMap\n      }, {})\n    : inactiveTokens\n\n  return filteredInactive\n}\n\nexport function useUnsupportedTokens(): { [address: string]: Token } {\n  const unsupportedTokensMap = useUnsupportedTokenList()\n  return useTokensFromMap(unsupportedTokensMap, false)\n}\n\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\n  const { chainId } = useActiveWeb3React()\n  const inactiveTokens = useAllInactiveTokens()\n\n  return useMemo(() => {\n    if (!chainId || searchQuery === '') {\n      return undefined\n    }\n    const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\n    return tokens\n  }, [chainId, inactiveTokens, searchQuery])\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address || undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD,\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\n  const isBNB = currencyId?.toUpperCase() === 'HO'\n  const token = useToken(isBNB ? undefined : currencyId)\n  return isBNB ? ETHER : token\n}\n","import { ChainId, Currency, CurrencyAmount, ETHER, Token, TokenAmount, WETH } from '@awswap/sdk'\n\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\n}\n\nexport function wrappedCurrencyAmount(\n  currencyAmount: CurrencyAmount | undefined,\n  chainId: ChainId | undefined,\n): TokenAmount | undefined {\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\n}\n\nexport function unwrappedToken(token: Token): Currency {\n  if (token.equals(WETH[token.chainId])) return ETHER\n  return token\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface SerializedToken {\n  chainId: number\n  address: string\n  decimals: number\n  symbol?: string\n  name?: string\n}\n\nexport interface SerializedPair {\n  token0: SerializedToken\n  token1: SerializedToken\n}\n\nexport enum FarmStakedOnly {\n  ON_FINISHED = 'onFinished',\n  TRUE = 'true',\n  FALSE = 'false',\n}\n\nexport const updateUserExpertMode = createAction<{ userExpertMode: boolean }>('user/updateUserExpertMode')\nexport const updateUserSingleHopOnly = createAction<{ userSingleHopOnly: boolean }>('user/updateUserSingleHopOnly')\nexport const updateUserSlippageTolerance = createAction<{ userSlippageTolerance: number }>(\n  'user/updateUserSlippageTolerance',\n)\nexport const updateUserDeadline = createAction<{ userDeadline: number }>('user/updateUserDeadline')\nexport const addSerializedToken = createAction<{ serializedToken: SerializedToken }>('user/addSerializedToken')\nexport const removeSerializedToken = createAction<{ chainId: number; address: string }>('user/removeSerializedToken')\nexport const addSerializedPair = createAction<{ serializedPair: SerializedPair }>('user/addSerializedPair')\nexport const removeSerializedPair =\n  createAction<{ chainId: number; tokenAAddress: string; tokenBAddress: string }>('user/removeSerializedPair')\n\nexport const muteAudio = createAction<void>('user/muteAudio')\nexport const unmuteAudio = createAction<void>('user/unmuteAudio')\nexport const toggleTheme = createAction<void>('user/toggleTheme')\nexport const updateUserFarmStakedOnly = createAction<{ userFarmStakedOnly: FarmStakedOnly }>(\n  'user/updateUserFarmStakedOnly',\n)\nexport const updateGasPrice = createAction<{ gasPrice: string }>('user/updateGasPrice')\n","import { ThunkAction } from 'redux-thunk'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { CampaignType, FarmConfig, LotteryStatus, LotteryTicket, Nft, PoolConfig, Team } from 'config/constants/types'\n\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, State, unknown, AnyAction>\n\nexport interface BigNumberToJson {\n  type: 'BigNumber'\n  hex: string\n}\n\nexport type TranslatableText =\n  | string\n  | {\n      key: string\n      data?: {\n        [key: string]: string | number\n      }\n    }\n\nexport type SerializedBigNumber = string\n\nexport interface Farm extends FarmConfig {\n  tokenAmountMc?: SerializedBigNumber\n  quoteTokenAmountMc?: SerializedBigNumber\n  tokenAmountTotal?: SerializedBigNumber\n  quoteTokenAmountTotal?: SerializedBigNumber\n  lpTotalInQuoteToken?: SerializedBigNumber\n  lpTotalSupply?: SerializedBigNumber\n  tokenPriceVsQuote?: SerializedBigNumber\n  poolWeight?: SerializedBigNumber\n  userData?: {\n    allowance: string\n    tokenBalance: string\n    stakedBalance: string\n    earnings: string\n  }\n}\n\nexport interface Pool extends PoolConfig {\n  totalStaked?: BigNumber\n  stakingLimit?: BigNumber\n  startBlock?: number\n  endBlock?: number\n  apr?: number\n  stakingTokenPrice?: number\n  earningTokenPrice?: number\n  isAutoVault?: boolean\n  userData?: {\n    allowance: BigNumber\n    stakingTokenBalance: BigNumber\n    stakedBalance: BigNumber\n    pendingReward: BigNumber\n  }\n}\n\nexport interface Profile {\n  userId: number\n  points: number\n  teamId: number\n  nftAddress: string\n  tokenId: number\n  isActive: boolean\n  username: string\n  nft?: Nft\n  team: Team\n  hasRegistered: boolean\n}\n\n// Slices states\n\nexport interface FarmsState {\n  data: Farm[]\n  loadArchivedFarmsData: boolean\n  userDataLoaded: boolean\n}\n\nexport interface VaultFees {\n  performanceFee: number\n  callFee: number\n  withdrawalFee: number\n  withdrawalFeePeriod: number\n}\n\nexport interface VaultUser {\n  isLoading: boolean\n  userShares: string\n  cakeAtLastUserAction: string\n  lastDepositedTime: string\n  lastUserActionTime: string\n}\nexport interface CakeVault {\n  totalShares?: string\n  pricePerFullShare?: string\n  totalCakeInVault?: string\n  estimatedCakeBountyReward?: string\n  totalPendingCakeHarvest?: string\n  fees?: VaultFees\n  userData?: VaultUser\n}\n\nexport interface PoolsState {\n  data: Pool[]\n  cakeVault: CakeVault\n  userDataLoaded: boolean\n}\n\nexport interface ProfileState {\n  isInitialized: boolean\n  isLoading: boolean\n  hasRegistered: boolean\n  data: Profile\n}\n\nexport type TeamResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: boolean\n}\n\nexport type TeamsById = {\n  [key: string]: Team\n}\n\nexport interface TeamsState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: TeamsById\n}\n\nexport interface Achievement {\n  id: string\n  type: CampaignType\n  address: string\n  title: TranslatableText\n  description?: TranslatableText\n  badge: string\n  points: number\n}\n\nexport interface AchievementState {\n  data: Achievement[]\n}\n\n// Block\n\nexport interface BlockState {\n  currentBlock: number\n  initialBlock: number\n}\n\n// Collectibles\n\nexport interface CollectiblesState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: {\n    [key: string]: number[]\n  }\n}\n\n// Predictions\n\nexport enum BetPosition {\n  BULL = 'Bull',\n  BEAR = 'Bear',\n  HOUSE = 'House',\n}\n\nexport enum PredictionStatus {\n  INITIAL = 'initial',\n  LIVE = 'live',\n  PAUSED = 'paused',\n  ERROR = 'error',\n}\n\nexport interface Round {\n  id: string\n  epoch: number\n  failed?: boolean\n  startBlock: number\n  startAt: number\n  startHash: string\n  lockAt: number\n  lockBlock: number\n  lockPrice: number\n  lockHash: string\n  lockRoundId: string\n  closeRoundId: string\n  closeHash: string\n  closeAt: number\n  closePrice: number\n  closeBlock: number\n  totalBets: number\n  totalAmount: number\n  bullBets: number\n  bearBets: number\n  bearAmount: number\n  bullAmount: number\n  position: BetPosition\n  bets?: Bet[]\n}\n\nexport interface Market {\n  paused: boolean\n  epoch: number\n}\n\nexport interface Bet {\n  id?: string\n  hash?: string\n  amount: number\n  position: BetPosition\n  claimed: boolean\n  claimedAt: number\n  claimedHash: string\n  claimedBNB: number\n  claimedNetBNB: number\n  createdAt: number\n  updatedAt: number\n  block: number\n  user?: PredictionUser\n  round?: Round\n}\n\nexport interface PredictionUser {\n  id: string\n  createdAt: number\n  updatedAt: number\n  block: number\n  totalBets: number\n  totalBetsBull: number\n  totalBetsBear: number\n  totalBNB: number\n  totalBNBBull: number\n  totalBNBBear: number\n  totalBetsClaimed: number\n  totalBNBClaimed: number\n  winRate: number\n  averageBNB: number\n  netBNB: number\n}\n\nexport interface HistoryData {\n  [key: string]: Bet[]\n}\n\nexport enum HistoryFilter {\n  ALL = 'all',\n  COLLECTED = 'collected',\n  UNCOLLECTED = 'uncollected',\n}\n\nexport interface LedgerData {\n  [key: string]: {\n    [key: string]: ReduxNodeLedger\n  }\n}\n\nexport interface RoundData {\n  [key: string]: ReduxNodeRound\n}\n\nexport interface ReduxNodeLedger {\n  position: BetPosition\n  amount: BigNumberToJson\n  claimed: boolean\n}\n\nexport interface NodeLedger {\n  position: BetPosition\n  amount: ethers.BigNumber\n  claimed: boolean\n}\n\nexport interface ReduxNodeRound {\n  epoch: number\n  startTimestamp: number | null\n  lockTimestamp: number | null\n  closeTimestamp: number | null\n  lockPrice: BigNumberToJson | null\n  closePrice: BigNumberToJson | null\n  totalAmount: BigNumberToJson\n  bullAmount: BigNumberToJson\n  bearAmount: BigNumberToJson\n  rewardBaseCalAmount: BigNumberToJson\n  rewardAmount: BigNumberToJson\n  oracleCalled: boolean\n  lockOracleId: string\n  closeOracleId: string\n}\n\nexport interface NodeRound {\n  epoch: number\n  startTimestamp: number | null\n  lockTimestamp: number | null\n  closeTimestamp: number | null\n  lockPrice: ethers.BigNumber | null\n  closePrice: ethers.BigNumber | null\n  totalAmount: ethers.BigNumber\n  bullAmount: ethers.BigNumber\n  bearAmount: ethers.BigNumber\n  rewardBaseCalAmount: ethers.BigNumber\n  rewardAmount: ethers.BigNumber\n  oracleCalled: boolean\n  closeOracleId: string\n  lockOracleId: string\n}\n\nexport interface PredictionsState {\n  status: PredictionStatus\n  isLoading: boolean\n  isHistoryPaneOpen: boolean\n  isChartPaneOpen: boolean\n  isFetchingHistory: boolean\n  historyFilter: HistoryFilter\n  currentEpoch: number\n  intervalSeconds: number\n  minBetAmount: string\n  bufferSeconds: number\n  lastOraclePrice: string\n  history: HistoryData\n  rounds?: RoundData\n  ledgers?: LedgerData\n  claimableStatuses: {\n    [key: string]: boolean\n  }\n}\n\n// Voting\n\n/* eslint-disable camelcase */\n/**\n * @see https://hub.snapshot.page/graphql\n */\nexport interface VoteWhere {\n  id?: string\n  id_in?: string[]\n  voter?: string\n  voter_in?: string[]\n  proposal?: string\n  proposal_in?: string[]\n}\n\nexport enum SnapshotCommand {\n  PROPOSAL = 'proposal',\n  VOTE = 'vote',\n}\n\nexport enum ProposalType {\n  ALL = 'all',\n  CORE = 'core',\n  COMMUNITY = 'community',\n}\n\nexport enum ProposalState {\n  ACTIVE = 'active',\n  PENDING = 'pending',\n  CLOSED = 'closed',\n}\n\nexport interface Space {\n  id: string\n  name: string\n}\n\nexport interface Proposal {\n  author: string\n  body: string\n  choices: string[]\n  end: number\n  id: string\n  snapshot: string\n  space: Space\n  start: number\n  state: ProposalState\n  title: string\n}\n\nexport interface Vote {\n  id: string\n  voter: string\n  created: number\n  space: Space\n  proposal: {\n    choices: Proposal['choices']\n  }\n  choice: number\n  metadata?: {\n    votingPower: string\n    verificationHash: string\n  }\n  _inValid?: boolean\n}\n\nexport enum VotingStateLoadingStatus {\n  INITIAL = 'initial',\n  IDLE = 'idle',\n  LOADING = 'loading',\n  ERROR = 'error',\n}\n\nexport interface VotingState {\n  proposalLoadingStatus: VotingStateLoadingStatus\n  proposals: {\n    [key: string]: Proposal\n  }\n  voteLoadingStatus: VotingStateLoadingStatus\n  votes: {\n    [key: string]: Vote[]\n  }\n}\n\nexport interface LotteryRoundUserTickets {\n  isLoading?: boolean\n  tickets?: LotteryTicket[]\n}\n\ninterface LotteryRoundGenerics {\n  isLoading?: boolean\n  lotteryId: string\n  status: LotteryStatus\n  startTime: string\n  endTime: string\n  treasuryFee: string\n  firstTicketId: string\n  lastTicketId: string\n  finalNumber: number\n}\n\nexport interface LotteryRound extends LotteryRoundGenerics {\n  userTickets?: LotteryRoundUserTickets\n  priceTicketInCake: BigNumber\n  discountDivisor: BigNumber\n  amountCollectedInCake: BigNumber\n  cakePerBracket: string[]\n  countWinnersPerBracket: string[]\n  rewardsBreakdown: string[]\n}\n\nexport interface LotteryResponse extends LotteryRoundGenerics {\n  priceTicketInCake: SerializedBigNumber\n  discountDivisor: SerializedBigNumber\n  amountCollectedInCake: SerializedBigNumber\n  cakePerBracket: SerializedBigNumber[]\n  countWinnersPerBracket: SerializedBigNumber[]\n  rewardsBreakdown: SerializedBigNumber[]\n}\n\nexport interface LotteryState {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n  isTransitioning: boolean\n  currentRound: LotteryResponse & { userTickets?: LotteryRoundUserTickets }\n  lotteriesData?: LotteryRoundGraphEntity[]\n  userLotteryData?: LotteryUserGraphEntity\n}\n\nexport interface LotteryRoundGraphEntity {\n  id: string\n  totalUsers: string\n  totalTickets: string\n  winningTickets: string\n  status: LotteryStatus\n  finalNumber: string\n  startTime: string\n  endTime: string\n  ticketPrice: SerializedBigNumber\n}\n\nexport interface LotteryUserGraphEntity {\n  account: string\n  totalCake: string\n  totalTickets: string\n  rounds: UserRound[]\n}\n\nexport interface UserRound {\n  claimed: boolean\n  lotteryId: string\n  status: LotteryStatus\n  endTime: string\n  totalTickets: string\n  tickets?: LotteryTicket[]\n}\n\nexport type UserTicketsResponse = [ethers.BigNumber[], number[], boolean[]]\n\n// Global state\n\nexport interface State {\n  achievements: AchievementState\n  block: BlockState\n  farms: FarmsState\n  pools: PoolsState\n  predictions: PredictionsState\n  profile: ProfileState\n  teams: TeamsState\n  collectibles: CollectiblesState\n  voting: VotingState\n  lottery: LotteryState\n}\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_PREDICTION } from 'config/constants/endpoints'\nimport { ethers } from 'ethers'\nimport {\n  Bet,\n  LedgerData,\n  BetPosition,\n  PredictionsState,\n  PredictionStatus,\n  ReduxNodeLedger,\n  ReduxNodeRound,\n  Round,\n  RoundData,\n  PredictionUser,\n} from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport { getPredictionsAddress } from 'utils/addressHelpers'\nimport { PredictionsClaimableResponse, PredictionsLedgerResponse, PredictionsRoundsResponse } from 'utils/types'\nimport {\n  BetResponse,\n  getRoundBaseFields,\n  getBetBaseFields,\n  getUserBaseFields,\n  RoundResponse,\n  TotalWonMarketResponse,\n  UserResponse,\n} from './queries'\n\nexport enum Result {\n  WIN = 'win',\n  LOSE = 'lose',\n  CANCELED = 'canceled',\n  LIVE = 'live',\n}\n\nexport const numberOrNull = (value: string) => {\n  if (value === null) {\n    return null\n  }\n\n  const valueNum = Number(value)\n  return Number.isNaN(valueNum) ? null : valueNum\n}\n\nexport const transformUserResponse = (userResponse: UserResponse): PredictionUser => {\n  const {\n    id,\n    createdAt,\n    updatedAt,\n    block,\n    totalBets,\n    totalBetsBull,\n    totalBetsBear,\n    totalBNB,\n    totalBNBBull,\n    totalBNBBear,\n    totalBetsClaimed,\n    totalBNBClaimed,\n    winRate,\n    averageBNB,\n    netBNB,\n  } = userResponse\n\n  return {\n    id,\n    createdAt: numberOrNull(createdAt),\n    updatedAt: numberOrNull(updatedAt),\n    block: numberOrNull(block),\n    totalBets: numberOrNull(totalBets),\n    totalBetsBull: numberOrNull(totalBetsBull),\n    totalBetsBear: numberOrNull(totalBetsBear),\n    totalBNB: totalBNB ? parseFloat(totalBNB) : 0,\n    totalBNBBull: totalBNBBull ? parseFloat(totalBNBBull) : 0,\n    totalBNBBear: totalBNBBear ? parseFloat(totalBNBBear) : 0,\n    totalBetsClaimed: numberOrNull(totalBetsClaimed),\n    totalBNBClaimed: totalBNBClaimed ? parseFloat(totalBNBClaimed) : 0,\n    winRate: winRate ? parseFloat(winRate) : 0,\n    averageBNB: averageBNB ? parseFloat(averageBNB) : 0,\n    netBNB: netBNB ? parseFloat(netBNB) : 0,\n  }\n}\n\nconst getRoundPosition = (positionResponse: string) => {\n  if (positionResponse === 'Bull') {\n    return BetPosition.BULL\n  }\n\n  if (positionResponse === 'Bear') {\n    return BetPosition.BEAR\n  }\n\n  return null\n}\n\nexport const transformBetResponse = (betResponse: BetResponse): Bet => {\n  const bet = {\n    id: betResponse.id,\n    hash: betResponse.hash,\n    block: numberOrNull(betResponse.block),\n    amount: betResponse.amount ? parseFloat(betResponse.amount) : 0,\n    position: betResponse.position === 'Bull' ? BetPosition.BULL : BetPosition.BEAR,\n    claimed: betResponse.claimed,\n    claimedAt: numberOrNull(betResponse.claimedAt),\n    claimedBlock: numberOrNull(betResponse.claimedBlock),\n    claimedHash: betResponse.claimedHash,\n    claimedBNB: betResponse.claimedBNB ? parseFloat(betResponse.claimedBNB) : 0,\n    claimedNetBNB: betResponse.claimedNetBNB ? parseFloat(betResponse.claimedNetBNB) : 0,\n    createdAt: numberOrNull(betResponse.createdAt),\n    updatedAt: numberOrNull(betResponse.updatedAt),\n  } as Bet\n\n  if (betResponse.user) {\n    bet.user = transformUserResponse(betResponse.user)\n  }\n\n  if (betResponse.round) {\n    bet.round = transformRoundResponse(betResponse.round)\n  }\n\n  return bet\n}\n\nexport const transformRoundResponse = (roundResponse: RoundResponse): Round => {\n  const {\n    id,\n    epoch,\n    failed,\n    position,\n    startAt,\n    startBlock,\n    startHash,\n    lockAt,\n    lockBlock,\n    lockHash,\n    lockPrice,\n    lockRoundId,\n    closeAt,\n    closeBlock,\n    closeHash,\n    closePrice,\n    closeRoundId,\n    totalBets,\n    totalAmount,\n    bullBets,\n    bullAmount,\n    bearBets,\n    bearAmount,\n    bets = [],\n  } = roundResponse\n\n  return {\n    id,\n    failed,\n    startHash,\n    lockHash,\n    lockRoundId,\n    closeRoundId,\n    closeHash,\n    position: getRoundPosition(position),\n    epoch: numberOrNull(epoch),\n    startAt: numberOrNull(startAt),\n    startBlock: numberOrNull(startBlock),\n    lockAt: numberOrNull(lockAt),\n    lockBlock: numberOrNull(lockBlock),\n    lockPrice: lockPrice ? parseFloat(lockPrice) : 0,\n    closeAt: numberOrNull(closeAt),\n    closeBlock: numberOrNull(closeBlock),\n    closePrice: closePrice ? parseFloat(closePrice) : 0,\n    totalBets: numberOrNull(totalBets),\n    totalAmount: totalAmount ? parseFloat(totalAmount) : 0,\n    bullBets: numberOrNull(bullBets),\n    bullAmount: bullAmount ? parseFloat(bullAmount) : 0,\n    bearBets: numberOrNull(bearBets),\n    bearAmount: bearAmount ? parseFloat(bearAmount) : 0,\n    bets: bets.map(transformBetResponse),\n  }\n}\n\nexport const getRoundResult = (bet: Bet, currentEpoch: number): Result => {\n  const { round } = bet\n  if (round.failed) {\n    return Result.CANCELED\n  }\n\n  if (round.epoch >= currentEpoch - 1) {\n    return Result.LIVE\n  }\n  const roundResultPosition = round.closePrice > round.lockPrice ? BetPosition.BULL : BetPosition.BEAR\n\n  return bet.position === roundResultPosition ? Result.WIN : Result.LOSE\n}\n\n/**\n * Given a bet object, check if it is eligible to be claimed or refunded\n */\nexport const getCanClaim = (bet: Bet) => {\n  return !bet.claimed && (bet.position === bet.round.position || bet.round.failed === true)\n}\n\n/**\n * Returns only bets where the user has won.\n * This is necessary because the API currently cannot distinguish between an uncliamed bet that has won or lost\n */\nexport const getUnclaimedWinningBets = (bets: Bet[]): Bet[] => {\n  return bets.filter(getCanClaim)\n}\n\nexport const getTotalWon = async (): Promise<number> => {\n  const { market } = (await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getTotalWonData {\n        market(id: 1) {\n          totalBNB\n          totalBNBTreasury\n        }\n      }\n    `,\n  )) as { market: TotalWonMarketResponse }\n\n  const totalBNB = market.totalBNB ? parseFloat(market.totalBNB) : 0\n  const totalBNBTreasury = market.totalBNBTreasury ? parseFloat(market.totalBNBTreasury) : 0\n\n  return Math.max(totalBNB - totalBNBTreasury, 0)\n}\n\ntype BetHistoryWhereClause = Record<string, string | number | boolean | string[]>\n\nexport const getBetHistory = async (\n  where: BetHistoryWhereClause = {},\n  first = 1000,\n  skip = 0,\n): Promise<BetResponse[]> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBetHistory($first: Int!, $skip: Int!, $where: Bet_filter) {\n        bets(first: $first, skip: $skip, where: $where, order: createdAt, orderDirection: desc) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.bets\n}\n\nexport const getBet = async (betId: string): Promise<BetResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBet($id: ID!) {\n        bet(id: $id) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n  `,\n    {\n      id: betId.toLowerCase(),\n    },\n  )\n  return response.bet\n}\n\n// V2 REFACTOR\nexport const getLedgerData = async (account: string, epochs: number[]) => {\n  const address = getPredictionsAddress()\n  const ledgerCalls = epochs.map((epoch) => ({\n    address,\n    name: 'ledger',\n    params: [epoch, account],\n  }))\n  const response = await multicallv2<PredictionsLedgerResponse[]>(predictionsAbi, ledgerCalls)\n  return response\n}\n\nexport const getClaimStatuses = async (\n  account: string,\n  epochs: number[],\n): Promise<PredictionsState['claimableStatuses']> => {\n  const address = getPredictionsAddress()\n  const claimableCalls = epochs.map((epoch) => ({\n    address,\n    name: 'claimable',\n    params: [epoch, account],\n  }))\n  const claimableResponses = await multicallv2<[PredictionsClaimableResponse][]>(predictionsAbi, claimableCalls)\n\n  // \"claimable\" currently has a bug where it returns true on Bull bets even if the wallet did not interact with the round\n  // To get around this temporarily we check the ledger status as well to confirm that it is claimable\n  // This can be removed in Predictions V2\n  const ledgerResponses = await getLedgerData(account, epochs)\n\n  return claimableResponses.reduce((accum, claimableResponse, index) => {\n    const { amount, claimed } = ledgerResponses[index]\n    const epoch = epochs[index]\n    const [claimable] = claimableResponse\n\n    return {\n      ...accum,\n      [epoch]: claimable && amount.gt(0) && !claimed,\n    }\n  }, {})\n}\n\nexport type MarketData = Pick<\n  PredictionsState,\n  'status' | 'currentEpoch' | 'intervalSeconds' | 'minBetAmount' | 'bufferSeconds'\n>\nexport const getPredictionData = async (): Promise<MarketData> => {\n  const address = getPredictionsAddress()\n  const staticCalls = ['currentEpoch', 'intervalSeconds', 'minBetAmount', 'paused', 'bufferSeconds'].map((method) => ({\n    address,\n    name: method,\n  }))\n  const [[currentEpoch], [intervalSeconds], [minBetAmount], [paused], [bufferSeconds]] = await multicallv2(\n    predictionsAbi,\n    staticCalls,\n  )\n\n  return {\n    status: paused ? PredictionStatus.PAUSED : PredictionStatus.LIVE,\n    currentEpoch: currentEpoch.toNumber(),\n    intervalSeconds: intervalSeconds.toNumber(),\n    minBetAmount: minBetAmount.toString(),\n    bufferSeconds: bufferSeconds.toNumber(),\n  }\n}\n\nexport const getRoundsData = async (epochs: number[]): Promise<PredictionsRoundsResponse[]> => {\n  const address = getPredictionsAddress()\n  const calls = epochs.map((epoch) => ({\n    address,\n    name: 'rounds',\n    params: [epoch],\n  }))\n  const response = await multicallv2<PredictionsRoundsResponse[]>(predictionsAbi, calls)\n  return response\n}\n\nexport const makeFutureRoundResponse = (epoch: number, startTimestamp: number): ReduxNodeRound => {\n  return {\n    epoch,\n    startTimestamp,\n    lockTimestamp: null,\n    closeTimestamp: null,\n    lockPrice: null,\n    closePrice: null,\n    totalAmount: ethers.BigNumber.from(0).toJSON(),\n    bullAmount: ethers.BigNumber.from(0).toJSON(),\n    bearAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardBaseCalAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardAmount: ethers.BigNumber.from(0).toJSON(),\n    oracleCalled: false,\n    lockOracleId: null,\n    closeOracleId: null,\n  }\n}\n\nexport const makeRoundData = (rounds: ReduxNodeRound[]): RoundData => {\n  return rounds.reduce((accum, round) => {\n    return {\n      ...accum,\n      [round.epoch.toString()]: round,\n    }\n  }, {})\n}\n\nexport const serializePredictionsLedgerResponse = (ledgerResponse: PredictionsLedgerResponse): ReduxNodeLedger => ({\n  position: ledgerResponse.position === 0 ? BetPosition.BULL : BetPosition.BEAR,\n  amount: ledgerResponse.amount.toJSON(),\n  claimed: ledgerResponse.claimed,\n})\n\nexport const makeLedgerData = (account: string, ledgers: PredictionsLedgerResponse[], epochs: number[]): LedgerData => {\n  return ledgers.reduce((accum, ledgerResponse, index) => {\n    if (!ledgerResponse) {\n      return accum\n    }\n\n    // If the amount is zero that means the user did not bet\n    if (ledgerResponse.amount.eq(0)) {\n      return accum\n    }\n\n    const epoch = epochs[index].toString()\n\n    return {\n      ...accum,\n      [account]: {\n        ...accum[account],\n        [epoch]: serializePredictionsLedgerResponse(ledgerResponse),\n      },\n    }\n  }, {})\n}\n\n/**\n * Serializes the return from the \"rounds\" call for redux\n */\nexport const serializePredictionsRoundsResponse = (response: PredictionsRoundsResponse): ReduxNodeRound => {\n  const {\n    epoch,\n    startTimestamp,\n    lockTimestamp,\n    closeTimestamp,\n    lockPrice,\n    closePrice,\n    totalAmount,\n    bullAmount,\n    bearAmount,\n    rewardBaseCalAmount,\n    rewardAmount,\n    oracleCalled,\n    lockOracleId,\n    closeOracleId,\n  } = response\n\n  return {\n    oracleCalled,\n    epoch: epoch.toNumber(),\n    startTimestamp: startTimestamp.eq(0) ? null : startTimestamp.toNumber(),\n    lockTimestamp: lockTimestamp.eq(0) ? null : lockTimestamp.toNumber(),\n    closeTimestamp: closeTimestamp.eq(0) ? null : closeTimestamp.toNumber(),\n    lockPrice: lockPrice.eq(0) ? null : lockPrice.toJSON(),\n    closePrice: closePrice.eq(0) ? null : closePrice.toJSON(),\n    totalAmount: totalAmount.toJSON(),\n    bullAmount: bullAmount.toJSON(),\n    bearAmount: bearAmount.toJSON(),\n    rewardBaseCalAmount: rewardBaseCalAmount.toJSON(),\n    rewardAmount: rewardAmount.toJSON(),\n    lockOracleId: lockOracleId.toString(),\n    closeOracleId: closeOracleId.toString(),\n  }\n}\n\n/**\n * Parse serialized values back into ethers.BigNumber\n * ethers.BigNumber values are stored with the \"toJSJON()\" method, e.g  { type: \"BigNumber\", hex: string }\n */\nexport const parseBigNumberObj = <T = Record<string, any>, K = Record<string, any>>(data: T): K => {\n  return Object.keys(data).reduce((accum, key) => {\n    const value = data[key]\n\n    if (value && value?.type === 'BigNumber') {\n      return {\n        ...accum,\n        [key]: ethers.BigNumber.from(value),\n      }\n    }\n\n    return {\n      ...accum,\n      [key]: value,\n    }\n  }, {}) as K\n}\n","export interface UserResponse {\n  id: string\n  createdAt: string\n  updatedAt: string\n  block: string\n  totalBets: string\n  totalBetsBull: string\n  totalBetsBear: string\n  totalBNB: string\n  totalBNBBull: string\n  totalBNBBear: string\n  totalBetsClaimed: string\n  totalBNBClaimed: string\n  winRate: string\n  averageBNB: string\n  netBNB: string\n  bets?: BetResponse[]\n}\n\nexport interface BetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  claimedAt: string\n  claimedBlock: string\n  claimedHash: string\n  claimedBNB: string\n  claimedNetBNB: string\n  createdAt: string\n  updatedAt: string\n  block: string\n  user?: UserResponse\n  round?: RoundResponse\n}\n\nexport interface HistoricalBetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  user?: UserResponse\n  round: {\n    id: string\n    epoch: string\n  }\n}\n\nexport interface RoundResponse {\n  id: string\n  epoch: string\n  position: string\n  failed: boolean\n  startAt: string\n  startBlock: string\n  startHash: string\n  lockAt: string\n  lockBlock: string\n  lockHash: string\n  lockPrice: string\n  lockRoundId: string\n  closeAt: string\n  closeBlock: string\n  closeHash: string\n  closePrice: string\n  closeRoundId: string\n  totalBets: string\n  totalAmount: string\n  bullBets: string\n  bullAmount: string\n  bearBets: string\n  bearAmount: string\n  bets?: BetResponse[]\n}\n\nexport interface TotalWonMarketResponse {\n  totalBNB: string\n  totalBNBTreasury: string\n}\n\n/**\n * Base fields are the all the top-level fields available in the api. Used in multiple queries\n */\nexport const getRoundBaseFields = () => `\n id\n epoch\n position\n failed\n startAt\n startBlock\n startHash\n lockAt\n lockBlock\n lockHash\n lockPrice\n lockRoundId\n closeAt\n closeBlock\n closeHash\n closePrice\n closeRoundId\n totalBets\n totalAmount\n bullBets\n bullAmount\n bearBets\n bearAmount\n`\n\nexport const getBetBaseFields = () => `\n id\n hash  \n amount\n position\n claimed\n claimedAt\n claimedHash\n claimedBlock\n claimedBNB\n claimedNetBNB\n createdAt\n updatedAt\n`\n\nexport const getUserBaseFields = () => `\n id\n createdAt\n updatedAt\n block\n totalBets\n totalBetsBull\n totalBetsBear\n totalBNB\n totalBNBBull\n totalBNBBear\n totalBetsClaimed\n totalBNBClaimed\n winRate\n averageBNB\n netBNB\n`\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport maxBy from 'lodash/maxBy'\nimport merge from 'lodash/merge'\nimport range from 'lodash/range'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Bet, LedgerData, HistoryFilter, PredictionsState, PredictionStatus, ReduxNodeRound } from 'state/types'\nimport { getPredictionsContract } from 'utils/contractHelpers'\nimport { FUTURE_ROUND_COUNT, PAST_ROUND_COUNT, ROUND_BUFFER } from './config'\nimport {\n  getBetHistory,\n  transformBetResponse,\n  makeFutureRoundResponse,\n  makeRoundData,\n  getRoundsData,\n  getPredictionData,\n  MarketData,\n  getLedgerData,\n  makeLedgerData,\n  serializePredictionsRoundsResponse,\n  getClaimStatuses,\n} from './helpers'\n\nconst initialState: PredictionsState = {\n  status: PredictionStatus.INITIAL,\n  isLoading: false,\n  isHistoryPaneOpen: false,\n  isChartPaneOpen: false,\n  isFetchingHistory: false,\n  historyFilter: HistoryFilter.ALL,\n  currentEpoch: 0,\n  intervalSeconds: 300,\n  minBetAmount: '10000000000000',\n  bufferSeconds: 60,\n  lastOraclePrice: BIG_ZERO.toJSON(),\n  rounds: {},\n  history: {},\n  ledgers: {},\n  claimableStatuses: {},\n}\n\n// Thunks\n// V2 REFACTOR\ntype PredictionInitialization = Pick<\n  PredictionsState,\n  | 'status'\n  | 'currentEpoch'\n  | 'intervalSeconds'\n  | 'minBetAmount'\n  | 'rounds'\n  | 'ledgers'\n  | 'claimableStatuses'\n  | 'bufferSeconds'\n>\nexport const initializePredictions = createAsyncThunk<PredictionInitialization, string>(\n  'predictions/intialize',\n  async (account = null) => {\n    // Static values\n    const marketData = await getPredictionData()\n    const epochs =\n      marketData.currentEpoch > PAST_ROUND_COUNT\n        ? range(marketData.currentEpoch, marketData.currentEpoch - PAST_ROUND_COUNT)\n        : [marketData.currentEpoch]\n\n    // Round data\n    const roundsResponse = await getRoundsData(epochs)\n    const initialRoundData: { [key: string]: ReduxNodeRound } = roundsResponse.reduce((accum, roundResponse) => {\n      const reduxNodeRound = serializePredictionsRoundsResponse(roundResponse)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n\n    const initializedData = {\n      ...marketData,\n      rounds: initialRoundData,\n      ledgers: {},\n      claimableStatuses: {},\n    }\n\n    if (!account) {\n      return initializedData\n    }\n\n    // Bet data\n    const ledgerResponses = await getLedgerData(account, epochs)\n\n    // Claim statuses\n    const claimableStatuses = await getClaimStatuses(account, epochs)\n\n    return merge({}, initializedData, {\n      ledgers: makeLedgerData(account, ledgerResponses, epochs),\n      claimableStatuses,\n    })\n  },\n)\n\nexport const fetchRound = createAsyncThunk<ReduxNodeRound, number>('predictions/fetchRound', async (epoch) => {\n  const predictionContract = getPredictionsContract()\n  const response = await predictionContract.rounds(epoch)\n  return serializePredictionsRoundsResponse(response)\n})\n\nexport const fetchRounds = createAsyncThunk<{ [key: string]: ReduxNodeRound }, number[]>(\n  'predictions/fetchRounds',\n  async (epochs) => {\n    const rounds = await getRoundsData(epochs)\n    return rounds.reduce((accum, round) => {\n      if (!round) {\n        return accum\n      }\n\n      const reduxNodeRound = serializePredictionsRoundsResponse(round)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n  },\n)\n\nexport const fetchMarketData = createAsyncThunk<MarketData>('predictions/fetchMarketData', async () => {\n  const marketData = await getPredictionData()\n  return marketData\n})\n\nexport const fetchLedgerData = createAsyncThunk<LedgerData, { account: string; epochs: number[] }>(\n  'predictions/fetchLedgerData',\n  async ({ account, epochs }) => {\n    const ledgers = await getLedgerData(account, epochs)\n    return makeLedgerData(account, ledgers, epochs)\n  },\n)\n\nexport const fetchClaimableStatuses = createAsyncThunk<\n  PredictionsState['claimableStatuses'],\n  { account: string; epochs: number[] }\n>('predictions/fetchClaimableStatuses', async ({ account, epochs }) => {\n  const ledgers = await getClaimStatuses(account, epochs)\n  return ledgers\n})\n// END V2 REFACTOR\n\nexport const fetchHistory = createAsyncThunk<{ account: string; bets: Bet[] }, { account: string; claimed?: boolean }>(\n  'predictions/fetchHistory',\n  async ({ account, claimed }) => {\n    const response = await getBetHistory({\n      user: account.toLowerCase(),\n      claimed,\n    })\n    const bets = response.map(transformBetResponse)\n\n    return { account, bets }\n  },\n)\n\nexport const predictionsSlice = createSlice({\n  name: 'predictions',\n  initialState,\n  reducers: {\n    setPredictionStatus: (state, action: PayloadAction<PredictionStatus>) => {\n      state.status = action.payload\n    },\n    setHistoryPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isHistoryPaneOpen = action.payload\n      state.historyFilter = HistoryFilter.ALL\n    },\n    setChartPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isChartPaneOpen = action.payload\n    },\n    setHistoryFilter: (state, action: PayloadAction<HistoryFilter>) => {\n      state.historyFilter = action.payload\n    },\n    setCurrentEpoch: (state, action: PayloadAction<number>) => {\n      state.currentEpoch = action.payload\n    },\n    setLastOraclePrice: (state, action: PayloadAction<string>) => {\n      state.lastOraclePrice = action.payload\n    },\n    markBetHistoryAsCollected: (state, action: PayloadAction<{ account: string; betId: string }>) => {\n      const { account, betId } = action.payload\n\n      if (state.history[account]) {\n        const betIndex = state.history[account].findIndex((bet) => bet.id === betId)\n\n        if (betIndex >= 0) {\n          state.history[account][betIndex].claimed = true\n        }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Claimable statuses\n    builder.addCase(fetchClaimableStatuses.fulfilled, (state, action) => {\n      state.claimableStatuses = merge({}, state.claimableStatuses, action.payload)\n    })\n\n    // Ledger (bet) records\n    builder.addCase(fetchLedgerData.fulfilled, (state, action) => {\n      state.ledgers = merge({}, state.ledgers, action.payload)\n    })\n\n    // Get static market data\n    builder.addCase(fetchMarketData.fulfilled, (state, action) => {\n      const { status, currentEpoch, intervalSeconds, minBetAmount } = action.payload\n\n      // If the round has change add a new future round\n      if (state.currentEpoch !== currentEpoch) {\n        const newestRound = maxBy(Object.values(state.rounds), 'epoch')\n        const futureRound = makeFutureRoundResponse(\n          newestRound.epoch + 1,\n          newestRound.startTimestamp + intervalSeconds + ROUND_BUFFER,\n        )\n\n        state.rounds[futureRound.epoch] = futureRound\n      }\n\n      state.status = status\n      state.currentEpoch = currentEpoch\n      state.intervalSeconds = intervalSeconds\n      state.minBetAmount = minBetAmount\n    })\n\n    // Initialize predictions\n    builder.addCase(initializePredictions.fulfilled, (state, action) => {\n      const { status, currentEpoch, intervalSeconds, bufferSeconds, rounds, claimableStatuses, ledgers } =\n        action.payload\n      const futureRounds: ReduxNodeRound[] = []\n      const currentRound = rounds[currentEpoch]\n\n      for (let i = 1; i <= FUTURE_ROUND_COUNT; i++) {\n        futureRounds.push(makeFutureRoundResponse(currentEpoch + i, currentRound.startTimestamp + intervalSeconds * i))\n      }\n\n      return {\n        ...state,\n        status,\n        currentEpoch,\n        intervalSeconds,\n        bufferSeconds,\n        claimableStatuses,\n        ledgers,\n        rounds: merge({}, rounds, makeRoundData(futureRounds)),\n      }\n    })\n\n    // Get single round\n    builder.addCase(fetchRound.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, {\n        [action.payload.epoch.toString()]: action.payload,\n      })\n    })\n\n    // Get multiple rounds\n    builder.addCase(fetchRounds.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, action.payload)\n    })\n\n    // Show History\n    builder.addCase(fetchHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n    })\n    builder.addCase(fetchHistory.fulfilled, (state, action) => {\n      const { account, bets } = action.payload\n\n      state.isFetchingHistory = false\n      state.history[account] = bets\n    })\n  },\n})\n\n// Actions\nexport const {\n  setChartPaneState,\n  setCurrentEpoch,\n  setHistoryFilter,\n  setHistoryPaneState,\n  setPredictionStatus,\n  setLastOraclePrice,\n  markBetHistoryAsCollected,\n} = predictionsSlice.actions\n\nexport default predictionsSlice.reducer\n","export const REWARD_RATE = 0.97\n\n// Estimated number of seconds it takes to submit a transaction (3 blocks) in seconds\nexport const ROUND_BUFFER = 9\n\nexport const PAST_ROUND_COUNT = 5\nexport const FUTURE_ROUND_COUNT = 2\n","import { Campaign } from './types'\n\n/**\n * id: The campaign id (required)\n * type: The type of the achievement\n * title: A string or an object to be translated.\n * Note: If the value is a string it is likely used as data in a translation object\n *\n * badge: Achievement avatar\n */\n\nconst campaigns: Campaign[] = [\n  {\n    id: '511110000',\n    type: 'ifo',\n    title: 'Kalmar',\n    badge: 'ifo-kalm.svg',\n  },\n  {\n    id: '511100000',\n    type: 'ifo',\n    title: 'Hotcross',\n    badge: 'ifo-hotcross.svg',\n  },\n  {\n    id: '511090000',\n    type: 'ifo',\n    title: 'Horizon Protocol',\n    badge: 'ifo-hzn.svg',\n  },\n  {\n    id: '511080000',\n    type: 'ifo',\n    title: 'Belt',\n    badge: 'ifo-belt.svg',\n  },\n  {\n    id: '511070000',\n    type: 'ifo',\n    title: 'Yieldwatch',\n    badge: 'ifo-watch.svg',\n  },\n  {\n    id: '511060000',\n    type: 'ifo',\n    title: 'Berry',\n    badge: 'ifo-bry.svg',\n  },\n  {\n    id: '511050000',\n    type: 'ifo',\n    title: 'Soteria',\n    badge: 'ifo-wsote.svg',\n  },\n  {\n    id: '511040000',\n    type: 'ifo',\n    title: 'Helmet',\n    badge: 'ifo-helmet.svg',\n  },\n  {\n    id: '511030000',\n    type: 'ifo',\n    title: 'Tenet',\n    badge: 'ifo-ten.svg',\n  },\n  {\n    id: '511020000',\n    type: 'ifo',\n    title: 'Ditto',\n    badge: 'ifo-ditto.svg',\n  },\n  {\n    id: '511010000',\n    type: 'ifo',\n    title: 'Blink',\n    badge: 'ifo-blk.svg',\n  },\n  {\n    id: '512010001',\n    type: 'teambattle',\n    title: 'Easter Champion: Gold',\n    badge: 'easter-champion-gold.svg',\n  },\n  {\n    id: '512010002',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010003',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010004',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010005',\n    type: 'teambattle',\n    title: 'Easter Participant: Gold',\n    badge: 'easter-participant-gold.svg',\n  },\n  {\n    id: '512010006',\n    type: 'teambattle',\n    title: 'Easter Champion: Silver',\n    badge: 'easter-champion-silver.svg',\n  },\n  {\n    id: '512010007',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010008',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010009',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010010',\n    type: 'teambattle',\n    title: 'Easter Participant: Silver',\n    badge: 'easter-participant-silver.svg',\n  },\n  {\n    id: '512010011',\n    type: 'teambattle',\n    title: 'Easter Champion: Bronze',\n    badge: 'easter-champion-bronze.svg',\n  },\n  {\n    id: '512010012',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010013',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010014',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010015',\n    type: 'teambattle',\n    title: 'Easter Participant: Bronze',\n    badge: 'easter-participant-bronze.svg',\n  },\n  {\n    id: '513010001',\n    type: 'participation',\n    title: 'Syrup Soaker',\n    description: 'Took a dip in the early days of the Auto CAKE Pool',\n    badge: 'syrup-soaker.svg',\n  },\n  {\n    id: '514010001',\n    type: 'participation',\n    title: 'Clairvoyant',\n    description: 'Played a round of Prediction before round 12,120',\n    badge: 'clairvoyant.svg',\n  },\n  {\n    id: '515010001',\n    type: 'participation',\n    title: 'Lottie',\n    description: 'Joined a round in the early days of Lottery V2',\n    badge: 'lottie.svg',\n  },\n  {\n    id: '515020001',\n    type: 'participation',\n    title: 'Lucky',\n    description: 'Won a round in the early days of Lottery V2',\n    badge: 'lucky.svg',\n  },\n  {\n    id: '515030001',\n    type: 'participation',\n    title: 'Baller',\n    description: 'Top 100 ticket buyer in the early days of Lottery V2',\n    badge: 'baller.svg',\n  },\n]\n\n/**\n * Transform the campaign config into a map. Keeps the config the same\n * as the others and allows easy access to a campaign by id\n */\nexport const campaignMap = new Map<string, Campaign>()\n\ncampaigns.forEach((campaign) => {\n  campaignMap.set(campaign.id, campaign)\n})\n\nexport default campaigns\n","import { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\nimport { AchievementState, Achievement } from '../types'\nimport { getAchievements } from './helpers'\n\nconst initialState: AchievementState = {\n  data: [],\n}\n\nexport const achievementSlice = createSlice({\n  name: 'achievements',\n  initialState,\n  reducers: {\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\n      state.data.push(action.payload)\n    },\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = [...state.data, ...action.payload]\n    },\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = action.payload\n    },\n    clearAchievements: (state) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\n\n// Thunks\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\n  try {\n    const achievements = await getAchievements(account)\n    dispatch(setAchievements(achievements))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport default achievementSlice.reducer\n","import request, { gql } from 'graphql-request'\nimport { SNAPSHOT_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\nimport { Proposal, ProposalState, Vote, VoteWhere } from 'state/types'\nimport { simpleRpcProvider } from 'utils/providers'\n\nexport const getProposals = async (first = 5, skip = 0, state = ProposalState.ACTIVE): Promise<Proposal[]> => {\n  const response: { proposals: Proposal[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposals($first: Int!, $skip: Int!, $state: String!) {\n        proposals(\n          first: $first\n          skip: $skip\n          orderBy: \"end\"\n          orderDirection: desc\n          where: { space_in: \"cake.eth\", state: $state }\n        ) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { first, skip, state },\n  )\n  return response.proposals\n}\n\nexport const getProposal = async (id: string): Promise<Proposal> => {\n  const response: { proposal: Proposal } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposal($id: String) {\n        proposal(id: $id) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { id },\n  )\n  return response.proposal\n}\n\nexport const getVotes = async (first: number, skip: number, where: VoteWhere): Promise<Vote[]> => {\n  const response: { votes: Vote[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getVotes($first: Int, $skip: Int, $where: VoteWhere) {\n        votes(first: $first, skip: $skip, where: $where) {\n          id\n          voter\n          created\n          choice\n          space {\n            id\n            name\n          }\n          proposal {\n            choices\n          }\n          metadata\n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.votes\n}\n\nexport const getVoteVerificationStatuses = async (\n  votes: Vote[],\n  block?: number,\n): Promise<{ [key: string]: boolean }> => {\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n\n  const votesToVerify = votes.map((vote) => ({\n    address: vote.voter,\n    verificationHash: vote.metadata?.verificationHash,\n    total: vote.metadata?.votingPower,\n  }))\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/verify`, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      block: blockNumber,\n      votes: votesToVerify,\n    }),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const data = await response.json()\n  return votes.reduce((accum, vote) => {\n    return {\n      ...accum,\n      [vote.id]: data.data[vote.voter.toLowerCase()]?.isValid === true,\n    }\n  }, {})\n}\n\nexport const getAllVotes = async (proposalId: string, block?: number, votesPerChunk = 1000): Promise<Vote[]> => {\n  // const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  return new Promise((resolve, reject) => {\n    let votes: Vote[] = []\n\n    const fetchVoteChunk = async (newSkip: number) => {\n      try {\n        const voteChunk = await getVotes(votesPerChunk, newSkip, { proposal: proposalId })\n\n        if (voteChunk.length === 0) {\n          resolve(votes)\n        } else {\n          votes = [...votes, ...voteChunk]\n          fetchVoteChunk(newSkip + votesPerChunk)\n        }\n      } catch (error) {\n        reject(error)\n      }\n    }\n\n    fetchVoteChunk(0)\n  })\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { merge } from 'lodash'\nimport { Proposal, ProposalState, VotingStateLoadingStatus, VotingState, Vote, State } from 'state/types'\nimport { getAllVotes, getProposal, getProposals, getVoteVerificationStatuses } from './helpers'\n\nconst initialState: VotingState = {\n  proposalLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  proposals: {},\n  voteLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  votes: {},\n}\n\n// Thunks\nexport const fetchProposals = createAsyncThunk<Proposal[], { first?: number; skip?: number; state?: ProposalState }>(\n  'voting/fetchProposals',\n  async ({ first, skip = 0, state = ProposalState.ACTIVE }) => {\n    const response = await getProposals(first, skip, state)\n    return response\n  },\n)\n\nexport const fetchProposal = createAsyncThunk<Proposal, string>('voting/fetchProposal', async (proposalId) => {\n  const response = await getProposal(proposalId)\n  return response\n})\n\nexport const fetchVotes = createAsyncThunk<\n  { votes: Vote[]; proposalId: string },\n  { proposalId: string; block?: number }\n>('voting/fetchVotes', async ({ proposalId, block }) => {\n  const response = await getAllVotes(proposalId, block)\n  return { votes: response, proposalId }\n})\n\nexport const verifyVotes = createAsyncThunk<\n  { results: { [key: string]: boolean }; proposalId: string },\n  { proposalId: string; snapshot?: string },\n  { state: State }\n>('voting/verifyVotes', async ({ proposalId, snapshot }, { getState }) => {\n  const state = getState()\n  const proposalVotes = state.voting.votes[proposalId]\n  const response = await getVoteVerificationStatuses(proposalVotes, Number(snapshot))\n  return { results: response, proposalId }\n})\n\nexport const votingSlice = createSlice({\n  name: 'voting',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    // Verify Votes\n    builder.addCase(verifyVotes.fulfilled, (state, action) => {\n      const { proposalId, results } = action.payload\n\n      if (state.votes[proposalId]) {\n        state.votes[proposalId] = state.votes[proposalId].map((vote) => {\n          return {\n            ...vote,\n            _inValid: results[vote.id] === false,\n          }\n        })\n      }\n    })\n\n    // Fetch Proposals\n    builder.addCase(fetchProposals.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposals.fulfilled, (state, action) => {\n      const proposals = action.payload.reduce((accum, proposal) => {\n        return {\n          ...accum,\n          [proposal.id]: proposal,\n        }\n      }, {})\n\n      state.proposals = merge({}, state.proposals, proposals)\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Proposal\n    builder.addCase(fetchProposal.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposal.fulfilled, (state, action) => {\n      state.proposals[action.payload.id] = action.payload\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Votes\n    builder.addCase(fetchVotes.pending, (state) => {\n      state.voteLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchVotes.fulfilled, (state, action) => {\n      const { votes, proposalId } = action.payload\n\n      state.votes = {\n        ...state.votes,\n        [proposalId]: votes,\n      }\n      state.voteLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n  },\n})\n\nexport default votingSlice.reducer\n","import { createAction } from '@reduxjs/toolkit'\n\n// fired once when the app reloads but before the app renders\n// allows any updates to be applied to store data loaded from localStorage\nexport const updateVersion = createAction<void>('global/updateVersion')\n\nexport default updateVersion\n","import { createReducer } from '@reduxjs/toolkit'\nimport { INITIAL_ALLOWED_SLIPPAGE, DEFAULT_DEADLINE_FROM_NOW } from '../../config/constants'\nimport { updateVersion } from '../global/actions'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  removeSerializedPair,\n  removeSerializedToken,\n  SerializedPair,\n  SerializedToken,\n  updateUserExpertMode,\n  updateUserSlippageTolerance,\n  updateUserDeadline,\n  updateUserSingleHopOnly,\n  updateGasPrice,\n  muteAudio,\n  unmuteAudio,\n  toggleTheme,\n  updateUserFarmStakedOnly,\n  FarmStakedOnly,\n} from './actions'\nimport { GAS_PRICE_GWEI } from './hooks/helpers'\n\nconst currentTimestamp = () => new Date().getTime()\n\nexport interface UserState {\n  // the timestamp of the last updateVersion action\n  lastUpdateVersionTimestamp?: number\n\n  userExpertMode: boolean\n\n  // only allow swaps on direct pairs\n  userSingleHopOnly: boolean\n\n  // user defined slippage tolerance in bips, used in all txns\n  userSlippageTolerance: number\n\n  // deadline set by user in minutes, used in all txns\n  userDeadline: number\n\n  tokens: {\n    [chainId: number]: {\n      [address: string]: SerializedToken\n    }\n  }\n\n  pairs: {\n    [chainId: number]: {\n      // keyed by token0Address:token1Address\n      [key: string]: SerializedPair\n    }\n  }\n\n  timestamp: number\n  audioPlay: boolean\n  isDark: boolean\n  userFarmStakedOnly: FarmStakedOnly\n  gasPrice: string\n}\n\nfunction pairKey(token0Address: string, token1Address: string) {\n  return `${token0Address};${token1Address}`\n}\n\nexport const initialState: UserState = {\n  userExpertMode: false,\n  userSingleHopOnly: false,\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\n  tokens: {},\n  pairs: {},\n  timestamp: currentTimestamp(),\n  audioPlay: true,\n  isDark: false,\n  userFarmStakedOnly: FarmStakedOnly.ON_FINISHED,\n  gasPrice: GAS_PRICE_GWEI.default,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(updateVersion, (state) => {\n      // slippage isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userSlippageTolerance !== 'number') {\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE\n      }\n\n      // deadline isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userDeadline !== 'number') {\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW\n      }\n\n      state.lastUpdateVersionTimestamp = currentTimestamp()\n    })\n    .addCase(updateUserExpertMode, (state, action) => {\n      state.userExpertMode = action.payload.userExpertMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSlippageTolerance, (state, action) => {\n      state.userSlippageTolerance = action.payload.userSlippageTolerance\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserDeadline, (state, action) => {\n      state.userDeadline = action.payload.userDeadline\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSingleHopOnly, (state, action) => {\n      state.userSingleHopOnly = action.payload.userSingleHopOnly\n    })\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[chainId] = state.tokens[chainId] || {}\n      delete state.tokens[chainId][address]\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\n      if (\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\n        serializedPair.token0.address !== serializedPair.token1.address\n      ) {\n        const { chainId } = serializedPair.token0\n        state.pairs[chainId] = state.pairs[chainId] || {}\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\n      if (state.pairs[chainId]) {\n        // just delete both keys if either exists\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(muteAudio, (state) => {\n      state.audioPlay = false\n    })\n    .addCase(unmuteAudio, (state) => {\n      state.audioPlay = true\n    })\n    .addCase(toggleTheme, (state) => {\n      state.isDark = !state.isDark\n    })\n    .addCase(updateUserFarmStakedOnly, (state, { payload: { userFarmStakedOnly } }) => {\n      state.userFarmStakedOnly = userFarmStakedOnly\n    })\n    .addCase(updateGasPrice, (state, action) => {\n      state.gasPrice = action.payload.gasPrice\n    }),\n)\n","/* eslint-disable no-param-reassign */\nimport { createReducer } from '@reduxjs/toolkit'\nimport {\n  addTransaction,\n  checkedTransaction,\n  clearAllTransactions,\n  finalizeTransaction,\n  SerializableTransactionReceipt,\n} from './actions'\n\nconst now = () => new Date().getTime()\n\nexport interface TransactionDetails {\n  hash: string\n  approval?: { tokenAddress: string; spender: string }\n  summary?: string\n  claim?: { recipient: string }\n  receipt?: SerializableTransactionReceipt\n  lastCheckedBlockNumber?: number\n  addedTime: number\n  confirmedTime?: number\n  from: string\n}\n\nexport interface TransactionState {\n  [chainId: number]: {\n    [txHash: string]: TransactionDetails\n  }\n}\n\nexport const initialState: TransactionState = {}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addTransaction, (transactions, { payload: { chainId, from, hash, approval, summary, claim } }) => {\n      if (transactions[chainId]?.[hash]) {\n        throw Error('Attempted to add existing transaction.')\n      }\n      const txs = transactions[chainId] ?? {}\n      txs[hash] = { hash, approval, summary, claim, from, addedTime: now() }\n      transactions[chainId] = txs\n    })\n    .addCase(clearAllTransactions, (transactions, { payload: { chainId } }) => {\n      if (!transactions[chainId]) return\n      transactions[chainId] = {}\n    })\n    .addCase(checkedTransaction, (transactions, { payload: { chainId, hash, blockNumber } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      if (!tx.lastCheckedBlockNumber) {\n        tx.lastCheckedBlockNumber = blockNumber\n      } else {\n        tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber)\n      }\n    })\n    .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      tx.receipt = receipt\n      tx.confirmedTime = now()\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\n\nexport interface SwapState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly [Field.INPUT]: {\n    readonly currencyId: string | undefined\n  }\n  readonly [Field.OUTPUT]: {\n    readonly currencyId: string | undefined\n  }\n  // the typed recipient address or ENS name, or null if swap should go to sender\n  readonly recipient: string | null\n}\n\nconst initialState: SwapState = {\n  independentField: Field.INPUT,\n  typedValue: '',\n  [Field.INPUT]: {\n    currencyId: '',\n  },\n  [Field.OUTPUT]: {\n    currencyId: '',\n  },\n  recipient: null,\n}\n\nexport default createReducer<SwapState>(initialState, (builder) =>\n  builder\n    .addCase(\n      replaceSwapState,\n      (state, { payload: { typedValue, recipient, field, inputCurrencyId, outputCurrencyId } }) => {\n        return {\n          [Field.INPUT]: {\n            currencyId: inputCurrencyId,\n          },\n          [Field.OUTPUT]: {\n            currencyId: outputCurrencyId,\n          },\n          independentField: field,\n          typedValue,\n          recipient,\n        }\n      },\n    )\n    .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\n      const otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT\n      if (currencyId === state[otherField].currencyId) {\n        // the case where we have to swap the order\n        return {\n          ...state,\n          independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n          [field]: { currencyId },\n          [otherField]: { currencyId: state[field].currencyId },\n        }\n      }\n      // the normal case\n      return {\n        ...state,\n        [field]: { currencyId },\n      }\n    })\n    .addCase(switchCurrencies, (state) => {\n      return {\n        ...state,\n        independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n        [Field.INPUT]: { currencyId: state[Field.OUTPUT].currencyId },\n        [Field.OUTPUT]: { currencyId: state[Field.INPUT].currencyId },\n      }\n    })\n    .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n      }\n    })\n    .addCase(setRecipient, (state, { payload: { recipient } }) => {\n      state.recipient = recipient\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, resetMintState, typeInput } from './actions'\n\nexport interface MintState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly otherTypedValue: string // for the case when there's no liquidity\n}\n\nconst initialState: MintState = {\n  independentField: Field.CURRENCY_A,\n  typedValue: '',\n  otherTypedValue: '',\n}\n\nexport default createReducer<MintState>(initialState, (builder) =>\n  builder\n    .addCase(resetMintState, () => initialState)\n    .addCase(typeInput, (state, { payload: { field, typedValue, noLiquidity } }) => {\n      if (noLiquidity) {\n        // they're typing into the field they've last typed in\n        if (field === state.independentField) {\n          return {\n            ...state,\n            independentField: field,\n            typedValue,\n          }\n        }\n        // they're typing into a new field, store the other value\n\n        return {\n          ...state,\n          independentField: field,\n          typedValue,\n          otherTypedValue: state.typedValue,\n        }\n      }\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n        otherTypedValue: '',\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\n// eslint-disable-next-line import/no-unresolved\nimport { TokenList } from '@uniswap/token-lists/dist/types'\nimport { DEFAULT_ACTIVE_LIST_URLS, UNSUPPORTED_LIST_URLS, DEFAULT_LIST_OF_LISTS } from '../../config/constants/lists'\n\nimport { updateVersion } from '../global/actions'\nimport { acceptListUpdate, addList, fetchTokenList, removeList, enableList, disableList } from './actions'\n\nexport interface ListsState {\n  readonly byUrl: {\n    readonly [url: string]: {\n      readonly current: TokenList | null\n      readonly pendingUpdate: TokenList | null\n      readonly loadingRequestId: string | null\n      readonly error: string | null\n    }\n  }\n  // this contains the default list of lists from the last time the updateVersion was called, i.e. the app was reloaded\n  readonly lastInitializedDefaultListOfLists?: string[]\n\n  // currently active lists\n  readonly activeListUrls: string[] | undefined\n}\n\ntype ListState = ListsState['byUrl'][string]\n\nconst NEW_LIST_STATE: ListState = {\n  error: null,\n  current: null,\n  loadingRequestId: null,\n  pendingUpdate: null,\n}\n\ntype Mutable<T> = { -readonly [P in keyof T]: T[P] extends ReadonlyArray<infer U> ? U[] : T[P] }\n\nconst initialState: ListsState = {\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\n  byUrl: {\n    ...DEFAULT_LIST_OF_LISTS.concat(...UNSUPPORTED_LIST_URLS).reduce<Mutable<ListsState['byUrl']>>((memo, listUrl) => {\n      memo[listUrl] = NEW_LIST_STATE\n      return memo\n    }, {}),\n  },\n  activeListUrls: DEFAULT_ACTIVE_LIST_URLS,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\n      state.byUrl[url] = {\n        current: null,\n        pendingUpdate: null,\n        ...state.byUrl[url],\n        loadingRequestId: requestId,\n        error: null,\n      }\n    })\n    .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\n      const current = state.byUrl[url]?.current\n      const loadingRequestId = state.byUrl[url]?.loadingRequestId\n\n      // no-op if update does nothing\n      if (current) {\n        const upgradeType = getVersionUpgrade(current.version, tokenList.version)\n\n        if (upgradeType === VersionUpgrade.NONE) return\n        if (loadingRequestId === null || loadingRequestId === requestId) {\n          state.byUrl[url] = {\n            ...state.byUrl[url],\n            loadingRequestId: null,\n            error: null,\n            current,\n            pendingUpdate: tokenList,\n          }\n        }\n      } else {\n        // activate if on default active\n        if (DEFAULT_ACTIVE_LIST_URLS.includes(url)) {\n          state.activeListUrls?.push(url)\n        }\n\n        state.byUrl[url] = {\n          ...state.byUrl[url],\n          loadingRequestId: null,\n          error: null,\n          current: tokenList,\n          pendingUpdate: null,\n        }\n      }\n    })\n    .addCase(fetchTokenList.rejected, (state, { payload: { url, requestId, errorMessage } }) => {\n      if (state.byUrl[url]?.loadingRequestId !== requestId) {\n        // no-op since it's not the latest request\n        return\n      }\n\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        loadingRequestId: null,\n        error: errorMessage,\n        current: null,\n        pendingUpdate: null,\n      }\n    })\n    .addCase(addList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n    })\n    .addCase(removeList, (state, { payload: url }) => {\n      if (state.byUrl[url]) {\n        delete state.byUrl[url]\n      }\n      // remove list from active urls if needed\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(enableList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n\n      if (state.activeListUrls && !state.activeListUrls.includes(url)) {\n        state.activeListUrls.push(url)\n      }\n\n      if (!state.activeListUrls) {\n        state.activeListUrls = [url]\n      }\n    })\n    .addCase(disableList, (state, { payload: url }) => {\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(acceptListUpdate, (state, { payload: url }) => {\n      if (!state.byUrl[url]?.pendingUpdate) {\n        throw new Error('accept list update called without pending update')\n      }\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        pendingUpdate: null,\n        current: state.byUrl[url].pendingUpdate,\n      }\n    })\n    .addCase(updateVersion, (state) => {\n      // state loaded from localStorage, but new lists have never been initialized\n      if (!state.lastInitializedDefaultListOfLists) {\n        state.byUrl = initialState.byUrl\n        state.activeListUrls = initialState.activeListUrls\n      } else if (state.lastInitializedDefaultListOfLists) {\n        const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce<Set<string>>(\n          (s, l) => s.add(l),\n          new Set(),\n        )\n        const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce<Set<string>>((s, l) => s.add(l), new Set())\n\n        DEFAULT_LIST_OF_LISTS.forEach((listUrl) => {\n          if (!lastInitializedSet.has(listUrl)) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n        })\n\n        state.lastInitializedDefaultListOfLists.forEach((listUrl) => {\n          if (!newListOfListsSet.has(listUrl)) {\n            delete state.byUrl[listUrl]\n          }\n        })\n      }\n\n      state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS\n\n      // if no active lists, activate defaults\n      if (!state.activeListUrls) {\n        state.activeListUrls = DEFAULT_ACTIVE_LIST_URLS\n\n        // for each list on default list, initialize if needed\n        DEFAULT_ACTIVE_LIST_URLS.map((listUrl: string) => {\n          if (!state.byUrl[listUrl]) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n          return true\n        })\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, typeInput } from './actions'\n\nexport interface BurnState {\n  readonly independentField: Field\n  readonly typedValue: string\n}\n\nconst initialState: BurnState = {\n  independentField: Field.LIQUIDITY_PERCENT,\n  typedValue: '0',\n}\n\nexport default createReducer<BurnState>(initialState, (builder) =>\n  builder.addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n    return {\n      ...state,\n      independentField: field,\n      typedValue,\n    }\n  }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport {\n  addMulticallListeners,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  removeMulticallListeners,\n  toCallKey,\n  updateMulticallResults,\n} from './actions'\n\nexport interface MulticallState {\n  callListeners?: {\n    // on a per-chain basis\n    [chainId: number]: {\n      // stores for each call key the listeners' preferences\n      [callKey: string]: {\n        // stores how many listeners there are per each blocks per fetch preference\n        [blocksPerFetch: number]: number\n      }\n    }\n  }\n\n  callResults: {\n    [chainId: number]: {\n      [callKey: string]: {\n        data?: string | null\n        blockNumber?: number\n        fetchingBlockNumber?: number\n      }\n    }\n  }\n}\n\nconst initialState: MulticallState = {\n  callResults: {},\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addMulticallListeners, (state, { payload: { calls, chainId, options: { blocksPerFetch = 1 } = {} } }) => {\n      const listeners: MulticallState['callListeners'] = state.callListeners\n        ? state.callListeners\n        : (state.callListeners = {})\n      listeners[chainId] = listeners[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        listeners[chainId][callKey] = listeners[chainId][callKey] ?? {}\n        listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1\n      })\n    })\n    .addCase(\n      removeMulticallListeners,\n      (state, { payload: { chainId, calls, options: { blocksPerFetch = 1 } = {} } }) => {\n        const listeners: MulticallState['callListeners'] = state.callListeners\n          ? state.callListeners\n          : (state.callListeners = {})\n\n        if (!listeners[chainId]) return\n        calls.forEach((call) => {\n          const callKey = toCallKey(call)\n          if (!listeners[chainId][callKey]) return\n          if (!listeners[chainId][callKey][blocksPerFetch]) return\n\n          if (listeners[chainId][callKey][blocksPerFetch] === 1) {\n            delete listeners[chainId][callKey][blocksPerFetch]\n          } else {\n            listeners[chainId][callKey][blocksPerFetch]--\n          }\n        })\n      },\n    )\n    .addCase(fetchingMulticallResults, (state, { payload: { chainId, fetchingBlockNumber, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) {\n          state.callResults[chainId][callKey] = {\n            fetchingBlockNumber,\n          }\n        } else {\n          if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return\n          state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(errorFetchingMulticallResults, (state, { payload: { fetchingBlockNumber, chainId, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) return // only should be dispatched if we are already fetching\n        if (current.fetchingBlockNumber === fetchingBlockNumber) {\n          delete current.fetchingBlockNumber\n          current.data = null\n          current.blockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(updateMulticallResults, (state, { payload: { chainId, results, blockNumber } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      Object.keys(results).forEach((callKey) => {\n        const current = state.callResults[chainId][callKey]\n        if ((current?.blockNumber ?? 0) > blockNumber) return\n        state.callResults[chainId][callKey] = {\n          data: results[callKey],\n          blockNumber,\n        }\n      })\n    }),\n)\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport { save, load } from 'redux-localstorage-simple'\nimport { useDispatch } from 'react-redux'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\nimport predictionsReducer from './predictions'\nimport profileReducer from './profile'\nimport teamsReducer from './teams'\nimport achievementsReducer from './achievements'\nimport blockReducer from './block'\nimport collectiblesReducer from './collectibles'\nimport votingReducer from './voting'\nimport lotteryReducer from './lottery'\nimport { updateVersion } from './global/actions'\nimport user from './user/reducer'\nimport transactions from './transactions/reducer'\nimport swap from './swap/reducer'\nimport mint from './mint/reducer'\nimport lists from './lists/reducer'\nimport burn from './burn/reducer'\nimport multicall from './multicall/reducer'\n\nconst PERSISTED_KEYS: string[] = ['user', 'transactions', 'lists']\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    achievements: achievementsReducer,\n    block: blockReducer,\n    farms: farmsReducer,\n    pools: poolsReducer,\n    predictions: predictionsReducer,\n    profile: profileReducer,\n    teams: teamsReducer,\n    collectibles: collectiblesReducer,\n    voting: votingReducer,\n    lottery: lotteryReducer,\n\n    // Exchange\n    user,\n    transactions,\n    swap,\n    mint,\n    burn,\n    multicall,\n    lists,\n  },\n  middleware: [...getDefaultMiddleware({ thunk: true }), save({ states: PERSISTED_KEYS })],\n  preloadedState: load({ states: PERSISTED_KEYS }),\n})\n\nstore.dispatch(updateVersion())\n\n/**\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n */\nexport type AppDispatch = typeof store.dispatch\nexport type AppState = ReturnType<typeof store.getState>\nexport const useAppDispatch = () => useDispatch()\n\nexport default store\n","import { ChainId, Token } from '@awswap/sdk'\n\nexport const USDT: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0x41515885251e724233c6cA94530d6dcf3A20dEc7',\n    18,\n    'USDT',\n    'Halo-Peg USDT',\n  ),\n}\n\nexport const AW: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(ChainId.MAINNET, '0x0c4Cc6eaA9fc4aAd02f939766ea9cE4a77D2B5cc', 18, 'AW', 'Action world'),\n}\n\nexport const WHO: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(ChainId.MAINNET, '0xCb12e98C94A6274fA9e2F446e05B84cd27867142', 18, 'WHO', 'WHO'),\n}\n\nconst tokens = {\n  bnb: {\n    symbol: 'HO',\n    projectLink: 'https://halo.land',\n  },\n  who: {\n    symbol: 'WHO',\n    address: {\n      1280: '0xCb12e98C94A6274fA9e2F446e05B84cd27867142',\n    },\n    decimals: 18,\n  },\n  who_hoswap: {\n    symbol: 'WHO',\n    address: {\n      1280: '0x41b474F1E7413d472CA93dFd01eE4Ea0a7245430',\n    },\n    decimals: 18,\n  },\n  usdt: {\n    symbol: 'USDT',\n    address: {\n      1280: '0x41515885251e724233c6cA94530d6dcf3A20dEc7',\n    },\n    decimals: 18,\n  },\n  aw: {\n    symbol: 'AW',\n    address: {\n      1280: '0x0c4Cc6eaA9fc4aAd02f939766ea9cE4a77D2B5cc',\n    },\n    decimals: 18,\n  },\n  hos: {\n    symbol: 'HOS',\n    address: {\n      1280: '0x6b61e560daE09b2488e8fc597eABAfeafC3A5EF1',\n    },\n    decimals: 18,\n  },\n}\n\nexport default tokens\n","import { Interface, FunctionFragment } from '@ethersproject/abi'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useBlock } from 'state/block/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  addMulticallListeners,\n  Call,\n  removeMulticallListeners,\n  parseCallKey,\n  toCallKey,\n  ListenerOptions,\n} from './actions'\n\nexport interface Result extends ReadonlyArray<any> {\n  readonly [key: string]: any\n}\n\ntype MethodArg = string | number | BigNumber\ntype MethodArgs = Array<MethodArg | MethodArg[]>\n\ntype OptionalMethodInputs = Array<MethodArg | MethodArg[] | undefined> | undefined\n\nfunction isMethodArg(x: unknown): x is MethodArg {\n  return ['string', 'number'].indexOf(typeof x) !== -1\n}\n\nfunction isValidMethodArgs(x: unknown): x is MethodArgs | undefined {\n  return (\n    x === undefined ||\n    (Array.isArray(x) && x.every((xi) => isMethodArg(xi) || (Array.isArray(xi) && xi.every(isMethodArg))))\n  )\n}\n\ninterface CallResult {\n  readonly valid: boolean\n  readonly data: string | undefined\n  readonly blockNumber: number | undefined\n}\n\nconst INVALID_RESULT: CallResult = { valid: false, blockNumber: undefined, data: undefined }\n\n// use this options object\nexport const NEVER_RELOAD: ListenerOptions = {\n  blocksPerFetch: Infinity,\n}\n\n// the lowest level call for subscribing to contract data\nfunction useCallsData(calls: (Call | undefined)[], options?: ListenerOptions): CallResult[] {\n  const { chainId } = useActiveWeb3React()\n  const callResults = useSelector<AppState, AppState['multicall']['callResults']>(\n    (state) => state.multicall.callResults,\n  )\n  const dispatch = useDispatch<AppDispatch>()\n\n  const serializedCallKeys: string = useMemo(\n    () =>\n      JSON.stringify(\n        calls\n          ?.filter((c): c is Call => Boolean(c))\n          ?.map(toCallKey)\n          ?.sort() ?? [],\n      ),\n    [calls],\n  )\n\n  // update listeners when there is an actual change that persists for at least 100ms\n  useEffect(() => {\n    const callKeys: string[] = JSON.parse(serializedCallKeys)\n    if (!chainId || callKeys.length === 0) return undefined\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const calls = callKeys.map((key) => parseCallKey(key))\n    dispatch(\n      addMulticallListeners({\n        chainId,\n        calls,\n        options,\n      }),\n    )\n\n    return () => {\n      dispatch(\n        removeMulticallListeners({\n          chainId,\n          calls,\n          options,\n        }),\n      )\n    }\n  }, [chainId, dispatch, options, serializedCallKeys])\n\n  return useMemo(\n    () =>\n      calls.map<CallResult>((call) => {\n        if (!chainId || !call) return INVALID_RESULT\n\n        const result = callResults[chainId]?.[toCallKey(call)]\n        let data\n        if (result?.data && result?.data !== '0x') {\n          // eslint-disable-next-line prefer-destructuring\n          data = result.data\n        }\n\n        return { valid: true, data, blockNumber: result?.blockNumber }\n      }),\n    [callResults, calls, chainId],\n  )\n}\n\ninterface CallState {\n  readonly valid: boolean\n  // the result, or undefined if loading or errored/no data\n  readonly result: Result | undefined\n  // true if the result has never been fetched\n  readonly loading: boolean\n  // true if the result is not for the latest block\n  readonly syncing: boolean\n  // true if the call was made and is synced, but the return data is invalid\n  readonly error: boolean\n}\n\nconst INVALID_CALL_STATE: CallState = { valid: false, result: undefined, loading: false, syncing: false, error: false }\nconst LOADING_CALL_STATE: CallState = { valid: true, result: undefined, loading: true, syncing: true, error: false }\n\nfunction toCallState(\n  callResult: CallResult | undefined,\n  contractInterface: Interface | undefined,\n  fragment: FunctionFragment | undefined,\n  latestBlockNumber: number | undefined,\n): CallState {\n  if (!callResult) return INVALID_CALL_STATE\n  const { valid, data, blockNumber } = callResult\n  if (!valid) return INVALID_CALL_STATE\n  if (valid && !blockNumber) return LOADING_CALL_STATE\n  if (!contractInterface || !fragment || !latestBlockNumber) return LOADING_CALL_STATE\n  const success = data && data.length > 2\n  const syncing = (blockNumber ?? 0) < latestBlockNumber\n  let result: Result | undefined\n  if (success && data) {\n    try {\n      result = contractInterface.decodeFunctionResult(fragment, data)\n    } catch (error) {\n      console.debug('Result data parsing failed', fragment, data)\n      return {\n        valid: true,\n        loading: false,\n        error: true,\n        syncing,\n        result,\n      }\n    }\n  }\n  return {\n    valid: true,\n    loading: false,\n    syncing,\n    result,\n    error: !success,\n  }\n}\n\nexport function useSingleContractMultipleData(\n  contract: Contract | null | undefined,\n  methodName: string,\n  callInputs: OptionalMethodInputs[],\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo(\n    () =>\n      contract && fragment && callInputs && callInputs.length > 0\n        ? callInputs.map<Call>((inputs) => {\n            return {\n              address: contract.address,\n              callData: contract.interface.encodeFunctionData(fragment, inputs),\n            }\n          })\n        : [],\n    [callInputs, contract, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const { currentBlock } = useBlock()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contract?.interface, fragment, currentBlock))\n  }, [fragment, contract, results, currentBlock])\n}\n\nexport function useMultipleContractSingleData(\n  addresses: (string | undefined)[],\n  contractInterface: Interface,\n  methodName: string,\n  callInputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contractInterface.getFunction(methodName), [contractInterface, methodName])\n  const callData: string | undefined = useMemo(\n    () =>\n      fragment && isValidMethodArgs(callInputs)\n        ? contractInterface.encodeFunctionData(fragment, callInputs)\n        : undefined,\n    [callInputs, contractInterface, fragment],\n  )\n\n  const calls = useMemo(\n    () =>\n      fragment && addresses && addresses.length > 0 && callData\n        ? addresses.map<Call | undefined>((address) => {\n            return address && callData\n              ? {\n                  address,\n                  callData,\n                }\n              : undefined\n          })\n        : [],\n    [addresses, callData, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const { currentBlock } = useBlock()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contractInterface, fragment, currentBlock))\n  }, [fragment, results, contractInterface, currentBlock])\n}\n\nexport function useSingleCallResult(\n  contract: Contract | null | undefined,\n  methodName: string,\n  inputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo<Call[]>(() => {\n    return contract && fragment && isValidMethodArgs(inputs)\n      ? [\n          {\n            address: contract.address,\n            callData: contract.interface.encodeFunctionData(fragment, inputs),\n          },\n        ]\n      : []\n  }, [contract, fragment, inputs])\n\n  const result = useCallsData(calls, options)[0]\n  const { currentBlock } = useBlock()\n\n  return useMemo(() => {\n    return toCallState(result, contract?.interface, fragment, currentBlock)\n  }, [result, contract, fragment, currentBlock])\n}\n","import { Token, TokenAmount } from '@awswap/sdk'\nimport { useMemo } from 'react'\n\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\nfunction useTokenAllowance(token?: Token, owner?: string, spender?: string): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const inputs = useMemo(() => [owner, spender], [owner, spender])\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\n\n  return useMemo(\n    () => (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined),\n    [token, allowance],\n  )\n}\n\nexport default useTokenAllowance\n","import { MaxUint256 } from '@ethersproject/constants'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from '@awswap/sdk'\nimport { useCallback, useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { ROUTER_ADDRESS } from '../config/constants'\nimport useTokenAllowance from './useTokenAllowance'\nimport { Field } from '../state/swap/actions'\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks'\nimport { computeSlippageAdjustedAmounts } from '../utils/prices'\nimport { calculateGasMargin } from '../utils'\nimport { useTokenContract } from './useContract'\nimport { useCallWithGasPrice } from './useCallWithGasPrice'\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount,\n  spender?: string,\n): [ApprovalState, () => Promise<void>] {\n  const { account } = useActiveWeb3React()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n  const tokenContract = useTokenContract(token?.address)\n  const addTransaction = useTransactionAdder()\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily')\n      return\n    }\n    if (!token) {\n      console.error('no token')\n      return\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null')\n      return\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve')\n      return\n    }\n\n    if (!spender) {\n      console.error('no spender')\n      return\n    }\n\n    let useExact = false\n\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\n    })\n\n    // eslint-disable-next-line consistent-return\n    return callWithGasPrice(\n      tokenContract,\n      'approve',\n      [spender, useExact ? amountToApprove.raw.toString() : MaxUint256],\n      {\n        gasLimit: calculateGasMargin(estimatedGas),\n      },\n    )\n      .then((response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: `Approve ${amountToApprove.currency.symbol}`,\n          approval: { tokenAddress: token.address, spender },\n        })\n      })\n      .catch((error: Error) => {\n        console.error('Failed to approve token', error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction, callWithGasPrice])\n\n  return [approvalState, approve]\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\n  const amountToApprove = useMemo(\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\n    [trade, allowedSlippage],\n  )\n\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS)\n}\n","import styled from 'styled-components'\nimport { Button as RawButton, ButtonProps } from '@pancakeswap/uikit'\nimport React from 'react'\n\nfunction createStyledButton(br: number) {\n  return styled(RawButton)`\n    border-radius: ${br}px;\n    color: #fff;\n    background: ${({ theme }) => theme.colors.primary};\n    box-shadow: none;\n\n    &[data-variant='primary'] {\n    }\n\n    &[data-variant='tertiary'] {\n      color: ${({ theme }) => theme.colors.primary};\n      background: rgba(78, 60, 251, 0.08);\n    }\n  ` as <E extends React.ElementType<any> = 'button'>(props: ButtonProps<E>) => JSX.Element\n}\nconst Button = createStyledButton(8)\n\nexport const Button4 = createStyledButton(4)\n\nexport default Button\n","import { Token } from '@awswap/sdk'\nimport { parseUnits } from 'ethers/lib/utils'\nimport { SerializedToken } from '../actions'\n\nexport function serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n  }\n}\n\nexport function deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name,\n  )\n}\n\nexport enum GAS_PRICE {\n  default = '5',\n  fast = '6',\n  instant = '7',\n  testnet = '10',\n}\n\nexport const GAS_PRICE_GWEI = {\n  default: parseUnits(GAS_PRICE.default, 'gwei').toString(),\n  fast: parseUnits(GAS_PRICE.fast, 'gwei').toString(),\n  instant: parseUnits(GAS_PRICE.instant, 'gwei').toString(),\n  testnet: parseUnits(GAS_PRICE.testnet, 'gwei').toString(),\n}\n","import { ChainId } from '@awswap/sdk'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 3\n\nexport const BASE_BSC_SCAN_URLS = {\n  [ChainId.MAINNET]: 'https://browser.halo.land',\n}\n\nexport const BASE_BROWSER_URLS = {\n  [ChainId.MAINNET]: 'https://browser.halo.land',\n}\n\n// CAKE_PER_BLOCK details\n// 40 CAKE is minted per block\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\n// 10 CAKE per block goes to CAKE syrup pool\n// 9 CAKE per block goes to Yield farms and lottery\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\n// CAKE/Block in src/views/Home/components/CakeDataRow.tsx = 17 (40 - Amount sent to burn pool)\nexport const CAKE_PER_BLOCK = new BigNumber(40)\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR)\nexport const BASE_URL = 'https://halo.land/swap'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_URL}/add`\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_URL}/pool`\nexport const BASE_BSC_SCAN_URL = BASE_BROWSER_URLS[ChainId.MAINNET]\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\nexport const DEFAULT_GAS_LIMIT = 200000\nexport const AUCTION_BIDDERS_TO_FETCH = 500\nexport const RECLAIM_AUCTIONS_TO_FETCH = 500\nexport const AUCTION_WHITELISTED_BIDDERS_TO_FETCH = 500\n","const PANCAKE_EXTENDED = 'https://tokens.pancakeswap.finance/pancakeswap-extended.json'\nconst PANCAKE_TOP100 = 'https://tokens.pancakeswap.finance/pancakeswap-top-100.json'\n\nexport const UNSUPPORTED_LIST_URLS: string[] = []\n\nexport const DEFAULT_LIST_OF_LISTS: string[] = []\n// // lower index == higher priority for token import\n// export const DEFAULT_LIST_OF_LISTS: string[] = [\n//   PANCAKE_TOP100,\n//   PANCAKE_EXTENDED,\n//   ...UNSUPPORTED_LIST_URLS, // need to load unsupported tokens as well\n// ]\n\n// default lists to be 'active' aka searched across\nexport const DEFAULT_ACTIVE_LIST_URLS: string[] = []\n","import { ChainId, Token } from '@awswap/sdk'\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { DEFAULT_LIST_OF_LISTS } from 'config/constants/lists'\nimport { AppState } from '../index'\nimport DEFAULT_TOKEN_LIST from '../../config/constants/tokenLists/pancake-default.tokenlist.json'\nimport { UNSUPPORTED_LIST_URLS } from '../../config/constants/lists'\nimport UNSUPPORTED_TOKEN_LIST from '../../config/constants/tokenLists/pancake-unsupported.tokenlist.json'\n\ntype TagDetails = Tags[keyof Tags]\nexport interface TagInfo extends TagDetails {\n  id: string\n}\n\n// use ordering of default list of lists to assign priority\nfunction sortByListPriority(urlA: string, urlB: string) {\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\n\n  // need reverse order to make sure mapping includes top priority last\n  if (first < second) return 1\n  if (first > second) return -1\n  return 0\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo\n\n  public readonly tags: TagInfo[]\n\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n    this.tags = tags\n  }\n\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n}\n\nexport type TokenAddressMap = Readonly<\n  { [chainId in ChainId]: Readonly<{ [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList } }> }\n>\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [ChainId.MAINNET]: {},\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const tags: TagInfo[] =\n        tokenInfo.tags\n          ?.map((tagId) => {\n            if (!list.tags?.[tagId]) return undefined\n            return { ...list.tags[tagId], id: tagId }\n          })\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\n      const token = new WrappedTokenInfo(tokenInfo, tags)\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: {\n            token,\n            list,\n          },\n        },\n      }\n    },\n    { ...EMPTY_LIST },\n  )\n  listCache?.set(list, map)\n  return map\n}\n\nexport function useAllLists(): {\n  readonly [url: string]: {\n    readonly current: TokenList | null\n    readonly pendingUpdate: TokenList | null\n    readonly loadingRequestId: string | null\n    readonly error: string | null\n  }\n} {\n  return useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n}\n\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\n  return {\n    [ChainId.MAINNET]: { ...map1[ChainId.MAINNET], ...map2[ChainId.MAINNET] },\n  }\n}\n\n// merge tokens contained within lists from urls\nfunction useCombinedTokenMapFromUrls(urls: string[] | undefined): TokenAddressMap {\n  const lists = useAllLists()\n\n  return useMemo(() => {\n    if (!urls) return EMPTY_LIST\n\n    return (\n      urls\n        .slice()\n        // sort by priority so top priority goes last\n        .sort(sortByListPriority)\n        .reduce((allTokens, currentUrl) => {\n          const current = lists[currentUrl]?.current\n          if (!current) return allTokens\n          try {\n            const newTokens = Object.assign(listToTokenMap(current))\n            return combineMaps(allTokens, newTokens)\n          } catch (error) {\n            console.error('Could not show token list due to error', error)\n            return allTokens\n          }\n        }, EMPTY_LIST)\n    )\n  }, [lists, urls])\n}\n\n// filter out unsupported lists\nexport function useActiveListUrls(): string[] | undefined {\n  return useSelector<AppState, AppState['lists']['activeListUrls']>((state) => state.lists.activeListUrls)?.filter(\n    (url) => !UNSUPPORTED_LIST_URLS.includes(url),\n  )\n}\n\nexport function useInactiveListUrls(): string[] {\n  const lists = useAllLists()\n  const allActiveListUrls = useActiveListUrls()\n  return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList(): TokenAddressMap {\n  const activeListUrls = useActiveListUrls()\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls)\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST)\n  return combineMaps(activeTokens, defaultTokenMap)\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList(): TokenAddressMap {\n  const allInactiveListUrls: string[] = useInactiveListUrls()\n  return useCombinedTokenMapFromUrls(allInactiveListUrls)\n}\n\n// used to hide warnings on import for default tokens\nexport function useDefaultTokenList(): TokenAddressMap {\n  return listToTokenMap(DEFAULT_TOKEN_LIST)\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\nexport function useUnsupportedTokenList(): TokenAddressMap {\n  // get hard coded unsupported tokens\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\n\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS)\n\n  // format into one token address map\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\n}\n\nexport function useIsListActive(url: string): boolean {\n  const activeListUrls = useActiveListUrls()\n  return Boolean(activeListUrls?.includes(url))\n}\n","import BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getSouschefV2Contract } from 'utils/contractHelpers'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStaking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'HO')\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'HO')\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.stakingToken.address),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\n  try {\n    const sousContract = getSouschefV2Contract(sousId)\n    const stakingLimit = await sousContract.poolLimitPerUser()\n    return new BigNumber(stakingLimit.toString())\n  } catch (error) {\n    return BIG_ZERO\n  }\n}\n\nexport const fetchPoolsStakingLimits = async (\n  poolsWithStakingLimit: number[],\n): Promise<{ [key: string]: BigNumber }> => {\n  const validPools = poolsConfig\n    .filter((p) => p.stakingToken.symbol !== 'HO' && !p.isFinished)\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\n\n  // Get the staking limit for each valid pool\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\n  const stakingLimits = await Promise.all(stakingLimitPromises)\n\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\n    return {\n      ...accum,\n      [validPools[index].sousId]: stakingLimit,\n    }\n  }, {})\n}\n","import poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getMasterchefContract } from 'utils/contractHelpers'\nimport { getAddress } from 'utils/addressHelpers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'HO')\nconst bnbPools = poolsConfig.filter((p) => p.stakingToken.symbol === 'HO')\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst masterChefContract = getMasterchefContract()\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'allowance',\n    params: [account, getAddress(p.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await simpleRpcProvider.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance.toString()).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.userInfo('0', account)\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount.toString()).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.pendingCake('0', account)\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward.toString()).toJSON() }\n}\n","import BigNumber from 'bignumber.js'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { multicallv2 } from 'utils/multicall'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport { getCakeVaultAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nexport const fetchPublicVaultData = async () => {\n  try {\n    const calls = [\n      'getPricePerFullShare',\n      'totalShares',\n      'calculateHarvestCakeRewards',\n      'calculateTotalPendingCakeRewards',\n    ].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[sharePrice], [shares], [estimatedCakeBountyReward], [totalPendingCakeHarvest]] = await multicallv2(\n      cakeVaultAbi,\n      calls,\n    )\n\n    const totalSharesAsBigNumber = shares ? new BigNumber(shares.toString()) : BIG_ZERO\n    const sharePriceAsBigNumber = sharePrice ? new BigNumber(sharePrice.toString()) : BIG_ZERO\n    const totalCakeInVaultEstimate = convertSharesToCake(totalSharesAsBigNumber, sharePriceAsBigNumber)\n    return {\n      totalShares: totalSharesAsBigNumber.toJSON(),\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\n      totalCakeInVault: totalCakeInVaultEstimate.cakeAsBigNumber.toJSON(),\n      estimatedCakeBountyReward: new BigNumber(estimatedCakeBountyReward.toString()).toJSON(),\n      totalPendingCakeHarvest: new BigNumber(totalPendingCakeHarvest.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      totalShares: null,\n      pricePerFullShare: null,\n      totalCakeInVault: null,\n      estimatedCakeBountyReward: null,\n      totalPendingCakeHarvest: null,\n    }\n  }\n}\n\nexport const fetchVaultFees = async () => {\n  try {\n    const calls = ['performanceFee', 'callFee', 'withdrawFee', 'withdrawFeePeriod'].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[performanceFee], [callFee], [withdrawalFee], [withdrawalFeePeriod]] = await multicallv2(cakeVaultAbi, calls)\n\n    return {\n      performanceFee: performanceFee.toNumber(),\n      callFee: callFee.toNumber(),\n      withdrawalFee: withdrawalFee.toNumber(),\n      withdrawalFeePeriod: withdrawalFeePeriod.toNumber(),\n    }\n  } catch (error) {\n    return {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    }\n  }\n}\n\nexport default fetchPublicVaultData\n","import BigNumber from 'bignumber.js'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nconst fetchVaultUser = async (account: string) => {\n  try {\n    const userContractResponse = await cakeVaultContract.userInfo(account)\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse.shares.toString()).toJSON(),\n      lastDepositedTime: userContractResponse.lastDepositedTime.toString(),\n      lastUserActionTime: userContractResponse.lastUserActionTime.toString(),\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n      cakeAtLastUserAction: null,\n    }\n  }\n}\n\nexport default fetchVaultUser\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { PoolsState, Pool, CakeVault, VaultFees, VaultUser, AppThunk } from 'state/types'\nimport { getPoolApr } from 'utils/apr'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getAddress } from 'utils/addressHelpers'\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { fetchPublicVaultData, fetchVaultFees } from './fetchVaultPublic'\nimport fetchVaultUser from './fetchVaultUser'\nimport { getTokenPricesFromFarm } from './helpers'\n\nconst initialState: PoolsState = {\n  data: [...poolsConfig],\n  userDataLoaded: false,\n  cakeVault: {\n    totalShares: null,\n    pricePerFullShare: null,\n    totalCakeInVault: null,\n    estimatedCakeBountyReward: null,\n    totalPendingCakeHarvest: null,\n    fees: {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    },\n    userData: {\n      isLoading: true,\n      userShares: null,\n      cakeAtLastUserAction: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n    },\n  },\n}\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStaking()\n\n  const prices = getTokenPricesFromFarm(getState().farms.data)\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\n\n    const stakingTokenAddress = pool.stakingToken.address ? getAddress(pool.stakingToken.address).toLowerCase() : null\n    const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\n\n    const earningTokenAddress = pool.earningToken.address ? getAddress(pool.earningToken.address).toLowerCase() : null\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress] : 0\n    const apr = !isPoolFinished\n      ? getPoolApr(\n          stakingTokenPrice,\n          earningTokenPrice,\n          getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\n          parseFloat(pool.tokenPerBlock),\n        )\n      : 0\n\n    return {\n      ...blockLimit,\n      ...totalStaking,\n      stakingTokenPrice,\n      earningTokenPrice,\n      apr,\n      isFinished: isPoolFinished,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\n  const poolsWithStakingLimit = getState()\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\n    .map((pool) => pool.sousId)\n\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\n\n  const stakingLimitData = poolsConfig.map((pool) => {\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\n      return { sousId: pool.sousId }\n    }\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\n    return {\n      sousId: pool.sousId,\n      stakingLimit: stakingLimit.toJSON(),\n    }\n  })\n\n  dispatch(setPoolsPublicData(stakingLimitData))\n}\n\nexport const fetchPoolsUserDataAsync =\n  (account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    const stakingTokenBalances = await fetchUserBalances(account)\n    const stakedBalances = await fetchUserStakeBalances(account)\n    const pendingRewards = await fetchUserPendingRewards(account)\n\n    const userData = poolsConfig.map((pool) => ({\n      sousId: pool.sousId,\n      allowance: allowances[pool.sousId],\n      stakingTokenBalance: stakingTokenBalances[pool.sousId],\n      stakedBalance: stakedBalances[pool.sousId],\n      pendingReward: pendingRewards[pool.sousId],\n    }))\n\n    dispatch(setPoolsUserData(userData))\n  }\n\nexport const updateUserAllowance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n  }\n\nexport const updateUserBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const tokenBalances = await fetchUserBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n  }\n\nexport const updateUserStakedBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const stakedBalances = await fetchUserStakeBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n  }\n\nexport const updateUserPendingReward =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const pendingRewards = await fetchUserPendingRewards(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n  }\n\nexport const fetchCakeVaultPublicData = createAsyncThunk<CakeVault>('cakeVault/fetchPublicData', async () => {\n  const publicVaultInfo = await fetchPublicVaultData()\n  return publicVaultInfo\n})\n\nexport const fetchCakeVaultFees = createAsyncThunk<VaultFees>('cakeVault/fetchFees', async () => {\n  const vaultFees = await fetchVaultFees()\n  return vaultFees\n})\n\nexport const fetchCakeVaultUserData = createAsyncThunk<VaultUser, { account: string }>(\n  'cakeVault/fetchUser',\n  async ({ account }) => {\n    const userData = await fetchVaultUser(account)\n    return userData\n  },\n)\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n      state.userDataLoaded = true\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n\n      if (index >= 0) {\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Vault public data that updates frequently\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<CakeVault>) => {\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\n    })\n    // Vault fees\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<VaultFees>) => {\n      const fees = action.payload\n      state.cakeVault = { ...state.cakeVault, fees }\n    })\n    // Vault user data\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<VaultUser>) => {\n      const userData = action.payload\n      userData.isLoading = false\n      state.cakeVault = { ...state.cakeVault, userData }\n    })\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\nexport default PoolsSlice.reducer\n","import { ActionCreatorWithPayload, createAction } from '@reduxjs/toolkit'\nimport { TokenList, Version } from '@uniswap/token-lists'\n\nexport const fetchTokenList: Readonly<{\n  pending: ActionCreatorWithPayload<{ url: string; requestId: string }>\n  fulfilled: ActionCreatorWithPayload<{ url: string; tokenList: TokenList; requestId: string }>\n  rejected: ActionCreatorWithPayload<{ url: string; errorMessage: string; requestId: string }>\n}> = {\n  pending: createAction('lists/fetchTokenList/pending'),\n  fulfilled: createAction('lists/fetchTokenList/fulfilled'),\n  rejected: createAction('lists/fetchTokenList/rejected'),\n}\n// add and remove from list options\nexport const addList = createAction<string>('lists/addList')\nexport const removeList = createAction<string>('lists/removeList')\n\n// select which lists to search across from loaded lists\nexport const enableList = createAction<string>('lists/enableList')\nexport const disableList = createAction<string>('lists/disableList')\n\n// versioning\nexport const acceptListUpdate = createAction<string>('lists/acceptListUpdate')\nexport const rejectVersionUpdate = createAction<Version>('lists/rejectVersionUpdate')\n","import { useAllLists } from 'state/lists/hooks'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\nimport { useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useAllInactiveTokens } from 'hooks/Tokens'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport useInterval from 'hooks/useInterval'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { AppDispatch } from '../index'\nimport { acceptListUpdate } from './actions'\nimport { useActiveListUrls } from './hooks'\n\nexport default function Updater(): null {\n  const { library } = useWeb3Provider()\n  const dispatch = useDispatch<AppDispatch>()\n  const isWindowVisible = useIsWindowVisible()\n\n  // get all loaded lists, and the active urls\n  const lists = useAllLists()\n  const activeListUrls = useActiveListUrls()\n\n  // initiate loading\n  useAllInactiveTokens()\n\n  const fetchList = useFetchListCallback()\n  const fetchAllListsCallback = useCallback(() => {\n    if (!isWindowVisible) return\n    Object.keys(lists).forEach((url) =>\n      fetchList(url).catch((error) => console.debug('interval list fetching error', error)),\n    )\n  }, [fetchList, isWindowVisible, lists])\n\n  // fetch all lists every 10 minutes, but only after we initialize library\n  useInterval(fetchAllListsCallback, library ? 1000 * 60 * 10 : null)\n\n  // whenever a list is not loaded and not loading, try again to load it\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list.current && !list.loadingRequestId && !list.error) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // if any lists from unsupported lists are loaded, check them too (in case new updates since last visit)\n  useEffect(() => {\n    Object.keys(UNSUPPORTED_LIST_URLS).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list || (!list.current && !list.loadingRequestId && !list.error)) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // automatically update lists if versions are minor/patch\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (list.current && list.pendingUpdate) {\n        const bump = getVersionUpgrade(list.current.version, list.pendingUpdate.version)\n        // eslint-disable-next-line default-case\n        switch (bump) {\n          case VersionUpgrade.NONE:\n            throw new Error('unexpected no version bump')\n          // update any active or inactive lists\n          case VersionUpgrade.PATCH:\n          case VersionUpgrade.MINOR:\n          case VersionUpgrade.MAJOR:\n            dispatch(acceptListUpdate(listUrl))\n        }\n      }\n    })\n  }, [dispatch, lists, activeListUrls])\n\n  return null\n}\n","import { useEffect, useRef } from 'react'\n\nexport default function useInterval(callback: () => void, delay: null | number, leading = true) {\n  const savedCallback = useRef<() => void>()\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      const { current } = savedCallback\n      if (current) {\n        current()\n      }\n    }\n\n    if (delay !== null) {\n      if (leading) tick()\n      const id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n    return undefined\n  }, [delay, leading])\n}\n","/* eslint-disable */\n\nfunction wait(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\nfunction waitRandom(min: number, max: number): Promise<void> {\n  return wait(min + Math.round(Math.random() * Math.max(0, max - min)))\n}\n\n/**\n * This error is thrown if the function is cancelled before completing\n */\nexport class CancelledError extends Error {\n  constructor() {\n    super('Cancelled')\n  }\n}\n\n/**\n * Throw this error if the function should retry\n */\nexport class RetryableError extends Error {}\n\n/**\n * Retries the function that returns the promise until the promise successfully resolves up to n retries\n * @param fn function to retry\n * @param n how many times to retry\n * @param minWait min wait between retries in ms\n * @param maxWait max wait between retries in ms\n */\nexport function retry<T>(\n  fn: () => Promise<T>,\n  { n, minWait, maxWait }: { n: number; minWait: number; maxWait: number },\n): { promise: Promise<T>; cancel: () => void } {\n  let completed = false\n  let rejectCancelled: (error: Error) => void\n  const promise = new Promise<T>(async (resolve, reject) => {\n    rejectCancelled = reject\n    while (true) {\n      let result: T\n      try {\n        result = await fn()\n        if (!completed) {\n          resolve(result)\n          completed = true\n        }\n        break\n      } catch (error) {\n        if (completed) {\n          break\n        }\n        if (n <= 0 || !(error instanceof RetryableError)) {\n          reject(error)\n          completed = true\n          break\n        }\n        n--\n      }\n      await waitRandom(minWait, maxWait)\n    }\n  })\n  return {\n    promise,\n    cancel: () => {\n      if (completed) return\n      completed = true\n      rejectCancelled(new CancelledError())\n    },\n  }\n}\n\n/* eslint-enable */\n","import { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useBlock } from 'state/block/hooks'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useMulticallContract } from '../../hooks/useContract'\nimport useDebounce from '../../hooks/useDebounce'\nimport { CancelledError, retry, RetryableError } from './retry'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  Call,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  parseCallKey,\n  updateMulticallResults,\n} from './actions'\nimport chunkArray from './chunkArray'\n\n// chunk calls so we do not exceed the gas limit\nconst CALL_CHUNK_SIZE = 500\n\n/**\n * Fetches a chunk of calls, enforcing a minimum block number constraint\n * @param multicallContract multicall contract to fetch against\n * @param chunk chunk of calls to make\n * @param minBlockNumber minimum block number of the result set\n */\nasync function fetchChunk(\n  multicallContract: Contract,\n  chunk: Call[],\n  minBlockNumber: number,\n): Promise<{ results: string[]; blockNumber: number }> {\n  console.debug('Fetching chunk', multicallContract, chunk, minBlockNumber)\n  let resultsBlockNumber\n  let returnData\n  try {\n    // prettier-ignore\n    [resultsBlockNumber, returnData] = await multicallContract.aggregate(\n      chunk.map((obj) => [obj.address, obj.callData])\n    )\n  } catch (error) {\n    console.debug('Failed to fetch chunk inside retry', error)\n    throw error\n  }\n  if (resultsBlockNumber.toNumber() < minBlockNumber) {\n    console.debug(`Fetched results for old block number: ${resultsBlockNumber.toString()} vs. ${minBlockNumber}`)\n    throw new RetryableError('Fetched for old block number')\n  }\n  return { results: returnData, blockNumber: resultsBlockNumber.toNumber() }\n}\n\n/**\n * From the current all listeners state, return each call key mapped to the\n * minimum number of blocks per fetch. This is how often each key must be fetched.\n * @param allListeners the all listeners state\n * @param chainId the current chain id\n */\nexport function activeListeningKeys(\n  allListeners: AppState['multicall']['callListeners'],\n  chainId?: number,\n): { [callKey: string]: number } {\n  if (!allListeners || !chainId) return {}\n  const listeners = allListeners[chainId]\n  if (!listeners) return {}\n\n  return Object.keys(listeners).reduce<{ [callKey: string]: number }>((memo, callKey) => {\n    const keyListeners = listeners[callKey]\n\n    memo[callKey] = Object.keys(keyListeners)\n      .filter((key) => {\n        const blocksPerFetch = parseInt(key)\n        if (blocksPerFetch <= 0) return false\n        return keyListeners[blocksPerFetch] > 0\n      })\n      .reduce((previousMin, current) => {\n        return Math.min(previousMin, parseInt(current))\n      }, Infinity)\n    return memo\n  }, {})\n}\n\n/**\n * Return the keys that need to be refetched\n * @param callResults current call result state\n * @param listeningKeys each call key mapped to how old the data can be in blocks\n * @param chainId the current chain id\n * @param currentBlock the latest block number\n */\nexport function outdatedListeningKeys(\n  callResults: AppState['multicall']['callResults'],\n  listeningKeys: { [callKey: string]: number },\n  chainId: number | undefined,\n  currentBlock: number | undefined,\n): string[] {\n  if (!chainId || !currentBlock) return []\n  const results = callResults[chainId]\n  // no results at all, load everything\n  if (!results) return Object.keys(listeningKeys)\n\n  return Object.keys(listeningKeys).filter((callKey) => {\n    const blocksPerFetch = listeningKeys[callKey]\n\n    const data = callResults[chainId][callKey]\n    // no data, must fetch\n    if (!data) return true\n\n    const minDataBlockNumber = currentBlock - (blocksPerFetch - 1)\n\n    // already fetching it for a recent enough block, don't refetch it\n    if (data.fetchingBlockNumber && data.fetchingBlockNumber >= minDataBlockNumber) return false\n\n    // if data is older than minDataBlockNumber, fetch it\n    return !data.blockNumber || data.blockNumber < minDataBlockNumber\n  })\n}\n\nexport default function Updater(): null {\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['multicall']>((s) => s.multicall)\n  // wait for listeners to settle before triggering updates\n  const debouncedListeners = useDebounce(state.callListeners, 100)\n  const { currentBlock } = useBlock()\n  const { chainId } = useActiveWeb3React()\n  const multicallContract = useMulticallContract()\n  const cancellations = useRef<{ blockNumber: number; cancellations: (() => void)[] }>()\n\n  const listeningKeys: { [callKey: string]: number } = useMemo(() => {\n    return activeListeningKeys(debouncedListeners, chainId)\n  }, [debouncedListeners, chainId])\n\n  const unserializedOutdatedCallKeys = useMemo(() => {\n    return outdatedListeningKeys(state.callResults, listeningKeys, chainId, currentBlock)\n  }, [chainId, state.callResults, listeningKeys, currentBlock])\n\n  const serializedOutdatedCallKeys = useMemo(\n    () => JSON.stringify(unserializedOutdatedCallKeys.sort()),\n    [unserializedOutdatedCallKeys],\n  )\n\n  useEffect(() => {\n    if (!currentBlock || !chainId || !multicallContract) return\n\n    const outdatedCallKeys: string[] = JSON.parse(serializedOutdatedCallKeys)\n    if (outdatedCallKeys.length === 0) return\n    const calls = outdatedCallKeys.map((key) => parseCallKey(key))\n\n    const chunkedCalls = chunkArray(calls, CALL_CHUNK_SIZE)\n\n    if (cancellations.current?.blockNumber !== currentBlock) {\n      cancellations.current?.cancellations?.forEach((c) => c())\n    }\n\n    dispatch(\n      fetchingMulticallResults({\n        calls,\n        chainId,\n        fetchingBlockNumber: currentBlock,\n      }),\n    )\n\n    cancellations.current = {\n      blockNumber: currentBlock,\n      cancellations: chunkedCalls.map((chunk, index) => {\n        const { cancel, promise } = retry(() => fetchChunk(multicallContract, chunk, currentBlock), {\n          n: Infinity,\n          minWait: 2500,\n          maxWait: 3500,\n        })\n        promise\n          .then(({ results: returnData, blockNumber: fetchBlockNumber }) => {\n            cancellations.current = { cancellations: [], blockNumber: currentBlock }\n\n            // accumulates the length of all previous indices\n            const firstCallKeyIndex = chunkedCalls.slice(0, index).reduce<number>((memo, curr) => memo + curr.length, 0)\n            const lastCallKeyIndex = firstCallKeyIndex + returnData.length\n\n            dispatch(\n              updateMulticallResults({\n                chainId,\n                results: outdatedCallKeys\n                  .slice(firstCallKeyIndex, lastCallKeyIndex)\n                  .reduce<{ [callKey: string]: string | null }>((memo, callKey, i) => {\n                    memo[callKey] = returnData[i] ?? null\n                    return memo\n                  }, {}),\n                blockNumber: fetchBlockNumber,\n              }),\n            )\n          })\n          .catch((error: any) => {\n            if (error instanceof CancelledError) {\n              console.debug('Cancelled fetch for blockNumber', currentBlock)\n              return\n            }\n            console.error('Failed to fetch multicall chunk', chunk, chainId, error)\n            dispatch(\n              errorFetchingMulticallResults({\n                calls: chunk,\n                chainId,\n                fetchingBlockNumber: currentBlock,\n              }),\n            )\n          })\n        return cancel\n      }),\n    }\n  }, [chainId, multicallContract, dispatch, serializedOutdatedCallKeys, currentBlock])\n\n  return null\n}\n","// chunks array into chunks of maximum size\n// evenly distributes items among the chunks\nexport default function chunkArray<T>(items: T[], maxChunkSize: number): T[][] {\n  if (maxChunkSize < 1) throw new Error('maxChunkSize must be gte 1')\n  if (items.length <= maxChunkSize) return [items]\n\n  const numChunks: number = Math.ceil(items.length / maxChunkSize)\n  const chunkSize = Math.ceil(items.length / numChunks)\n\n  return [...Array(numChunks).keys()].map((ix) => items.slice(ix * chunkSize, ix * chunkSize + chunkSize))\n}\n","import React, { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Text, Flex, Link } from '@pancakeswap/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { useBlock } from 'state/block/hooks'\nimport useToast from 'hooks/useToast'\nimport { AppDispatch, AppState } from '../index'\nimport { checkedTransaction, finalizeTransaction } from './actions'\n\nexport function shouldCheck(\n  currentBlock: number,\n  tx: { addedTime: number; receipt?: any; lastCheckedBlockNumber?: number },\n): boolean {\n  if (tx.receipt) return false\n  if (!tx.lastCheckedBlockNumber) return true\n  const blocksSinceCheck = currentBlock - tx.lastCheckedBlockNumber\n  if (blocksSinceCheck < 1) return false\n  const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60\n  if (minutesPending > 60) {\n    // every 10 blocks if pending for longer than an hour\n    return blocksSinceCheck > 9\n  }\n  if (minutesPending > 5) {\n    // every 3 blocks if pending more than 5 minutes\n    return blocksSinceCheck > 2\n  }\n  // otherwise every block\n  return true\n}\n\nexport default function Updater(): null {\n  const { library, chainId } = useActiveWeb3React()\n\n  const { currentBlock } = useBlock()\n\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  const transactions = useMemo(() => (chainId ? state[chainId] ?? {} : {}), [chainId, state])\n\n  const { toastError, toastSuccess } = useToast()\n\n  useEffect(() => {\n    if (!chainId || !library || !currentBlock) return\n\n    Object.keys(transactions)\n      .filter((hash) => shouldCheck(currentBlock, transactions[hash]))\n      .forEach((hash) => {\n        library\n          .getTransactionReceipt(hash)\n          .then((receipt) => {\n            if (receipt) {\n              dispatch(\n                finalizeTransaction({\n                  chainId,\n                  hash,\n                  receipt: {\n                    blockHash: receipt.blockHash,\n                    blockNumber: receipt.blockNumber,\n                    contractAddress: receipt.contractAddress,\n                    from: receipt.from,\n                    status: receipt.status,\n                    to: receipt.to,\n                    transactionHash: receipt.transactionHash,\n                    transactionIndex: receipt.transactionIndex,\n                  },\n                }),\n              )\n\n              const toast = receipt.status === 1 ? toastSuccess : toastError\n              toast(\n                'Transaction receipt',\n                <Flex flexDirection=\"column\">\n                  <Text>{transactions[hash]?.summary ?? `Hash: ${hash.slice(0, 8)}...${hash.slice(58, 65)}`}</Text>\n                  {chainId && (\n                    <Link external href={getBscScanLink(hash, 'transaction', chainId)}>\n                      View on Browser\n                    </Link>\n                  )}\n                </Flex>,\n              )\n            } else {\n              dispatch(checkedTransaction({ chainId, hash, blockNumber: currentBlock }))\n            }\n          })\n          .catch((error) => {\n            console.error(`failed to check transaction hash: ${hash}`, error)\n          })\n      })\n  }, [chainId, library, transactions, currentBlock, dispatch, toastSuccess, toastError])\n\n  return null\n}\n","import React, { useState } from 'react'\nimport {\n  ButtonMenu,\n  ButtonMenuItem,\n  CloseIcon,\n  Heading,\n  IconButton,\n  InjectedModalProps,\n  ModalBody,\n  ModalContainer,\n  ModalHeader as UIKitModalHeader,\n  ModalTitle,\n} from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\nimport WalletInfo from './WalletInfo'\nimport WalletTransactions from './WalletTransactions'\n\nexport enum WalletView {\n  WALLET_INFO,\n  TRANSACTIONS,\n}\n\ninterface WalletModalProps extends InjectedModalProps {\n  initialView?: WalletView\n}\n\nexport const LOW_BNB_BALANCE = new BigNumber('2000000000') // 2 Gwei\n\nconst ModalHeader = styled(UIKitModalHeader)`\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n`\n\nconst Tabs = styled.div`\n  background-color: ${({ theme }) => theme.colors.dropdown};\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  padding: 16px 24px;\n\n  > div {\n    background: #fff;\n    border-color: #fff;\n  }\n\n  button[data-active='true'] {\n    color: #fff;\n    background: #bc232c;\n  }\n`\n\nconst WalletModal: React.FC<WalletModalProps> = ({ initialView = WalletView.WALLET_INFO, onDismiss }) => {\n  const [view, setView] = useState(initialView)\n  const { t } = useTranslation()\n  const { balance, fetchStatus } = useGetBnbBalance()\n  const hasLowBnbBalance = fetchStatus === FetchStatus.SUCCESS && balance.lte(LOW_BNB_BALANCE)\n\n  const handleClick = (newIndex: number) => {\n    setView(newIndex)\n  }\n\n  return (\n    <ModalContainer title={t('Welcome!')} minWidth=\"320px\" style={{ borderRadius: 8 }}>\n      <ModalHeader>\n        <ModalTitle>\n          <Heading>{t('Your Wallet')}</Heading>\n        </ModalTitle>\n        <IconButton variant=\"text\" onClick={onDismiss}>\n          <CloseIcon width=\"24px\" color=\"text\" />\n        </IconButton>\n      </ModalHeader>\n      <Tabs>\n        <ButtonMenu scale=\"sm\" variant=\"subtle\" onItemClick={handleClick} activeIndex={view} fullWidth>\n          <ButtonMenuItem data-active={view === 0}>{t('Wallet')}</ButtonMenuItem>\n          <ButtonMenuItem data-active={view === 1}>{t('Transactions')}</ButtonMenuItem>\n        </ButtonMenu>\n      </Tabs>\n      <ModalBody p=\"24px\" maxWidth=\"400px\" width=\"100%\">\n        {view === WalletView.WALLET_INFO && <WalletInfo hasLowBnbBalance={hasLowBnbBalance} onDismiss={onDismiss} />}\n        {view === WalletView.TRANSACTIONS && <WalletTransactions />}\n      </ModalBody>\n    </ModalContainer>\n  )\n}\n\nexport default WalletModal\n","import { useEffect } from 'react'\nimport { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\n\nconst _binanceChainListener = async () =>\n  new Promise<void>((resolve) =>\n    Object.defineProperty(window, 'BinanceChain', {\n      get() {\n        return this.bsc\n      },\n      set(bsc) {\n        this.bsc = bsc\n\n        resolve()\n      },\n    }),\n  )\n\nconst useEagerConnect = () => {\n  const { login } = useAuth()\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\n\n    if (connectorId) {\n      const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\n      const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\n\n      // Currently BSC extension doesn't always inject in time.\n      // We must check to see if it exists, and if not, wait for it before proceeding.\n      if (isConnectorBinanceChain && !isBinanceChainDefined) {\n        _binanceChainListener().then(() => login(connectorId))\n\n        return\n      }\n\n      login(connectorId)\n    }\n  }, [login])\n}\n\nexport default useEagerConnect\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledDatePickerPortal = styled.div`\n  .react-datepicker-wrapper,\n  .react-datepicker__input-container {\n    display: block;\n  }\n\n  .react-datepicker {\n    background: ${({ theme }) => theme.card.background};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n    color: ${({ theme }) => theme.colors.text};\n    font-family: 'Kanit', sans-serif;\n  }\n\n  .react-datepicker__header {\n    background: ${({ theme }) => theme.colors.input};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__current-month,\n  .react-datepicker-time__header,\n  .react-datepicker-year-header,\n  .react-datepicker__day-name,\n  .react-datepicker__day,\n  .react-datepicker__time-name {\n    color: ${({ theme }) => theme.colors.text};\n  }\n\n  .react-datepicker__day:hover,\n  .react-datepicker__month-text:hover,\n  .react-datepicker__quarter-text:hover,\n  .react-datepicker__year-text:hover {\n    background-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::before,\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::after {\n    border-bottom-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__day--selected,\n  .react-datepicker__day--in-selecting-range,\n  .react-datepicker__day--in-range,\n  .react-datepicker__month-text--selected,\n  .react-datepicker__month-text--in-selecting-range,\n  .react-datepicker__month-text--in-range,\n  .react-datepicker__quarter-text--selected,\n  .react-datepicker__quarter-text--in-selecting-range,\n  .react-datepicker__quarter-text--in-range,\n  .react-datepicker__year-text--selected,\n  .react-datepicker__year-text--in-selecting-range,\n  .react-datepicker__year-text--in-range {\n    background-color: ${({ theme }) => theme.colors.primary};\n  }\n\n  .react-datepicker__day--selected:hover,\n  .react-datepicker__day--in-selecting-range:hover,\n  .react-datepicker__day--in-range:hover,\n  .react-datepicker__month-text--selected:hover,\n  .react-datepicker__month-text--in-selecting-range:hover,\n  .react-datepicker__month-text--in-range:hover,\n  .react-datepicker__quarter-text--selected:hover,\n  .react-datepicker__quarter-text--in-selecting-range:hover,\n  .react-datepicker__quarter-text--in-range:hover,\n  .react-datepicker__year-text--selected:hover,\n  .react-datepicker__year-text--in-selecting-range:hover,\n  .react-datepicker__year-text--in-range:hover {\n    background-color: ${({ theme }) => theme.colors.primaryBright};\n  }\n\n  .react-datepicker__day--keyboard-selected,\n  .react-datepicker__month-text--keyboard-selected,\n  .react-datepicker__quarter-text--keyboard-selected,\n  .react-datepicker__year-text--keyboard-selected {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__day--keyboard-selected:hover,\n  .react-datepicker__month-text--keyboard-selected:hover,\n  .react-datepicker__quarter-text--keyboard-selected:hover,\n  .react-datepicker__year-text--keyboard-selected:hover {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__time-container,\n  .react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box {\n    width: 120px;\n  }\n\n  .react-datepicker__header--time {\n    padding: 8px;\n  }\n\n  .react-datepicker__time-container\n    .react-datepicker__time\n    .react-datepicker__time-box\n    ul.react-datepicker__time-list\n    li.react-datepicker__time-list-item {\n    height: auto;\n    padding: 8px;\n  }\n`\n\nconst DatePickerPortal = () => {\n  return <StyledDatePickerPortal id=\"reactDatePicker\" />\n}\n\nexport default DatePickerPortal\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pancakeswap/uikit/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Kanit', sans-serif;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","import React from 'react'\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M2.6463 12.4552C2.6463 17.9871 7.13098 22.4718 12.6628 22.4718C18.1947 22.4718 22.6794 17.9871 22.6794 12.4552C22.6794 6.92334 18.1947 2.43866 12.6628 2.43866C7.13098 2.43866 2.6463 6.92334 2.6463 12.4552ZM4.46749 12.4552C4.46749 7.92909 8.13674 4.25985 12.6628 4.25985C17.189 4.25985 20.8582 7.92909 20.8582 12.4552C20.8582 16.9813 17.189 20.6506 12.6628 20.6506C8.13674 20.6506 4.46749 16.9813 4.46749 12.4552ZM6.72258 15.0641L6.76811 15.1155L9.87688 18.3513C9.95879 18.4365 10.0706 18.4865 10.1887 18.4907C10.3068 18.495 10.4219 18.4532 10.5097 18.3741L10.5498 18.3331L11.0757 17.7235C11.1431 17.6452 11.182 17.5463 11.1858 17.443C11.1896 17.3398 11.1581 17.2383 11.0966 17.1552L11.0593 17.1106L9.38288 15.3659H18.3541C18.4657 15.3659 18.5733 15.3249 18.6567 15.2507C18.74 15.1765 18.7932 15.0743 18.8062 14.9634L18.8094 14.9106V14.0487C18.8094 13.9372 18.7684 13.8296 18.6943 13.7463C18.6202 13.6629 18.5181 13.6097 18.4073 13.5966L18.3541 13.5935H7.34452C6.61695 13.5935 6.26273 14.5086 6.72258 15.0641ZM6.51633 10.8617C6.51633 10.9215 6.52811 10.9807 6.55099 11.0359C6.57387 11.0911 6.60741 11.1413 6.64968 11.1836C6.69196 11.2259 6.74215 11.2594 6.79739 11.2823C6.85263 11.3052 6.91184 11.317 6.97163 11.317H17.9812C18.732 11.317 19.0848 10.3435 18.5576 9.7949L15.4493 6.5591C15.4342 6.54362 15.4342 6.54362 15.4183 6.52951C15.3268 6.45074 15.2078 6.41153 15.0874 6.4205C14.967 6.42946 14.8551 6.48587 14.7763 6.57732L14.25 7.18696C14.176 7.27286 14.1367 7.38329 14.1398 7.49663C14.143 7.60998 14.1882 7.71808 14.2669 7.79979L15.9428 9.54449H6.97163C6.91184 9.54449 6.85263 9.55627 6.79739 9.57915C6.74215 9.60203 6.69196 9.63557 6.64968 9.67784C6.60741 9.72012 6.57387 9.77031 6.55099 9.82555C6.52811 9.88079 6.51633 9.94 6.51633 9.99979V10.8617Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path\n        d=\"M22.4533 7.97755L18.0649 3.58916C17.6359 3.16016 17.075 2.94659 16.5142 2.94659C15.9533 2.94659 15.3906 3.16016 14.9616 3.59102C14.5345 4.01816 14.3191 4.58087 14.3191 5.14172C14.3191 5.70257 14.5326 6.26528 14.9635 6.69242L15.606 7.33498L12.3654 10.5757L9.13395 7.34427L4.07886 12.3994V19.3302C4.07886 20.0544 4.376 20.7137 4.85142 21.191C5.3287 21.6683 5.98798 21.9636 6.71226 21.9636H13.6431L18.6982 16.9085L15.4668 13.6789L18.7074 10.4382L19.35 11.0808C19.7771 11.5079 20.3399 11.7234 20.9007 11.7234C21.4616 11.7234 22.0243 11.5098 22.4533 11.0808C22.8804 10.6537 23.0958 10.091 23.0958 9.53011C23.0958 8.9674 22.8823 8.40655 22.4533 7.97755ZM16.6293 16.9085L13.0376 20.5002H6.71226C6.39098 20.5002 6.09755 20.3683 5.88584 20.1566C5.67413 19.9449 5.54227 19.6514 5.54227 19.3302V13.0048L9.13395 9.41311L11.3309 11.6101L9.10981 13.8294C8.68267 14.2565 8.46725 14.8192 8.46725 15.3801C8.46725 15.9409 8.68082 16.5036 9.11167 16.9326C9.53881 17.3598 10.1015 17.5752 10.6624 17.5752C11.2232 17.5752 11.7859 17.3616 12.2131 16.9326L14.4323 14.7133L16.6293 16.9085ZM21.4188 10.0464C21.2777 10.1875 21.0901 10.26 20.9026 10.26C20.715 10.26 20.5274 10.1894 20.3863 10.0464L18.7074 8.3694L11.1786 15.8982C11.0375 16.0393 10.8499 16.1118 10.6624 16.1118C10.4748 16.1118 10.2872 16.0412 10.1442 15.8963C10.0031 15.7552 9.93066 15.5676 9.93066 15.3801C9.93066 15.1925 10.0012 15.0049 10.1442 14.8638L17.6712 7.33684L15.996 5.658C15.8549 5.51686 15.7825 5.32929 15.7825 5.14172C15.7825 4.95415 15.853 4.76658 15.9979 4.62358C16.139 4.48244 16.3266 4.41001 16.5142 4.41001C16.7017 4.41001 16.8893 4.48058 17.0305 4.62358L21.4188 9.01197C21.5618 9.15497 21.6324 9.34254 21.6324 9.52825C21.6324 9.71582 21.5618 9.90339 21.4188 10.0464Z\"\n        stroke=\"#5C5C75\"\n        strokeWidth=\"0.4\"\n      />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path\n        d=\"M20.3525 9.60971C20.3544 9.58581 20.3544 9.5618 20.3525 9.5379V9.47507V9.41224C20.3438 9.39043 20.3333 9.36941 20.3211 9.34941V9.3135C20.3087 9.29221 20.2936 9.2726 20.2762 9.25516C20.2655 9.23662 20.2518 9.21995 20.2358 9.20579L20.1909 9.16091L20.0787 9.08911H20.0204L19.9665 9.05769L19.9037 9.01281L19.8408 8.99037H19.4504L19.3831 9.02179H19.3517L16.8025 10.4938C16.6739 10.5678 16.5734 10.6822 16.5166 10.8192C16.4597 10.9562 16.4497 11.1082 16.4881 11.2515C16.5264 11.3947 16.6111 11.5213 16.7288 11.6116C16.8465 11.7018 16.9908 11.7506 17.1391 11.7505C17.2577 11.7499 17.374 11.7173 17.4757 11.6562L19.0151 10.7586V17.0373C19.0127 17.6678 18.7606 18.2716 18.3139 18.7166C17.8672 19.1616 17.2624 19.4114 16.6319 19.4114H7.472C7.01561 19.4105 6.56901 19.279 6.18491 19.0325C5.80082 18.7859 5.49527 18.4347 5.30432 18.0202C5.22692 17.8635 5.09162 17.743 4.92703 17.6843C4.76244 17.6256 4.58146 17.6331 4.42235 17.7054C4.26324 17.7777 4.13847 17.909 4.07441 18.0716C4.01036 18.2342 4.01204 18.4153 4.0791 18.5767C4.37645 19.2269 4.85425 19.7781 5.45571 20.1648C6.05716 20.5514 6.75699 20.7573 7.472 20.7578H16.6319C17.6176 20.7543 18.5619 20.3611 19.2588 19.6642C19.9558 18.9672 20.3489 18.0229 20.3525 17.0373V9.64561V9.60971ZM3.96241 15.7627L4.07013 15.848L4.11501 15.8704C4.14973 15.8881 4.18574 15.9031 4.22272 15.9153H4.26311C4.31425 15.9297 4.36707 15.9372 4.42019 15.9377C4.47183 15.9372 4.52317 15.9297 4.57278 15.9153C4.58617 15.9172 4.59977 15.9172 4.61317 15.9153C4.65371 15.905 4.69289 15.89 4.72986 15.8704L7.30595 14.3849C7.46069 14.2956 7.57362 14.1486 7.61991 13.976C7.6662 13.8035 7.64206 13.6196 7.55279 13.4649C7.46352 13.3101 7.31643 13.1972 7.14389 13.1509C6.97135 13.1046 6.78749 13.1288 6.63275 13.218L5.09338 14.1067V7.87736C5.09457 7.24687 5.34555 6.64255 5.79137 6.19673C6.2372 5.7509 6.84152 5.49992 7.472 5.49873H16.6319C17.0891 5.49898 17.5365 5.63069 17.9208 5.87817C18.3052 6.12564 18.6102 6.47844 18.7996 6.89449C18.8343 6.97783 18.8853 7.05335 18.9497 7.11657C19.0141 7.17979 19.0906 7.22941 19.1745 7.26249C19.2585 7.29557 19.3482 7.31143 19.4385 7.30913C19.5287 7.30682 19.6175 7.2864 19.6997 7.24908C19.7819 7.21176 19.8557 7.1583 19.9168 7.09188C19.9779 7.02545 20.025 6.94742 20.0553 6.86243C20.0856 6.77743 20.0986 6.68721 20.0933 6.59711C20.0881 6.50702 20.0648 6.41889 20.0248 6.33798C19.7286 5.68655 19.2512 5.1341 18.6496 4.74656C18.048 4.35901 17.3476 4.15274 16.6319 4.15234H7.472C6.48443 4.15353 5.53765 4.54637 4.83934 5.24469C4.14102 5.943 3.74818 6.88979 3.74699 7.87736V15.3723C3.74441 15.3931 3.74441 15.4142 3.74699 15.4351C3.74441 15.456 3.74441 15.4771 3.74699 15.4979L3.77392 15.5652C3.77634 15.5771 3.77634 15.5893 3.77392 15.6011C3.80018 15.6467 3.83183 15.6888 3.86817 15.7268L3.96241 15.7627Z\"\n        strokeWidth=\"0.6\"\n      />\n      <path\n        d=\"M8.612 12.4598C8.612 13.1406 8.81389 13.8061 9.19213 14.3722C9.57037 14.9383 10.108 15.3795 10.737 15.64C11.366 15.9006 12.0581 15.9687 12.7258 15.8359C13.3936 15.7031 14.0069 15.3752 14.4883 14.8938C14.9697 14.4124 15.2976 13.7991 15.4304 13.1313C15.5632 12.4636 15.495 11.7715 15.2345 11.1425C14.974 10.5135 14.5328 9.97589 13.9667 9.59764C13.4006 9.2194 12.7351 9.01752 12.0543 9.01752C11.1417 9.0187 10.2668 9.38175 9.62153 10.027C8.97623 10.6723 8.61319 11.5472 8.612 12.4598ZM13.7014 12.4598C13.7014 12.7855 13.6048 13.104 13.4238 13.3749C13.2428 13.6457 12.9855 13.8568 12.6846 13.9815C12.3836 14.1062 12.0524 14.1388 11.7329 14.0752C11.4134 14.0117 11.12 13.8548 10.8896 13.6245C10.6593 13.3941 10.5024 13.1006 10.4388 12.7811C10.3753 12.4616 10.4079 12.1304 10.5326 11.8295C10.6572 11.5285 10.8683 11.2713 11.1392 11.0903C11.4101 10.9093 11.7285 10.8127 12.0543 10.8127C12.4907 10.8139 12.909 10.9878 13.2176 11.2964C13.5263 11.6051 13.7002 12.0233 13.7014 12.4598Z\"\n        strokeWidth=\"0.6\"\n      />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 1027 1024\" {...props}>\n      <path\n        d=\"M192.687556 509.90894a317.066707 317.066707 0 0 1 2.013614-36.245046L9.138925 413.410377a513.781274 513.781274 0 0 0 153.189533 471.185599l114.775979-157.991226a319.545001 319.545001 0 0 1-84.416881-216.69581z m642.497656 0a319.699894 319.699894 0 0 1-84.416881 216.69581l114.775979 157.991226a511.922553 511.922553 0 0 0 162.328241-374.687036 521.990622 521.990622 0 0 0-8.983815-96.498563l-185.717138 60.253517a316.75692 316.75692 0 0 1 2.013614 36.245046zM578.217128 195.165633a321.868401 321.868401 0 0 1 215.30177 156.2874L979.236036 291.199516C905.66169 135.221903 756.034705 22.14975 578.217128 0z m-343.863258 156.442293a321.713508 321.713508 0 0 1 215.30177-156.2874V0C271.838063 22.14975 122.211078 135.221903 48.636732 291.354409z m412.63591 450.739676a322.023295 322.023295 0 0 1-266.106792 0l-114.775979 157.836334a514.245954 514.245954 0 0 0 495.65875 0z m0 0\"\n        p-id=\"2231\"\n      />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import { ContextApi } from 'contexts/Localization/types'\nimport { MenuEntry } from './UikitMenu'\nimport Trading from '../icons/trading'\nimport LP from '../icons/LP'\nimport Pledge from '../icons/pledge'\n// import IDO from '../icons/ido'\nimport Bridge from '../icons/bridge'\n\nconst config: (t: ContextApi['t']) => MenuEntry[] = (t) => [\n  // {\n  //   label: t('Home'),\n  //   icon: 'HomeIcon',\n  //   href: '/',\n  // },\n  {\n    label: t('Trade'),\n    icon: Trading,\n    items: [\n      {\n        label: t('Exchange'),\n        href: '/swap',\n      },\n      {\n        label: t('Liquidity'),\n        href: '/liquidity',\n      },\n    ],\n  },\n  {\n    label: t('Farms'),\n    icon: LP,\n    href: '/lppools',\n  },\n  // {\n  //   label: t('Pools'),\n  //   icon: Pledge,\n  //   href: '/staking',\n  // },\n  {\n    label: t('Bridge'),\n    icon: Bridge,\n    href: 'https://halo.land/#/bridgePage',\n  },\n  {\n    label: t('Genesis'),\n    icon: Pledge,\n    href: 'https://actionworld.io/genesis/index.html',\n  },\n  // TODO 销毁挖矿\n  // {\n  //   label: t('IFO'),\n  //   icon: IDO,\n  //   href: '/ifo',\n  // },\n  // TODO 社区\n  // {\n  //   label: t('Prediction (BETA)'),\n  //   icon: 'PredictionsIcon',\n  //   href: '/prediction',\n  // },\n  // {\n  //   label: t('Lottery'),\n  //   icon: 'TicketIcon',\n  //   href: '/lottery',\n  // },\n  // {\n  //   label: t('Collectibles'),\n  //   icon: 'NftIcon',\n  //   href: '/collectibles',\n  // },\n  // {\n  //   label: t('Team Battle'),\n  //   icon: 'TeamBattleIcon',\n  //   href: '/competition',\n  // },\n  // {\n  //   label: t('Teams & Profile'),\n  //   icon: 'GroupsIcon',\n  //   items: [\n  //     {\n  //       label: t('Leaderboard'),\n  //       href: '/teams',\n  //     },\n  //     {\n  //       label: t('Task Center'),\n  //       href: '/profile/tasks',\n  //     },\n  //     {\n  //       label: t('Your Profile'),\n  //       href: '/profile',\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: t('Info'),\n  //   icon: Info,\n  //   href: 'https://pancakeswap.info',\n  // },\n  // TODO 光环桥\n  // {\n  //   label: t('More'),\n  //   icon: 'MoreIcon',\n  //   items: [\n  //     {\n  //       label: t('Contact'),\n  //       href: 'https://docs.pancakeswap.finance/contact-us',\n  //     },\n  //     {\n  //       label: t('Voting'),\n  //       href: '/voting',\n  //     },\n  //     {\n  //       label: t('Github'),\n  //       href: 'https://github.com/pancakeswap',\n  //     },\n  //     {\n  //       label: t('Docs'),\n  //       href: 'https://docs.pancakeswap.finance',\n  //     },\n  //     {\n  //       label: t('Blog'),\n  //       href: 'https://pancakeswap.medium.com',\n  //     },\n  //     {\n  //       label: t('Merch'),\n  //       href: 'https://pancakeswap.creator-spring.com/',\n  //     },\n  //   ],\n  // },\n]\n\nexport default config\n","import React, { useState } from 'react'\nimport { Box, CopyIcon, Flex, FlexProps, IconButton } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface CopyAddressProps extends FlexProps {\n  account: string\n}\n\nconst Wrapper = styled(Flex)`\n  align-items: center;\n  background-color: ${({ theme }) => theme.colors.dropdown};\n  border-radius: 16px;\n  position: relative;\n`\n\nconst Address = styled.div`\n  flex: 1;\n  position: relative;\n  padding-left: 16px;\n\n  & > input {\n    background: transparent;\n    border: 0;\n    color: ${({ theme }) => theme.colors.text};\n    display: block;\n    font-weight: 600;\n    font-size: 16px;\n    padding: 0;\n    width: 100%;\n\n    &:focus {\n      outline: 0;\n    }\n  }\n\n  &:after {\n    background: linear-gradient(\n      to right,\n      ${({ theme }) => theme.colors.background}00,\n      ${({ theme }) => theme.colors.background}E6\n    );\n    content: '';\n    height: 100%;\n    pointer-events: none;\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 40px;\n  }\n`\n\nconst Tooltip = styled.div<{ isTooltipDisplayed: boolean }>`\n  display: ${({ isTooltipDisplayed }) => (isTooltipDisplayed ? 'inline-block' : 'none')};\n  position: absolute;\n  padding: 8px;\n  top: -38px;\n  right: 0;\n  text-align: center;\n  background-color: ${({ theme }) => theme.colors.contrast};\n  color: ${({ theme }) => theme.colors.invertedContrast};\n  border-radius: 16px;\n  opacity: 0.7;\n  width: 100px;\n`\n\nconst CopyAddress: React.FC<CopyAddressProps> = ({ account, ...props }) => {\n  const [isTooltipDisplayed, setIsTooltipDisplayed] = useState(false)\n  const { t } = useTranslation()\n\n  const copyAddress = () => {\n    if (navigator.clipboard && navigator.permissions) {\n      navigator.clipboard.writeText(account).then(() => displayTooltip())\n    } else if (document.queryCommandSupported('copy')) {\n      const ele = document.createElement('textarea')\n      ele.value = account\n      document.body.appendChild(ele)\n      ele.select()\n      document.execCommand('copy')\n      document.body.removeChild(ele)\n      displayTooltip()\n    }\n  }\n\n  function displayTooltip() {\n    setIsTooltipDisplayed(true)\n    setTimeout(() => {\n      setIsTooltipDisplayed(false)\n    }, 1000)\n  }\n\n  return (\n    <Box position=\"relative\" {...props}>\n      <Wrapper>\n        <Address title={account}>\n          <input type=\"text\" readOnly value={account} />\n        </Address>\n        <IconButton variant=\"text\" onClick={copyAddress}>\n          <CopyIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n      </Wrapper>\n      <Tooltip isTooltipDisplayed={isTooltipDisplayed}>{t('Copied')}</Tooltip>\n    </Box>\n  )\n}\n\nexport default CopyAddress\n","import React from 'react'\nimport { Box, Button, Flex, InjectedModalProps, LinkExternal, Message as RawMessage, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport useTokenBalance, { useGetBnbBalance } from 'hooks/useTokenBalance'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBscScanLink } from 'utils'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport styled from 'styled-components'\nimport CopyAddress from './CopyAddress'\n\ninterface WalletInfoProps {\n  hasLowBnbBalance: boolean\n  onDismiss: InjectedModalProps['onDismiss']\n}\n\nconst Message = styled(RawMessage)`\n  border-radius: 8px;\n`\n\nconst WalletInfo: React.FC<WalletInfoProps> = ({ hasLowBnbBalance, onDismiss }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { balance } = useGetBnbBalance()\n  const { balance: cakeBalance } = useTokenBalance(getCakeAddress())\n  const { logout } = useAuth()\n\n  const handleLogout = () => {\n    onDismiss()\n    logout()\n  }\n\n  return (\n    <>\n      <Text color=\"#8E1673\" fontSize=\"12px\" textTransform=\"uppercase\" fontWeight=\"bold\" mb=\"8px\">\n        {t('Your Address')}\n      </Text>\n      <CopyAddress account={account} mb=\"24px\" />\n      {hasLowBnbBalance && (\n        <Message variant=\"warning\" mb=\"24px\">\n          <Box>\n            <Text fontWeight=\"bold\">{t('BNB Balance Low')}</Text>\n            <Text as=\"p\">{t('You need BNB for transaction fees.')}</Text>\n          </Box>\n        </Message>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text color=\"textSubtle\">{t('BNB Balance')}</Text>\n        <Text>{getFullDisplayBalance(balance, 18, 6)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text color=\"textSubtle\">{t('CAKE Balance')}</Text>\n        <Text>{getFullDisplayBalance(cakeBalance, 18, 3)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"end\" mb=\"24px\">\n        <LinkExternal href={getBscScanLink(account, 'address')} color=\"primary\">\n          {t('View on BscScan')}\n        </LinkExternal>\n      </Flex>\n      <Button\n        variant=\"secondary\"\n        width=\"100%\"\n        onClick={handleLogout}\n        style={{ borderRadius: 8, color: '#BC232C', borderColor: '#BC232C' }}\n      >\n        {t('Disconnect Wallet')}\n      </Button>\n    </>\n  )\n}\n\nexport default WalletInfo\n","import React from 'react'\nimport { BlockIcon, CheckmarkCircleIcon, Flex, Link, OpenNewIcon, RefreshIcon } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\n\ninterface TransactionRowProps {\n  txn: TransactionDetails\n}\n\nconst TxnIcon = styled(Flex)`\n  align-items: center;\n  flex: none;\n  width: 24px;\n`\n\nconst Summary = styled.div`\n  flex: 1;\n  padding: 0 8px;\n`\n\nconst TxnLink = styled(Link)`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  margin-bottom: 16px;\n  width: 100%;\n\n  &:hover {\n    text-decoration: none;\n  }\n`\n\nconst renderIcon = (txn: TransactionDetails) => {\n  if (!txn.receipt) {\n    return <RefreshIcon spin width=\"24px\" />\n  }\n\n  return txn.receipt?.status === 1 || typeof txn.receipt?.status === 'undefined' ? (\n    <CheckmarkCircleIcon color=\"success\" width=\"24px\" />\n  ) : (\n    <BlockIcon color=\"failure\" width=\"24px\" />\n  )\n}\n\nconst TransactionRow: React.FC<TransactionRowProps> = ({ txn }) => {\n  const { chainId } = useActiveWeb3React()\n\n  if (!txn) {\n    return null\n  }\n\n  return (\n    <TxnLink href={getBscScanLink(txn.hash, 'transaction', chainId)} external>\n      <TxnIcon>{renderIcon(txn)}</TxnIcon>\n      <Summary>{txn.summary ?? txn.hash}</Summary>\n      <TxnIcon>\n        <OpenNewIcon width=\"24px\" color=\"primary\" />\n      </TxnIcon>\n    </TxnLink>\n  )\n}\n\nexport default TransactionRow\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Box, Button, Flex, Text } from '@pancakeswap/uikit'\nimport { AppDispatch } from 'state'\nimport { useAllTransactions } from 'state/transactions/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { orderBy } from 'lodash'\nimport TransactionRow from './TransactionRow'\n\nconst WalletTransactions: React.FC = () => {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const { t } = useTranslation()\n  const allTransactions = useAllTransactions()\n  const sortedTransactions = orderBy(allTransactions, 'addedTime', 'desc')\n\n  const handleClearAll = () => {\n    if (chainId) {\n      dispatch(clearAllTransactions({ chainId }))\n    }\n  }\n\n  return (\n    <Box minHeight=\"120px\">\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text color=\"#8E1673\" fontSize=\"12px\" textTransform=\"uppercase\" fontWeight=\"bold\">\n          {t('Recent Transactions')}\n        </Text>\n        {sortedTransactions.length > 0 && (\n          <Button scale=\"sm\" onClick={handleClearAll} variant=\"text\" px=\"0\">\n            {t('Clear all')}\n          </Button>\n        )}\n      </Flex>\n      {sortedTransactions.length > 0 ? (\n        sortedTransactions.map((txn) => <TransactionRow key={txn.hash} txn={txn} />)\n      ) : (\n        <Text textAlign=\"center\">{t('No recent transactions')}</Text>\n      )}\n    </Box>\n  )\n}\n\nexport default WalletTransactions\n","import { createHashHistory } from 'history'\n\n// Manually create the history object so we can access outside the Router e.g. in modals\nconst history = createHashHistory()\n\nexport default history\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Skeleton, UserMenuItem } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport history from 'routerHistory'\n\ninterface ProfileUserMenuItemProps {\n  isLoading: boolean\n  hasProfile: boolean\n}\n\nconst Dot = styled.div`\n  background-color: ${({ theme }) => theme.colors.failure};\n  border-radius: 50%;\n  height: 8px;\n  width: 8px;\n`\n\nconst ProfileUserMenuItem: React.FC<ProfileUserMenuItemProps> = ({ isLoading, hasProfile }) => {\n  const { t } = useTranslation()\n\n  const handleClick = () => {\n    history.push('/profile')\n  }\n\n  if (isLoading) {\n    return (\n      <UserMenuItem>\n        <Skeleton height=\"24px\" width=\"35%\" />\n      </UserMenuItem>\n    )\n  }\n\n  if (!hasProfile) {\n    return (\n      <UserMenuItem as=\"button\" onClick={handleClick}>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\n          {t('Make a Profile')}\n          <Dot />\n        </Flex>\n      </UserMenuItem>\n    )\n  }\n\n  return (\n    <UserMenuItem as=\"button\" onClick={handleClick}>\n      {t('Your Profile')}\n    </UserMenuItem>\n  )\n}\n\nexport default ProfileUserMenuItem\n","import React from 'react'\nimport { Flex, UserMenuItem, WarningIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface WalletUserMenuItemProps {\n  hasLowBnbBalance: boolean\n  onPresentWalletModal: () => void\n}\n\nconst WalletUserMenuItem: React.FC<WalletUserMenuItemProps> = ({ hasLowBnbBalance, onPresentWalletModal }) => {\n  const { t } = useTranslation()\n\n  return (\n    <UserMenuItem as=\"button\" onClick={onPresentWalletModal}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\n        {t('Wallet')}\n        {hasLowBnbBalance && <WarningIcon color=\"warning\" width=\"24px\" />}\n      </Flex>\n    </UserMenuItem>\n  )\n}\n\nexport default WalletUserMenuItem\n","import React from 'react'\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M13.7803 2.71967C14.0732 3.01256 14.0732 3.48744 13.7803 3.78033L12.8107 4.75L14.0307 5.96999H20C21.1 5.96999 22 6.86999 22 7.96999V12.73C21.28 12.25 20.43 11.97 19.5 11.97C17.19 11.97 15.3 13.73 15.05 15.97H11.91C11.96 15.64 12 15.31 12 14.97C12 13.43 11.41 12.03 10.46 10.97H11C12.1 10.97 13 10.07 13 8.96999V7.06068L11.75 5.81066L10.7803 6.78033C10.4874 7.07322 10.0126 7.07322 9.71967 6.78033C9.42678 6.48744 9.42678 6.01256 9.71967 5.71967L12.7197 2.71967C13.0126 2.42678 13.4874 2.42678 13.7803 2.71967Z\" />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M11 15C11 17.7614 8.76142 20 6 20C3.23858 20 1 17.7614 1 15C1 12.2386 3.23858 10 6 10C8.76142 10 11 12.2386 11 15ZM9 15C9 16.6569 7.65685 18 6 18C4.34315 18 3 16.6569 3 15C3 13.3431 4.34315 12 6 12C7.65685 12 9 13.3431 9 15Z\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M19.5 12.97C17.57 12.97 16 14.54 16 16.47C16 18.4 17.57 19.97 19.5 19.97C21.43 19.97 23 18.4 23 16.47C23 14.54 21.43 12.97 19.5 12.97ZM19.5 17.97C18.67 17.97 18 17.3 18 16.47C18 15.64 18.67 14.97 19.5 14.97C20.33 14.97 21 15.64 21 16.47C21 17.3 20.33 17.97 19.5 17.97Z\"\n      />\n      <path d=\"M9 8.96997H4C3.45 8.96997 3 8.52997 3 7.96997C3 7.41997 3.45 6.96997 4 6.96997H7C8.1 6.96997 9 7.86997 9 8.96997Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M12 12.75C13.63 12.75 15.07 13.14 16.24 13.65C17.32 14.13 18 15.21 18 16.38V17C18 17.55 17.55 18 17 18H7C6.45 18 6 17.55 6 17V16.39C6 15.21 6.68 14.13 7.76 13.66C8.93 13.14 10.37 12.75 12 12.75ZM4 13C5.1 13 6 12.1 6 11C6 9.9 5.1 9 4 9C2.9 9 2 9.9 2 11C2 12.1 2.9 13 4 13ZM5.13 14.1C4.76 14.04 4.39 14 4 14C3.01 14 2.07 14.21 1.22 14.58C0.48 14.9 0 15.62 0 16.43V17C0 17.55 0.45 18 1 18H4.5V16.39C4.5 15.56 4.73 14.78 5.13 14.1ZM20 13C21.1 13 22 12.1 22 11C22 9.9 21.1 9 20 9C18.9 9 18 9.9 18 11C18 12.1 18.9 13 20 13ZM24 16.43C24 15.62 23.52 14.9 22.78 14.58C21.93 14.21 20.99 14 20 14C19.61 14 19.24 14.04 18.87 14.1C19.27 14.78 19.5 15.56 19.5 16.39V18H23C23.55 18 24 17.55 24 17V16.43ZM12 6C13.66 6 15 7.34 15 9C15 10.66 13.66 12 12 12C10.34 12 9 10.66 9 9C9 7.34 10.34 6 12 6Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M4 18H20C20.55 18 21 17.55 21 17C21 16.45 20.55 16 20 16H4C3.45 16 3 16.45 3 17C3 17.55 3.45 18 4 18ZM4 13H20C20.55 13 21 12.55 21 12C21 11.45 20.55 11 20 11H4C3.45 11 3 11.45 3 12C3 12.55 3.45 13 4 13ZM3 7C3 7.55 3.45 8 4 8H20C20.55 8 21 7.55 21 7C21 6.45 20.55 6 20 6H4C3.45 6 3 6.45 3 7Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M4 18H15C15.55 18 16 17.55 16 17C16 16.45 15.55 16 15 16H4C3.45 16 3 16.45 3 17C3 17.55 3.45 18 4 18ZM4 13H12C12.55 13 13 12.55 13 12C13 11.45 12.55 11 12 11H4C3.45 11 3 11.45 3 12C3 12.55 3.45 13 4 13ZM3 7C3 7.55 3.45 8 4 8H15C15.55 8 16 7.55 16 7C16 6.45 15.55 6 15 6H4C3.45 6 3 6.45 3 7ZM20.3 14.88L17.42 12L20.3 9.12C20.69 8.73 20.69 8.1 20.3 7.71C19.91 7.32 19.28 7.32 18.89 7.71L15.3 11.3C14.91 11.69 14.91 12.32 15.3 12.71L18.89 16.3C19.28 16.69 19.91 16.69 20.3 16.3C20.68 15.91 20.69 15.27 20.3 14.88Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M9.99998 19V14H14V19C14 19.55 14.45 20 15 20H18C18.55 20 19 19.55 19 19V12H20.7C21.16 12 21.38 11.43 21.03 11.13L12.67 3.59997C12.29 3.25997 11.71 3.25997 11.33 3.59997L2.96998 11.13C2.62998 11.43 2.83998 12 3.29998 12H4.99998V19C4.99998 19.55 5.44998 20 5.99998 20H8.99998C9.54998 20 9.99998 19.55 9.99998 19Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M21.9 8.89L20.85 4.52C20.63 3.62 19.85 3 18.94 3H16.73H14.72H13H11H9.28001H7.26001H5.05001C4.15001 3 3.36001 3.63 3.15001 4.52L2.10001 8.89C1.86001 9.91 2.08001 10.95 2.72001 11.77C2.80001 11.88 2.91001 11.96 3.00001 12.06V19C3.00001 20.1 3.90001 21 5.00001 21H19C20.1 21 21 20.1 21 19V12.06C21.09 11.97 21.2 11.88 21.28 11.78C21.92 10.96 22.15 9.91 21.9 8.89ZM7.02001 5L6.44001 9.86C6.36001 10.51 5.84001 11 5.23001 11C4.74001 11 4.43001 10.71 4.30001 10.53C4.04001 10.2 3.95001 9.77 4.05001 9.36L5.05001 5H7.02001ZM18.91 4.99L19.96 9.36C20.06 9.78 19.97 10.2 19.71 10.53C19.57 10.71 19.27 11 18.77 11C18.16 11 17.63 10.51 17.56 9.86L16.98 5L18.91 4.99ZM15.51 9.52C15.56 9.91 15.44 10.3 15.18 10.59C14.95 10.85 14.63 11 14.22 11C13.55 11 13 10.41 13 9.69V5H14.96L15.51 9.52ZM11 9.69C11 10.41 10.45 11 9.71001 11C9.37001 11 9.06001 10.85 8.82001 10.59C8.57001 10.3 8.45001 9.91 8.49001 9.52L9.04001 5H11V9.69ZM18 19H6.00001C5.45001 19 5.00001 18.55 5.00001 18V12.97C5.08001 12.98 5.15001 13 5.23001 13C6.10001 13 6.89001 12.64 7.47001 12.05C8.07001 12.65 8.87001 13 9.78001 13C10.65 13 11.43 12.64 12.01 12.07C12.6 12.64 13.4 13 14.3 13C15.14 13 15.94 12.65 16.54 12.05C17.12 12.64 17.91 13 18.78 13C18.86 13 18.93 12.98 19.01 12.97V18C19 18.55 18.55 19 18 19Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M5 7C5 6.44772 4.55228 6 4 6C3.44772 6 3 6.44772 3 7V18C3 19.1046 3.89543 20 5 20H20C20.5523 20 21 19.5523 21 19C21 18.4477 20.5523 18 20 18H5V7Z\" />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M19 17H7C6.44772 17 6 16.5523 6 16V12C6 11.4477 6.44772 11 7 11H10V10C10 9.44772 10.4477 9 11 9H14V7C14 6.44772 14.4477 6 15 6H19C19.5523 6 20 6.44772 20 7V16C20 16.5523 19.5523 17 19 17ZM16 8H18V15H16V8ZM12 15H14V11H12V15ZM10 13H8V15H10V13Z\"\n      />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\n\ninterface LogoProps extends SvgProps {\n  isDark: boolean\n}\n\nconst Logo: React.FC<LogoProps> = ({ isDark, ...props }) => {\n  const textColor = isDark ? '#FFFFFF' : '#000000'\n  return (\n    <Svg viewBox=\"0 0 160 26\" {...props}>\n      <path\n        d=\"M30.8524 19.7569C30.4803 19.7569 30.2173 19.6799 30.0633 19.5259C29.9221 19.372 29.8516 19.1282 29.8516 18.7946V7.65066C29.8516 7.31705 29.9285 7.07326 30.0825 6.91928C30.2365 6.75248 30.4931 6.66907 30.8524 6.66907H35.5679C37.3642 6.66907 38.6858 7.04759 39.5327 7.80463C40.3796 8.56167 40.803 9.69082 40.803 11.1921C40.803 12.6805 40.3796 13.8032 39.5327 14.5603C38.6987 15.3045 37.3771 15.6766 35.5679 15.6766H33.7394V18.7946C33.7394 19.1282 33.6624 19.372 33.5085 19.5259C33.3545 19.6799 33.0914 19.7569 32.7193 19.7569H30.8524ZM35.2599 12.8858C35.786 12.8858 36.1902 12.7446 36.4725 12.4624C36.7676 12.1801 36.9151 11.7566 36.9151 11.1921C36.9151 10.6147 36.7676 10.1848 36.4725 9.90253C36.1902 9.62025 35.786 9.47911 35.2599 9.47911H33.7394V12.8858H35.2599Z\"\n        fill={textColor}\n      />\n      <path\n        d=\"M45.3484 20.0456C44.1423 20.0456 43.1735 19.6607 42.4421 18.8908C41.7236 18.1081 41.3643 17.011 41.3643 15.5996C41.3643 14.5218 41.6081 13.5787 42.0957 12.7703C42.5961 11.9619 43.2954 11.3396 44.1936 10.9034C45.1046 10.4543 46.1503 10.2297 47.3308 10.2297C48.306 10.2297 49.1657 10.3388 49.9099 10.5569C50.6669 10.7622 51.3598 11.0638 51.9885 11.4615V19.1602C51.9885 19.404 51.9436 19.5644 51.8538 19.6414C51.764 19.7184 51.5844 19.7569 51.3149 19.7569H49.3517C49.2106 19.7569 49.1015 19.7376 49.0245 19.6992C48.9475 19.6478 48.8834 19.5708 48.8321 19.4682L48.5819 18.8908C48.2097 19.2886 47.7607 19.5773 47.2346 19.7569C46.7213 19.9494 46.0926 20.0456 45.3484 20.0456ZM46.7919 17.428C47.2923 17.428 47.6837 17.3061 47.966 17.0623C48.2482 16.8186 48.3894 16.4721 48.3894 16.023V13.0205C48.1456 12.905 47.8376 12.8473 47.4655 12.8473C46.7855 12.8473 46.2402 13.0847 45.8296 13.5594C45.4318 14.0342 45.2329 14.7014 45.2329 15.5611C45.2329 16.8057 45.7526 17.428 46.7919 17.428Z\"\n        fill={textColor}\n      />\n      <path\n        d=\"M54.667 19.7569C54.2949 19.7569 54.0319 19.6799 53.8779 19.5259C53.7239 19.372 53.6469 19.1282 53.6469 18.7946V11.1151C53.6469 10.8841 53.6854 10.7301 53.7624 10.6532C53.8522 10.5633 54.0318 10.5184 54.3013 10.5184H56.2837C56.4377 10.5184 56.5532 10.5441 56.6302 10.5954C56.72 10.6339 56.7713 10.7109 56.7841 10.8264L56.8804 11.4038C57.2397 11.0445 57.708 10.7622 58.2854 10.5569C58.8756 10.3388 59.53 10.2297 60.2486 10.2297C61.2879 10.2297 62.1283 10.5248 62.7699 11.1151C63.4115 11.6925 63.7322 12.5522 63.7322 13.6942V18.7946C63.7322 19.1282 63.6552 19.372 63.5013 19.5259C63.3601 19.6799 63.1035 19.7569 62.7314 19.7569H60.8645C60.4924 19.7569 60.2229 19.6799 60.0561 19.5259C59.9021 19.372 59.8251 19.1282 59.8251 18.7946V13.9444C59.8251 13.5594 59.7417 13.2836 59.5749 13.1167C59.4081 12.9499 59.1451 12.8665 58.7858 12.8665C58.4009 12.8665 58.0929 12.9692 57.862 13.1745C57.6438 13.3798 57.5348 13.6621 57.5348 14.0213V18.7946C57.5348 19.1282 57.4578 19.372 57.3038 19.5259C57.1627 19.6799 56.906 19.7569 56.5339 19.7569H54.667Z\"\n        fill={textColor}\n      />\n      <path\n        d=\"M70.5354 20.0456C68.739 20.0456 67.3532 19.6286 66.3781 18.7946C65.4029 17.9605 64.9153 16.748 64.9153 15.1569C64.9153 14.1817 65.1399 13.322 65.5889 12.5778C66.038 11.8336 66.686 11.2562 67.5329 10.8456C68.3926 10.435 69.4062 10.2297 70.5739 10.2297C71.4592 10.2297 72.2034 10.3131 72.8065 10.4799C73.4224 10.6467 73.9677 10.9034 74.4425 11.2498C74.5836 11.3396 74.6542 11.4551 74.6542 11.5963C74.6542 11.6989 74.6029 11.8336 74.5002 12.0004L73.7111 13.367C73.6213 13.5466 73.5122 13.6364 73.3839 13.6364C73.3069 13.6364 73.185 13.5851 73.0182 13.4824C72.6718 13.2643 72.3446 13.1039 72.0366 13.0013C71.7415 12.8986 71.3694 12.8473 70.9203 12.8473C70.2787 12.8473 69.7591 13.0526 69.3613 13.4632C68.9764 13.8738 68.7839 14.4384 68.7839 15.1569C68.7839 15.8883 68.9828 16.4529 69.3806 16.8506C69.7783 17.2356 70.3237 17.428 71.0165 17.428C71.4271 17.428 71.7992 17.3703 72.1329 17.2548C72.4665 17.1393 72.8065 16.9789 73.1529 16.7736C73.3326 16.671 73.4609 16.6197 73.5379 16.6197C73.6534 16.6197 73.756 16.7095 73.8458 16.8891L74.7119 18.3711C74.7761 18.4994 74.8082 18.6021 74.8082 18.6791C74.8082 18.7946 74.7312 18.9036 74.5772 19.0063C74.0383 19.3527 73.4481 19.6093 72.8065 19.7761C72.1778 19.9558 71.4207 20.0456 70.5354 20.0456Z\"\n        fill={textColor}\n      />\n      <path\n        d=\"M79.6881 20.0456C78.482 20.0456 77.5132 19.6607 76.7819 18.8908C76.0633 18.1081 75.704 17.011 75.704 15.5996C75.704 14.5218 75.9478 13.5787 76.4354 12.7703C76.9358 11.9619 77.6351 11.3396 78.5333 10.9034C79.4443 10.4543 80.4901 10.2297 81.6705 10.2297C82.6457 10.2297 83.5054 10.3388 84.2496 10.5569C85.0067 10.7622 85.6995 11.0638 86.3283 11.4615V19.1602C86.3283 19.404 86.2834 19.5644 86.1935 19.6414C86.1037 19.7184 85.9241 19.7569 85.6546 19.7569H83.6915C83.5503 19.7569 83.4412 19.7376 83.3643 19.6992C83.2873 19.6478 83.2231 19.5708 83.1718 19.4682L82.9216 18.8908C82.5495 19.2886 82.1004 19.5773 81.5743 19.7569C81.0611 19.9494 80.4323 20.0456 79.6881 20.0456ZM81.1316 17.428C81.632 17.428 82.0234 17.3061 82.3057 17.0623C82.588 16.8186 82.7291 16.4721 82.7291 16.023V13.0205C82.4853 12.905 82.1774 12.8473 81.8053 12.8473C81.1252 12.8473 80.5799 13.0847 80.1693 13.5594C79.7715 14.0342 79.5726 14.7014 79.5726 15.5611C79.5726 16.8057 80.0923 17.428 81.1316 17.428Z\"\n        fill={textColor}\n      />\n      <path\n        d=\"M98.4184 19.0255C98.5082 19.1282 98.5531 19.2436 98.5531 19.372C98.5531 19.4874 98.5146 19.5837 98.4377 19.6607C98.3607 19.7248 98.258 19.7569 98.1297 19.7569H95.1465C94.9668 19.7569 94.8321 19.7441 94.7423 19.7184C94.6653 19.6799 94.5819 19.6093 94.4921 19.5067L91.8745 15.946V18.7946C91.8745 19.1282 91.7975 19.372 91.6435 19.5259C91.4896 19.6799 91.2265 19.7569 90.8544 19.7569H88.9875C88.6154 19.7569 88.3523 19.6799 88.1984 19.5259C88.0572 19.372 87.9866 19.1282 87.9866 18.7946V7.65066C87.9866 7.31705 88.0636 7.07326 88.2176 6.91928C88.3716 6.75248 88.6282 6.66907 88.9875 6.66907H90.8544C91.2265 6.66907 91.4896 6.75248 91.6435 6.91928C91.7975 7.07326 91.8745 7.31705 91.8745 7.65066V14.0983L94.4151 10.7879C94.4921 10.6852 94.5755 10.6147 94.6653 10.5762C94.7551 10.5377 94.8898 10.5184 95.0695 10.5184H98.0527C98.181 10.5184 98.2773 10.5569 98.3414 10.6339C98.4184 10.6981 98.4569 10.7879 98.4569 10.9034C98.4569 11.0317 98.412 11.1472 98.3222 11.2498L95.031 15.0222L98.4184 19.0255Z\"\n        fill={textColor}\n      />\n      <path\n        d=\"M104.668 20.0456C103.59 20.0456 102.628 19.866 101.781 19.5067C100.947 19.1474 100.286 18.6085 99.7985 17.89C99.3109 17.1714 99.0671 16.2925 99.0671 15.2531C99.0671 13.6236 99.529 12.379 100.453 11.5193C101.377 10.6596 102.705 10.2297 104.437 10.2297C106.131 10.2297 107.414 10.6532 108.286 11.5C109.172 12.334 109.614 13.4953 109.614 14.9837C109.614 15.6252 109.332 15.946 108.767 15.946H102.724C102.724 16.4978 102.929 16.9212 103.34 17.2163C103.763 17.5114 104.398 17.659 105.245 17.659C105.771 17.659 106.208 17.6141 106.554 17.5243C106.913 17.4216 107.273 17.2741 107.632 17.0816C107.786 17.0174 107.889 16.9854 107.94 16.9854C108.055 16.9854 108.152 17.0623 108.229 17.2163L108.883 18.4481C108.947 18.5764 108.979 18.6727 108.979 18.7368C108.979 18.8523 108.902 18.9614 108.748 19.064C108.222 19.4105 107.626 19.6607 106.958 19.8146C106.291 19.9686 105.528 20.0456 104.668 20.0456ZM106.15 14.0406C106.15 13.553 106.009 13.1745 105.726 12.905C105.444 12.6356 105.021 12.5009 104.456 12.5009C103.892 12.5009 103.462 12.642 103.167 12.9243C102.872 13.1937 102.724 13.5658 102.724 14.0406H106.15Z\"\n        fill={textColor}\n      />\n      <path\n        d=\"M116.211 20.0456C115.133 20.0456 114.113 19.9365 113.151 19.7184C112.189 19.4874 111.412 19.1667 110.822 18.7561C110.604 18.6149 110.495 18.4674 110.495 18.3134C110.495 18.2107 110.533 18.1017 110.61 17.9862L111.553 16.4849C111.656 16.331 111.759 16.254 111.861 16.254C111.926 16.254 112.035 16.2989 112.189 16.3887C112.663 16.6582 113.202 16.8763 113.805 17.0431C114.408 17.2099 115.005 17.2933 115.595 17.2933C116.198 17.2933 116.641 17.2035 116.923 17.0238C117.218 16.8442 117.366 16.5555 117.366 16.1577C117.366 15.7728 117.206 15.4713 116.885 15.2531C116.577 15.035 115.993 14.7591 115.133 14.4255C113.837 13.9379 112.824 13.3926 112.092 12.7896C111.374 12.1737 111.015 11.3396 111.015 10.2875C111.015 9.01718 111.47 8.04843 112.381 7.38121C113.292 6.71398 114.505 6.38037 116.019 6.38037C117.071 6.38037 117.969 6.47661 118.713 6.66907C119.47 6.84871 120.112 7.131 120.638 7.51593C120.856 7.68274 120.965 7.83671 120.965 7.97786C120.965 8.06767 120.927 8.17032 120.85 8.2858L119.907 9.78705C119.791 9.94103 119.688 10.018 119.599 10.018C119.534 10.018 119.425 9.97311 119.271 9.88329C118.527 9.3957 117.642 9.15191 116.615 9.15191C116.064 9.15191 115.64 9.24173 115.345 9.42137C115.05 9.601 114.902 9.89612 114.902 10.3067C114.902 10.589 114.979 10.82 115.133 10.9996C115.287 11.1792 115.493 11.3396 115.749 11.4808C116.019 11.6091 116.429 11.7759 116.981 11.9812L117.347 12.1159C118.296 12.488 119.04 12.8473 119.579 13.1937C120.131 13.5273 120.548 13.9444 120.83 14.4448C121.113 14.9324 121.254 15.5483 121.254 16.2925C121.254 17.4344 120.824 18.3455 119.964 19.0255C119.117 19.7056 117.866 20.0456 116.211 20.0456Z\"\n        fill={textColor}\n      />\n      <path\n        d=\"M125.343 19.7569C125.151 19.7569 125.003 19.7248 124.9 19.6607C124.798 19.5965 124.721 19.4682 124.67 19.2757L122.187 10.9611C122.161 10.8841 122.148 10.8264 122.148 10.7879C122.148 10.6083 122.277 10.5184 122.533 10.5184H125.074C125.241 10.5184 125.362 10.5505 125.439 10.6147C125.516 10.666 125.568 10.7558 125.593 10.8841L126.633 15.2531L127.941 11.731C128.006 11.577 128.07 11.4744 128.134 11.423C128.211 11.3589 128.339 11.3268 128.519 11.3268H129.731C129.911 11.3268 130.033 11.3589 130.097 11.423C130.174 11.4744 130.245 11.577 130.309 11.731L131.598 15.2531L132.657 10.8841C132.695 10.7558 132.747 10.666 132.811 10.6147C132.875 10.5505 132.991 10.5184 133.157 10.5184H135.717C135.974 10.5184 136.102 10.6083 136.102 10.7879C136.102 10.8264 136.089 10.8841 136.064 10.9611L133.562 19.2757C133.51 19.4682 133.433 19.5965 133.331 19.6607C133.241 19.7248 133.1 19.7569 132.907 19.7569H131.021C130.841 19.7569 130.707 19.7248 130.617 19.6607C130.527 19.5837 130.45 19.4554 130.386 19.2757L129.116 15.7921L127.845 19.2757C127.794 19.4554 127.717 19.5837 127.614 19.6607C127.524 19.7248 127.39 19.7569 127.21 19.7569H125.343Z\"\n        fill={textColor}\n      />\n      <path\n        d=\"M140.981 20.0456C139.775 20.0456 138.806 19.6607 138.075 18.8908C137.356 18.1081 136.997 17.011 136.997 15.5996C136.997 14.5218 137.241 13.5787 137.728 12.7703C138.229 11.9619 138.928 11.3396 139.826 10.9034C140.737 10.4543 141.783 10.2297 142.963 10.2297C143.938 10.2297 144.798 10.3388 145.542 10.5569C146.299 10.7622 146.992 11.0638 147.621 11.4615V19.1602C147.621 19.404 147.576 19.5644 147.486 19.6414C147.396 19.7184 147.217 19.7569 146.947 19.7569H144.984C144.843 19.7569 144.734 19.7376 144.657 19.6992C144.58 19.6478 144.516 19.5708 144.465 19.4682L144.214 18.8908C143.842 19.2886 143.393 19.5773 142.867 19.7569C142.354 19.9494 141.725 20.0456 140.981 20.0456ZM142.424 17.428C142.925 17.428 143.316 17.3061 143.598 17.0623C143.881 16.8186 144.022 16.4721 144.022 16.023V13.0205C143.778 12.905 143.47 12.8473 143.098 12.8473C142.418 12.8473 141.873 13.0847 141.462 13.5594C141.064 14.0342 140.865 14.7014 140.865 15.5611C140.865 16.8057 141.385 17.428 142.424 17.428Z\"\n        fill={textColor}\n      />\n      <path\n        d=\"M150.28 23.6447C149.908 23.6447 149.645 23.5678 149.491 23.4138C149.35 23.2598 149.279 23.016 149.279 22.6824V11.654C149.857 11.2434 150.582 10.9034 151.454 10.6339C152.327 10.3645 153.238 10.2297 154.187 10.2297C158.062 10.2297 160 11.8721 160 15.1569C160 16.6453 159.589 17.8322 158.768 18.7176C157.947 19.6029 156.786 20.0456 155.284 20.0456C154.861 20.0456 154.45 19.9943 154.053 19.8916C153.668 19.789 153.347 19.6478 153.09 19.4682V22.6824C153.09 23.016 153.013 23.2598 152.859 23.4138C152.705 23.5678 152.442 23.6447 152.07 23.6447H150.28ZM154.457 17.4473C155.009 17.4473 155.419 17.242 155.689 16.8314C155.971 16.408 156.112 15.8434 156.112 15.1377C156.112 14.3036 155.945 13.7198 155.612 13.3862C155.291 13.0398 154.79 12.8665 154.11 12.8665C153.674 12.8665 153.328 12.9243 153.071 13.0398V16.1C153.071 16.5363 153.193 16.8699 153.437 17.1008C153.681 17.3318 154.021 17.4473 154.457 17.4473Z\"\n        fill={textColor}\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M4.38998 4.50033C4.01476 2.49106 5.55649 0.634766 7.60049 0.634766C9.40427 0.634766 10.8665 2.09701 10.8665 3.90078V7.92728C11.3177 7.89544 11.7761 7.87911 12.2404 7.87911C12.6865 7.87911 13.1272 7.89418 13.5612 7.9236V3.90078C13.5612 2.09701 15.0234 0.634766 16.8272 0.634766C18.8712 0.634766 20.4129 2.49106 20.0377 4.50033L19.1539 9.23326C22.1872 10.5576 24.4809 12.8577 24.4809 15.748V17.4966C24.4809 19.8734 22.9085 21.8634 20.7102 23.2068C18.4948 24.5606 15.4978 25.3654 12.2404 25.3654C8.98304 25.3654 5.98604 24.5606 3.77065 23.2068C1.57242 21.8634 0 19.8734 0 17.4966V15.748C0 12.873 2.2701 10.5817 5.27785 9.25477L4.38998 4.50033ZM18.0212 9.85508L19.0555 4.3169C19.3159 2.92236 18.2459 1.63399 16.8272 1.63399C15.5753 1.63399 14.5604 2.64886 14.5604 3.90078V9.02479C14.2324 8.98273 13.8991 8.9494 13.5612 8.92524C13.128 8.89426 12.6873 8.87833 12.2404 8.87833C11.7753 8.87833 11.3168 8.89559 10.8665 8.92912C10.5286 8.95429 10.1953 8.98862 9.86729 9.03169V3.90078C9.86729 2.64886 8.85241 1.63399 7.60049 1.63399C6.18184 1.63399 5.11179 2.92235 5.37222 4.3169L6.40988 9.87345C3.16599 11.0784 0.999219 13.2586 0.999219 15.748V17.4966C0.999219 21.2906 6.03208 24.3662 12.2404 24.3662C18.4488 24.3662 23.4817 21.2906 23.4817 17.4966V15.748C23.4817 13.2458 21.2927 11.0562 18.0212 9.85508Z\"\n        fill=\"#633001\"\n      />\n      <path\n        d=\"M23.4815 17.4967C23.4815 21.2907 18.4486 24.3663 12.2402 24.3663C6.03189 24.3663 0.999023 21.2907 0.999023 17.4967V15.748H23.4815V17.4967Z\"\n        fill=\"#FEDC90\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M5.37202 4.31671C5.1116 2.92216 6.18164 1.63379 7.6003 1.63379C8.85222 1.63379 9.8671 2.64867 9.8671 3.90059V9.0315C10.6321 8.93102 11.4261 8.87813 12.2402 8.87813C13.0356 8.87813 13.8116 8.9286 14.5602 9.02459V3.90059C14.5602 2.64867 15.5751 1.63379 16.827 1.63379C18.2457 1.63379 19.3157 2.92216 19.0553 4.31671L18.021 9.85488C21.2925 11.056 23.4815 13.2457 23.4815 15.7478C23.4815 19.5418 18.4486 22.6174 12.2402 22.6174C6.03189 22.6174 0.999023 19.5418 0.999023 15.7478C0.999023 13.2584 3.16579 11.0782 6.40968 9.87326L5.37202 4.31671Z\"\n        fill=\"#D1884F\"\n      />\n      <path\n        className=\"left-eye\"\n        d=\"M9.11817 15.2485C9.11817 16.2833 8.55896 17.1221 7.86914 17.1221C7.17932 17.1221 6.62012 16.2833 6.62012 15.2485C6.62012 14.2138 7.17932 13.375 7.86914 13.375C8.55896 13.375 9.11817 14.2138 9.11817 15.2485Z\"\n        fill=\"#633001\"\n      />\n      <path\n        className=\"right-eye\"\n        d=\"M17.7363 15.2485C17.7363 16.2833 17.1771 17.1221 16.4873 17.1221C15.7975 17.1221 15.2383 16.2833 15.2383 15.2485C15.2383 14.2138 15.7975 13.375 16.4873 13.375C17.1771 13.375 17.7363 14.2138 17.7363 15.2485Z\"\n        fill=\"#633001\"\n      />\n    </Svg>\n  )\n}\n\nexport default React.memo(Logo, (prev, next) => prev.isDark === next.isDark)\n","import React from 'react'\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M4.1534 13.6089L4.15362 13.61C4.77322 16.8113 7.42207 19.3677 10.647 19.8853L10.6502 19.8858C13.0412 20.2736 15.2625 19.6103 16.9422 18.2833C11.3549 16.2878 7.9748 10.3524 9.26266 4.48816C5.69846 5.77194 3.35817 9.51245 4.1534 13.6089ZM10.0083 2.21054C4.76622 3.2533 1.09895 8.36947 2.19006 13.9901C2.97006 18.0201 6.28006 21.2101 10.3301 21.8601C13.8512 22.4311 17.0955 21.1608 19.2662 18.8587C19.2765 18.8478 19.2866 18.837 19.2968 18.8261C19.4385 18.6745 19.5757 18.5184 19.7079 18.3581C19.7105 18.355 19.713 18.3519 19.7156 18.3487C19.8853 18.1426 20.0469 17.9295 20.2001 17.7101C20.4101 17.4001 20.2401 16.9601 19.8701 16.9201C19.5114 16.8796 19.1602 16.8209 18.817 16.7452C18.7964 16.7406 18.7758 16.736 18.7552 16.7313C18.6676 16.7114 18.5804 16.6903 18.4938 16.6681C18.4919 16.6676 18.4901 16.6672 18.4882 16.6667C13.0234 15.2647 9.72516 9.48006 11.4542 4.03417C11.4549 4.03214 11.4555 4.03012 11.4562 4.0281C11.4875 3.92954 11.5205 3.83109 11.5552 3.73278C11.5565 3.72911 11.5578 3.72543 11.5591 3.72175C11.6768 3.38921 11.8136 3.05829 11.9701 2.73005C12.1301 2.39005 11.8501 2.01005 11.4701 2.03005C11.1954 2.04379 10.924 2.06848 10.6561 2.10368C10.6517 2.10427 10.6472 2.10486 10.6428 2.10545C10.4413 2.13221 10.2418 2.16492 10.0446 2.2034C10.0325 2.20576 10.0204 2.20814 10.0083 2.21054Z\"\n      />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M6 10C4.9 10 4 10.9 4 12C4 13.1 4.9 14 6 14C7.1 14 8 13.1 8 12C8 10.9 7.1 10 6 10ZM18 10C16.9 10 16 10.9 16 12C16 13.1 16.9 14 18 14C19.1 14 20 13.1 20 12C20 10.9 19.1 10 18 10ZM12 10C10.9 10 10 10.9 10 12C10 13.1 10.9 14 12 14C13.1 14 14 13.1 14 12C14 10.9 13.1 10 12 10Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M12.8533 3.39627C12.4634 2.75821 11.5366 2.75821 11.1467 3.39627L7.42977 9.47855C7.02256 10.1449 7.50213 11 8.28306 11H15.7169C16.4979 11 16.9774 10.1449 16.5702 9.47855L12.8533 3.39627ZM12 5.84L13.93 9H10.06L12 5.84ZM17.5 13C15.01 13 13 15.01 13 17.5C13 19.99 15.01 22 17.5 22C19.99 22 22 19.99 22 17.5C22 15.01 19.99 13 17.5 13ZM17.5 20C16.12 20 15 18.88 15 17.5C15 16.12 16.12 15 17.5 15C18.88 15 20 16.12 20 17.5C20 18.88 18.88 20 17.5 20ZM3 19.5C3 20.6046 3.89543 21.5 5 21.5H9C10.1046 21.5 11 20.6046 11 19.5V15.5C11 14.3954 10.1046 13.5 9 13.5H5C3.89543 13.5 3 14.3954 3 15.5V19.5ZM5 15.5H9V19.5H5V15.5Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M7.5 13C7.5 11.8954 8.39543 11 9.5 11H12.5C13.6046 11 14.5 11.8954 14.5 13V15C14.5 16.1046 13.6046 17 12.5 17H9.5C8.39543 17 7.5 16.1046 7.5 15V13Z\" />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M9.5 2C8.39543 2 7.5 2.89543 7.5 4V6.49482C7.5 6.93167 7.2113 7.30895 6.81834 7.49981C5.15004 8.31009 4 10.0207 4 12V17C4 19.2091 5.79086 21 8 21H14C16.2091 21 18 19.2091 18 17V12C18 11.4175 17.9004 10.8583 17.7173 10.3385L17.7892 10.297C19.4786 9.32167 20.0574 7.16153 19.082 5.47221C18.1552 3.86682 16.1534 3.25957 14.5 4.05146V4C14.5 2.89543 13.6046 2 12.5 2H9.5ZM9.5 6.25V4H12.5V6.25H9.5ZM9.22663 7.75C8.89473 8.46917 8.30318 9.00205 7.69211 9.29884C6.68638 9.78731 6 10.8154 6 12V17C6 18.1046 6.89543 19 8 19H14C15.1046 19 16 18.1046 16 17V12C16 10.8154 15.3136 9.78731 14.3079 9.29884C13.6968 9.00205 13.1053 8.46917 12.7734 7.75H9.22663ZM14.5 6.3226V6.49482C14.5 6.93167 14.7887 7.30895 15.1817 7.49981C15.7529 7.77726 16.2634 8.16029 16.6878 8.62352L16.7892 8.56495C17.522 8.1419 17.773 7.20495 17.35 6.47221C16.9346 5.75269 16.0213 5.49542 15.2914 5.89229L14.5 6.3226Z\"\n      />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M3.18731 5.68438C2.44993 5.52604 2.44993 4.47393 3.18731 4.31559L5.3203 3.85755C5.58957 3.79973 5.79991 3.58939 5.85774 3.32012L6.31577 1.18713C6.47411 0.449748 7.52622 0.449751 7.68457 1.18713L8.1426 3.32012C8.20042 3.58939 8.41076 3.79973 8.68003 3.85755L10.813 4.31559C11.5504 4.47393 11.5504 5.52604 10.813 5.68438L8.68003 6.14241C8.41076 6.20024 8.20042 6.41058 8.1426 6.67985L7.68457 8.81284C7.52622 9.55022 6.47411 9.55022 6.31577 8.81284L5.85774 6.67985C5.79991 6.41058 5.58957 6.20024 5.3203 6.14241L3.18731 5.68438Z\" />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M12 2.99998C15.866 2.99998 19 6.13399 19 9.99998C19 13.866 15.866 17 12 17C8.13401 17 5 13.866 5 9.99998C5 9.4477 4.55228 8.99998 4 8.99998C3.44772 8.99998 3 9.4477 3 9.99998C3 12.8894 4.36163 15.4608 6.47822 17.1075L5.58579 18C5.21071 18.3751 5 18.8838 5 19.4142V21.5C5 22.3284 5.67157 23 6.5 23H17.5C18.3284 23 19 22.3284 19 21.5V19.4142C19 18.8838 18.7893 18.3751 18.4142 18L17.5218 17.1075C19.6384 15.4608 21 12.8894 21 9.99998C21 5.02942 16.9706 0.999985 12 0.999985C11.4477 0.999985 11 1.4477 11 1.99998C11 2.55227 11.4477 2.99998 12 2.99998ZM12 19C10.6564 19 9.38156 18.7056 8.23649 18.1777L7 19.4142L7 21H17V19.4142L15.7635 18.1777C14.6184 18.7056 13.3436 19 12 19Z\"\n      />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M5.66 4.2L6.05 4.59C6.44 4.97 6.44 5.61 6.05 5.99L6.04 6C5.65 6.39 5.03 6.39 4.64 6L4.25 5.61C3.86 5.23 3.86 4.6 4.25 4.21L4.26 4.2C4.64 3.82 5.27 3.81 5.66 4.2Z\" />\n      <path d=\"M1.99 10.95H3.01C3.56 10.95 4 11.39 4 11.95V11.96C4 12.51 3.56 12.95 3 12.94H1.99C1.44 12.94 1 12.5 1 11.95V11.94C1 11.39 1.44 10.95 1.99 10.95Z\" />\n      <path d=\"M12 1H12.01C12.56 1 13 1.44 13 1.99V2.96C13 3.51 12.56 3.95 12 3.94H11.99C11.44 3.94 11 3.5 11 2.95V1.99C11 1.44 11.44 1 12 1Z\" />\n      <path d=\"M18.34 4.2C18.73 3.82 19.36 3.82 19.75 4.21C20.14 4.6 20.14 5.22 19.75 5.61L19.36 6C18.98 6.39 18.35 6.39 17.96 6L17.95 5.99C17.56 5.61 17.56 4.98 17.95 4.59L18.34 4.2Z\" />\n      <path d=\"M18.33 19.7L17.94 19.31C17.55 18.92 17.55 18.3 17.95 17.9C18.33 17.52 18.96 17.51 19.35 17.9L19.74 18.29C20.13 18.68 20.13 19.31 19.74 19.7C19.35 20.09 18.72 20.09 18.33 19.7Z\" />\n      <path d=\"M20 11.95V11.94C20 11.39 20.44 10.95 20.99 10.95H22C22.55 10.95 22.99 11.39 22.99 11.94V11.95C22.99 12.5 22.55 12.94 22 12.94H20.99C20.44 12.94 20 12.5 20 11.95Z\" />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M6 11.95C6 8.64 8.69 5.95 12 5.95C15.31 5.95 18 8.64 18 11.95C18 15.26 15.31 17.95 12 17.95C8.69 17.95 6 15.26 6 11.95ZM12 16C14.2091 16 16 14.2091 16 12C16 9.79086 14.2091 8 12 8C9.79086 8 8 9.79086 8 12C8 14.2091 9.79086 16 12 16Z\"\n      />\n      <path d=\"M12 22.9H11.99C11.44 22.9 11 22.46 11 21.91V20.95C11 20.4 11.44 19.96 11.99 19.96H12C12.55 19.96 12.99 20.4 12.99 20.95V21.91C12.99 22.46 12.55 22.9 12 22.9Z\" />\n      <path d=\"M5.66 19.69C5.27 20.08 4.64 20.08 4.25 19.69C3.86 19.3 3.86 18.68 4.24 18.28L4.63 17.89C5.02 17.5 5.65 17.5 6.04 17.89L6.05 17.9C6.43 18.28 6.44 18.91 6.05 19.3L5.66 19.69Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M19 5H17C17 3.89543 16.1046 3 15 3H9C7.89543 3 7 3.89543 7 5H5C3.9 5 3 5.9 3 7V8C3 10.55 4.92 12.63 7.39 12.94C8.02 14.44 9.37 15.57 11 15.9V19H8C7.44772 19 7 19.4477 7 20C7 20.5523 7.44772 21 8 21H16C16.5523 21 17 20.5523 17 20C17 19.4477 16.5523 19 16 19H13V15.9C14.63 15.57 15.98 14.44 16.61 12.94C19.08 12.63 21 10.55 21 8V7C21 5.9 20.1 5 19 5ZM5 8V7H7V10.82C5.84 10.4 5 9.3 5 8ZM12 14C10.35 14 9 12.65 9 11V5H15V11C15 12.65 13.65 14 12 14ZM19 8C19 9.3 18.16 10.4 17 10.82V7H19V8Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 30 30\" {...props}>\n      <path d=\"M24.0182 6.68591C24.1893 6.88085 24.2434 7.17327 24.1623 7.43645L19.3702 23.8411C19.3072 24.0458 19.1721 24.2018 19.0099 24.27C18.9198 24.309 18.8117 24.3188 18.7127 24.2993C18.6406 24.2798 18.5685 24.2505 18.5055 24.192L14.6952 21.2776L12.02 24.0556C11.8939 24.2018 11.7137 24.2603 11.5336 24.2115C11.4615 24.2018 11.3984 24.1726 11.3354 24.1238C11.1192 23.9679 11.0111 23.6754 11.0471 23.383L11.6056 19.5426L21.1537 9.57111L9.96623 17.6711L6.6424 15.1271C6.43523 14.9906 6.32714 14.7177 6.37217 14.4448C6.39019 14.1718 6.54332 13.9379 6.7595 13.8599L23.4056 6.5202C23.5047 6.47147 23.6038 6.46172 23.7119 6.48122C23.82 6.51046 23.9371 6.57869 24.0182 6.68591Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M14.3137 3L15.2631 3.94934C14.5597 5.19866 14.7398 6.81097 15.8032 7.87441C16.8667 8.93786 18.479 9.11792 19.7283 8.4146L20.6777 9.36396L17.6569 12.3848L17.1287 11.8566C16.7382 11.4661 16.105 11.4661 15.7145 11.8566C15.3239 12.2471 15.3239 12.8803 15.7145 13.2708L16.2426 13.799L9.36396 20.6777L8.49923 19.8129C9.71921 18.5286 9.69924 16.4983 8.43932 15.2384C7.1794 13.9784 5.14908 13.9585 3.86473 15.1784L3 14.3137L9.87868 7.43503L10.2145 7.77081C10.605 8.16134 11.2382 8.16134 11.6287 7.77081C12.0192 7.38029 12.0192 6.74713 11.6287 6.3566L11.2929 6.02081L14.3137 3ZM12.8995 1.58579C13.6805 0.804738 14.9469 0.804738 15.7279 1.58579L17.299 3.15684C17.6895 3.54736 17.6895 4.18053 17.299 4.57105L17.2175 4.65257C16.7183 5.15173 16.7183 5.96103 17.2175 6.4602C17.7166 6.95936 18.5259 6.95936 19.0251 6.4602L19.1066 6.37868C19.4971 5.98816 20.1303 5.98816 20.5208 6.37868L22.0919 7.94975C22.8729 8.7308 22.8729 9.99713 22.0919 10.7782L10.7782 22.0919C9.99713 22.8729 8.7308 22.8729 7.94975 22.0919L6.37869 20.5208C5.98817 20.1303 5.98817 19.4971 6.37869 19.1066L7.02511 18.4602C7.52427 17.961 7.52427 17.1517 7.02511 16.6526C6.52594 16.1534 5.71664 16.1534 5.21748 16.6526L4.57106 17.299C4.18054 17.6895 3.54737 17.6895 3.15685 17.299L1.58579 15.7279C0.804738 14.9469 0.804738 13.6805 1.58579 12.8995L12.8995 1.58579ZM13.8787 8.6066C13.4882 8.21608 12.855 8.21608 12.4645 8.6066C12.0739 8.99712 12.0739 9.63029 12.4645 10.0208L13.4645 11.0208C13.855 11.4113 14.4882 11.4113 14.8787 11.0208C15.2692 10.6303 15.2692 9.99713 14.8787 9.6066L13.8787 8.6066Z\"\n      />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M18.86 4.86003L21.65 7.65003C21.84 7.84003 21.84 8.16003 21.64 8.35003L18.85 11.14C18.54 11.46 18 11.24 18 10.79V9.00003H4C3.45 9.00003 3 8.55003 3 8.00003C3 7.45003 3.45 7.00003 4 7.00003H18V5.21003C18 4.76003 18.54 4.54003 18.86 4.86003ZM5.14001 19.14L2.35001 16.35C2.16001 16.16 2.16001 15.84 2.36001 15.65L5.15001 12.86C5.46001 12.54 6.00001 12.76 6.00001 13.21V15H20C20.55 15 21 15.45 21 16C21 16.55 20.55 17 20 17H6.00001V18.79C6.00001 19.24 5.46001 19.46 5.14001 19.14Z\"\n      />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 30 30\" {...props}>\n      <path d=\"M25.9141 9.03448C25.1596 9.36846 24.3503 9.59494 23.4995 9.69629C24.3678 9.17708 25.0346 8.35143 25.3473 7.37066C24.5354 7.85223 23.6347 8.20129 22.6764 8.39141C21.9095 7.57449 20.8174 7.06281 19.6075 7.06281C17.2844 7.06281 15.4016 8.94571 15.4016 11.2676C15.4016 11.5966 15.4391 11.9182 15.5105 12.2259C12.0164 12.0495 8.91746 10.3756 6.8433 7.83091C6.48051 8.45276 6.27398 9.17579 6.27398 9.94519C6.27398 11.4039 6.92514 12.6913 8.05359 13.4456C7.36425 13.4232 6.05753 13.2342 6.05753 12.9189C6.05753 12.9365 6.05753 12.9527 6.05753 12.9714C6.05753 15.0082 7.59944 16.7083 9.52235 17.0949C9.16954 17.1913 8.8434 17.2425 8.45932 17.2425C8.18774 17.2425 7.94782 17.215 7.69008 17.1662C8.22558 18.8376 9.7894 20.0524 11.6297 20.0874C10.191 21.2146 8.38259 21.8876 6.41233 21.8876C6.07194 21.8876 5.74083 21.8664 5.41174 21.8289C7.27336 23.0211 9.48407 23.7179 11.8598 23.7179C19.595 23.7179 23.8254 17.3101 23.8254 11.7531C23.8254 11.5704 23.822 11.389 23.8133 11.2088C24.6353 10.6159 25.3472 9.87512 25.9114 9.03196L25.9141 9.03448Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 30 30\" {...props}>\n      <circle cx=\"11.791\" cy=\"15.3902\" r=\"5.87049\" />\n      <ellipse cx=\"20.5511\" cy=\"15.3902\" rx=\"2.88975\" ry=\"5.87049\" />\n      <ellipse cx=\"24.6585\" cy=\"15.3902\" rx=\"1.2176\" ry=\"5.87049\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 30 30\" {...props}>\n      <path d=\"M24.3837 8.84827C23.7507 8.13906 22.941 7.61026 22.0371 7.31573C21.1333 7.0212 20.1675 6.97145 19.2382 7.17154C18.7909 7.28216 18.5665 7.67409 18.6218 8.12132C18.734 8.57013 19.126 8.79296 19.5732 8.73765C20.8596 8.45793 22.3151 8.84827 23.2648 9.91183C24.2162 10.9754 24.4975 12.4293 24.0487 13.7157C24.0161 13.8169 24.0041 13.9236 24.0136 14.0295C24.0231 14.1354 24.0539 14.2382 24.104 14.332C24.2162 14.4995 24.3837 14.667 24.5528 14.7223C24.7529 14.7715 24.964 14.748 25.1484 14.6559C25.3328 14.5639 25.4785 14.4093 25.5595 14.2198C26.062 12.374 25.727 10.3591 24.3837 8.84827Z\" />\n      <path d=\"M21.9784 13.7707C22.315 13.8829 22.7054 13.7154 22.8176 13.3234C23.0973 12.429 22.9298 11.4776 22.2581 10.7507C21.9449 10.4077 21.5492 10.1505 21.1086 10.0037C20.6679 9.85679 20.197 9.82507 19.7407 9.91152C19.6528 9.92322 19.5686 9.95393 19.4938 10.0015C19.4191 10.0491 19.3555 10.1123 19.3077 10.1869C19.2599 10.2616 19.2289 10.3457 19.2169 10.4335C19.2049 10.5213 19.2121 10.6107 19.2381 10.6954C19.2935 11.0857 19.6854 11.3101 20.0204 11.1979C20.4692 11.0873 20.9164 11.2548 21.2531 11.5898C21.5881 11.9249 21.6434 12.4274 21.5312 12.8762C21.4206 13.2681 21.6418 13.6601 21.9784 13.7707ZM20.6352 15.0586C20.357 14.9464 20.1326 14.8896 20.3001 14.5545C20.6367 13.717 20.6367 12.9884 20.3001 12.4843C19.6301 11.5345 17.7842 11.5898 15.714 12.4843C15.714 12.4843 15.0424 12.764 15.2099 12.2615C15.5465 11.1979 15.4896 10.3588 14.9871 9.85621C13.8682 8.73734 10.8466 9.91152 8.27384 12.4843C6.37112 14.4455 5.25067 16.4572 5.25067 18.2462C5.25067 21.6597 9.61395 23.7299 13.8666 23.7299C19.461 23.7299 23.1526 20.4839 23.1526 17.9111C23.1526 16.345 21.8093 15.449 20.6352 15.0586ZM13.8682 22.4972C10.4547 22.8339 7.54689 21.2678 7.32248 19.0853C7.09965 16.8476 9.67243 14.7789 13.0844 14.4423C16.4979 14.1073 19.4057 15.6734 19.6301 17.8558C19.8529 20.092 17.2801 22.1622 13.8682 22.4972Z\" />\n      <path d=\"M14.2031 16.1207C12.5816 15.6735 10.7342 16.5127 10.0626 17.9113C9.33565 19.3652 10.0626 20.9882 11.6856 21.4907C13.3639 22.0501 15.3772 21.211 16.0489 19.6449C16.7205 18.1341 15.8814 16.568 14.2031 16.1207ZM12.972 19.8693C12.6369 20.3718 11.9653 20.6515 11.4075 20.3718C10.9017 20.149 10.7342 19.5343 11.0708 19.0285C11.4059 18.526 12.0775 18.3016 12.5816 18.526C13.1411 18.6935 13.3086 19.3098 12.972 19.8693Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import styled from 'styled-components'\nimport { Button } from '@pancakeswap/uikit'\n\nconst MenuButton = styled(Button)`\n  color: ${({ theme }) => theme.colors.text};\n  padding: 0 8px;\n  border-radius: 8px;\n`\nMenuButton.defaultProps = {\n  variant: 'text',\n  size: 'sm',\n}\n\nexport default MenuButton\n","var _style, _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"\\\\u56FE\\\\u5C42_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 512 512\",\n    style: {\n      enableBackground: \"new 0 0 512 512\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \"\\n\\t.st0{fill:url(#SVGID_1_);}\\n\")), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"SVGID_1_\",\n    gradientUnits: \"userSpaceOnUse\",\n    x1: 256,\n    y1: 430.255,\n    x2: 256,\n    y2: 81.745\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    style: {\n      stopColor: \"#F56020\"\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    style: {\n      stopColor: \"#FFC700\"\n    }\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st0\",\n    d: \"M446.7,179.5l-17.2-25.2l-21.6-31.8l-20.2,32.7l-58.8,95l-20.2,32.7l21.6,31.8l20.2-32.7l58.8-95l17.2,25.2 l-58.8,95l-20.2,32.7l-16.1,26l-17.2-25.2l-21.6-31.8l-15.3-22.4l42.4-62.2l-43.7-97.8L256,81.7l-19.9,44.7l-43.7,97.8l42.4,62.2 l-15.3,22.4l-21.6,31.8l-17.2,25.2l-16.1-26l-20.2-32.7l-58.8-95l17.2-25.2l58.8,95l20.2,32.7l21.6-31.8l-20.2-32.7l-58.8-95 l-20.2-32.7l-21.6,31.8l-17.2,25.2l-21.6,31.8l20.2,32.7l58.8,95l20.2,32.7l16.1,26l20.2,32.7l21.6-31.8l17.2-25.2l21.6-31.8 l16.3-23.9l16.3,23.9l21.6,31.8l17.2,25.2l21.6,31.8l20.2-32.7l16.1-26l20.2-32.7l58.8-95l20.2-32.7L446.7,179.5z M232.4,220.6 l13.3-30l0,0l10.3-21.8l10.3,21.8l0,0l13.3,30L256,255.3L232.4,220.6z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.f6b1d430.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport { Flex } from '@pancakeswap/uikit'\nimport { HamburgerIcon, HamburgerCloseIcon } from '../icons'\nimport MenuButton from './MenuButton'\nimport { ReactComponent as RawLogo } from '../logo.svg'\n\ninterface Props {\n  isPushed: boolean\n  isDark: boolean\n  togglePush: () => void\n  href: string\n}\n\nconst blink = keyframes`\n  0%,  100% { transform: scaleY(1); } \n  50% { transform:  scaleY(0.1); } \n`\n\nconst Text = styled.span<{ isDark: boolean }>`\n  font-weight: bold;\n  font-size: 24px;\n  color: ${({ theme }) => theme.colors.primary}; /*${({ isDark }) => (isDark ? '#fff' : '#000')};*/\n  margin-left: 5px;\n`\n\nconst StyledLink = styled(Link)`\n  display: flex;\n  align-items: center;\n\n  > *:nth-child(2) {\n    display: none;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    > *:nth-child(2) {\n      display: block;\n    }\n  }\n\n  .right-eye {\n    animation-delay: 20ms;\n  }\n  &:hover {\n    .left-eye,\n    .right-eye {\n      transform-origin: center 60%;\n      animation-name: ${blink};\n      animation-duration: 350ms;\n      animation-iteration-count: 1;\n    }\n  }\n`\n\nconst Logo: React.FC<Props> = ({ isPushed, togglePush, isDark, href }) => {\n  const isAbsoluteUrl = href.startsWith('http')\n  const innerLogo = (\n    <>\n      <RawLogo style={{ width: 24, height: 24 }} />\n      <Text isDark={isDark}>AWSWAP</Text>\n    </>\n  )\n\n  return (\n    <Flex>\n      <MenuButton aria-label=\"Toggle menu\" onClick={togglePush} mr=\"24px\">\n        {isPushed ? (\n          <HamburgerCloseIcon width=\"24px\" color=\"textSubtle\" />\n        ) : (\n          <HamburgerIcon width=\"24px\" color=\"textSubtle\" />\n        )}\n      </MenuButton>\n      {isAbsoluteUrl ? (\n        // @ts-ignore\n        <StyledLink as=\"a\" href={href} aria-label=\"Pancake home page\">\n          {innerLogo}\n        </StyledLink>\n      ) : (\n        <StyledLink to={href} aria-label=\"Pancake home page\">\n          {innerLogo}\n        </StyledLink>\n      )}\n    </Flex>\n  )\n}\n\nexport default React.memo(Logo, (prev, next) => prev.isPushed === next.isPushed && prev.isDark === next.isDark)\n","import { LinkStatus } from './types'\n\nexport const status = {\n  LIVE: <LinkStatus>{\n    text: 'LIVE',\n    color: 'failure',\n  },\n  SOON: <LinkStatus>{\n    text: 'SOON',\n    color: 'warning',\n  },\n  NEW: <LinkStatus>{\n    text: 'NEW',\n    color: 'success',\n  },\n}\n\nexport const links = [\n  {\n    label: 'Home',\n    icon: 'HomeIcon',\n    href: '/',\n  },\n  {\n    label: 'Trade',\n    icon: 'TradeIcon',\n    items: [\n      {\n        label: 'Exchange',\n        href: 'https://exchange.pancakeswap.finance',\n      },\n      {\n        label: 'Liquidity',\n        href: 'https://exchange.pancakeswap.finance/#/pool',\n      },\n    ],\n  },\n  {\n    label: 'Farms',\n    icon: 'FarmIcon',\n    href: '/farms',\n    status: status.LIVE,\n  },\n  {\n    label: 'Pools',\n    icon: 'PoolIcon',\n    href: '/syrup',\n  },\n  {\n    label: 'Lottery',\n    icon: 'TicketIcon',\n    href: '/lottery',\n  },\n  {\n    label: 'NFT',\n    icon: 'NftIcon',\n    href: '/nft',\n  },\n  {\n    label: 'Team Battle',\n    icon: 'TeamBattleIcon',\n    href: '/competition',\n    status: status.SOON,\n  },\n  {\n    label: 'Profile & Teams',\n    icon: 'GroupsIcon',\n    status: status.LIVE,\n    items: [\n      {\n        label: 'Leaderboard',\n        href: '/teams',\n        status: status.NEW,\n      },\n      {\n        label: 'YourProfile',\n        href: '/',\n      },\n    ],\n    calloutClass: 'rainbow',\n  },\n  {\n    label: 'Info',\n    icon: 'InfoIcon',\n    items: [\n      {\n        label: 'Overview',\n        href: 'https://pancakeswap.info',\n      },\n      {\n        label: 'Tokens',\n        href: 'https://pancakeswap.info/tokens',\n      },\n      {\n        label: 'Pairs',\n        href: 'https://pancakeswap.info/pairs',\n      },\n      {\n        label: 'Accounts',\n        href: 'https://pancakeswap.info/accounts',\n      },\n    ],\n  },\n  {\n    label: 'IFO',\n    icon: 'IfoIcon',\n    items: [\n      {\n        label: 'Next',\n        href: '/ifo',\n      },\n      {\n        label: 'History',\n        href: '/ifo/history',\n      },\n    ],\n  },\n  {\n    label: 'More',\n    icon: 'MoreIcon',\n    items: [\n      {\n        label: 'Voting',\n        href: 'https://voting.pancakeswap.finance',\n      },\n      {\n        label: 'Github',\n        href: 'https://github.com/pancakeswap',\n      },\n      {\n        label: 'Docs',\n        href: 'https://docs.pancakeswap.finance',\n      },\n      {\n        label: 'Blog',\n        href: 'https://pancakeswap.medium.com',\n      },\n    ],\n  },\n]\n\nexport const socials = [\n  {\n    label: 'Telegram',\n    icon: 'TelegramIcon',\n    href: 'https://t.me/HALONetwork_news',\n  },\n  {\n    label: 'Twitter',\n    icon: 'TwitterIcon',\n    href: 'https://twitter.com/network_Halo',\n  },\n  {\n    label: 'Frame',\n    icon: 'FrameIcon',\n    href: 'https://medium.com/halo-network',\n  },\n  {\n    label: 'weibo',\n    icon: 'WeiBoIcon',\n    href: 'https://weibo.com/u/7520344148',\n  },\n]\n\nexport const MENU_HEIGHT = 64\nexport const MENU_ENTRY_HEIGHT = 48\nexport const SIDEBAR_WIDTH_FULL = 240\nexport const SIDEBAR_WIDTH_REDUCED = 56\n","import React from 'react'\nimport styled, { keyframes, DefaultTheme } from 'styled-components'\nimport { Text, Colors } from '@pancakeswap/uikit'\nimport { MENU_ENTRY_HEIGHT } from '../config'\n\nexport interface Props {\n  secondary?: boolean\n  isActive?: boolean\n  theme: DefaultTheme\n}\n\nconst rainbowAnimation = keyframes`\n  0%,\n  100% {\n    background-position: 0 0;\n  }\n  50% {\n    background-position: 100% 0;\n  }\n`\n\nconst LinkLabel = styled.div<{ isPushed: boolean }>`\n  color: ${({ isPushed, theme }) => (isPushed ? theme.colors.textSubtle : 'transparent')};\n  transition: color 0.4s;\n  flex-grow: 1;\n  margin-left: 20px;\n`\n\nconst MenuEntry = styled.div<Props>`\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  height: ${MENU_ENTRY_HEIGHT}px;\n  padding: ${({ secondary }) => (secondary ? '0 32px' : '0 16px')};\n  font-size: ${({ secondary }) => (secondary ? '14px' : '16px')};\n  // background-color: ${({ secondary, theme }) => (secondary ? theme.colors.background : 'transparent')};\n  color: #ffffff; /*${({ theme }) => theme.colors.textSubtle};*/\n  border-radius: 8px;\n  margin-bottom: 5px;\n  transition: all 0.3s;\n\n  a {\n    display: flex;\n    align-items: center;\n    width: 100%;\n    height: 100%;\n  }\n\n  svg {\n    fill: ${({ theme }) => theme.colors.textSubtle};\n  }\n\n  ${({ isActive }) =>\n    isActive\n      ? `\n    background-color: #F56020;\n    color: #ffffff; /*${({ theme }) => theme.colors.textSubtle};*/\n\n    svg {\n      fill: #fff;\n    }\n\n    ${LinkLabel} {\n      color: #fff;\n    }\n  `\n      : ''}\n\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.primary};\n    color: #ffffff; /*${({ theme }) => theme.colors.textSubtle};*/\n\n    svg {\n      fill: #fff;\n    }\n\n    ${LinkLabel} {\n      color: #fff;\n    }\n  }\n\n  // Safari fix\n  flex-shrink: 0;\n\n  &.rainbow {\n    //background-clip: text;\n    animation: ${rainbowAnimation} 3s ease-in-out infinite;\n    background: ${({ theme }) => theme.colors.gradients.bubblegum};\n    background-size: 400% 100%;\n  }\n`\nMenuEntry.defaultProps = {\n  secondary: false,\n  isActive: false,\n}\n\nconst LinkStatus = styled(Text)<{ color: keyof Colors }>`\n  border-radius: ${({ theme }) => theme.radii.default};\n  padding: 0 8px;\n  border: 2px solid;\n  border-color: ${({ theme, color }) => theme.colors[color]};\n  box-shadow: none;\n  color: ${({ theme, color }) => theme.colors[color]};\n  margin-left: 8px;\n`\n\nconst LinkLabelMemo = React.memo(LinkLabel, (prev, next) => prev.isPushed === next.isPushed)\n\nexport { MenuEntry, LinkStatus, LinkLabelMemo as LinkLabel }\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap/uikit'\n\nexport enum ViewMode {\n  'TABLE' = 'TABLE',\n  'CARD' = 'CARD',\n}\n\ninterface ToggleViewProps {\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-right: 0px;\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n    margin-right: 16px;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode: ViewMode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import React, { ReactNode, useState } from 'react'\nimport styled from 'styled-components'\nimport { ArrowDropDownIcon, ArrowDropUpIcon } from '@pancakeswap/uikit'\nimport { MENU_ENTRY_HEIGHT } from '../config'\nimport { LinkLabel, LinkStatus as LinkStatusComponent, MenuEntry } from './MenuEntry'\nimport { LinkStatus, PushedProps } from '../types'\n\ninterface Props extends PushedProps {\n  label: string\n  status?: LinkStatus\n  icon: React.ReactElement\n  initialOpenState?: boolean\n  className?: string\n  children: ReactNode\n  isActive?: boolean\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  // Safari fix\n  flex-shrink: 0;\n`\n\nconst AccordionContent = styled.div<{ isOpen: boolean; isPushed: boolean; maxHeight: number }>`\n  max-height: ${({ isOpen, maxHeight }) => (isOpen ? `${maxHeight}px` : 0)};\n  transition: max-height 0.3s ease-out;\n  overflow: hidden;\n  // border-color: ${({ isOpen, isPushed }) => (isOpen && isPushed ? 'rgba(133, 133, 133, 0.1)' : 'transparent')};\n  // border-style: solid;\n  // border-width: 1px 0;\n  margin: ${({ isOpen }) => (isOpen ? '4px' : '0')};\n`\n\nconst Accordion: React.FC<Props> = ({\n  label,\n  status,\n  icon,\n  isPushed,\n  pushNav,\n  initialOpenState = false,\n  children,\n  className,\n  isActive,\n}) => {\n  const [isOpen, setIsOpen] = useState(initialOpenState)\n  const handleClick = () => {\n    if (isPushed) {\n      setIsOpen((prevState) => !prevState)\n    } else {\n      pushNav(true)\n      setIsOpen(true)\n    }\n  }\n\n  return (\n    <Container>\n      <MenuEntry onClick={handleClick} className={className} isActive={isActive} role=\"button\">\n        {icon}\n        <LinkLabel isPushed={isPushed}>{label}</LinkLabel>\n        {status && (\n          <LinkStatusComponent color={status.color} fontSize=\"14px\">\n            {status.text}\n          </LinkStatusComponent>\n        )}\n        {isOpen ? <ArrowDropUpIcon /> : <ArrowDropDownIcon />}\n      </MenuEntry>\n      <AccordionContent\n        isOpen={isOpen}\n        isPushed={isPushed}\n        maxHeight={React.Children.count(children) * (MENU_ENTRY_HEIGHT + 5)}\n      >\n        {children}\n      </AccordionContent>\n    </Container>\n  )\n}\n\nexport default Accordion\n","import React, { AnchorHTMLAttributes } from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst MenuLink: React.FC<AnchorHTMLAttributes<HTMLAnchorElement>> = ({ href, ...otherProps }) => {\n  const isHttpLink = href?.startsWith('http')\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const Tag: any = isHttpLink ? 'a' : NavLink\n  const props = isHttpLink ? { href } : { to: href }\n  return <Tag role=\"button\" {...props} {...otherProps} />\n}\n\nexport default MenuLink\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useLocation } from 'react-router-dom'\nimport { SvgProps } from '@pancakeswap/uikit'\nimport * as IconModule from '../icons'\nimport Accordion from './Accordion'\nimport { MenuEntry, LinkLabel, LinkStatus } from './MenuEntry'\nimport MenuLink from './MenuLink'\nimport { PanelProps, PushedProps } from '../types'\n\ninterface Props extends PanelProps, PushedProps {\n  isMobile: boolean\n}\n\nconst Icons = IconModule as unknown as { [key: string]: React.FC<SvgProps> }\n\nconst Container = styled.div<{ isPushed: boolean }>`\n  display: flex;\n  flex-direction: column;\n  overflow-y: auto;\n  overflow-x: hidden;\n  height: 100%;\n  padding: ${({ isPushed }) => {\n    return isPushed ? '0 20px' : '0'\n  }};\n`\n\nconst PanelBody: React.FC<Props> = ({ isPushed, pushNav, isMobile, links }) => {\n  const location = useLocation()\n\n  // Close the menu when a user clicks a link on mobile\n  const handleClick = isMobile ? () => pushNav(false) : undefined\n\n  return (\n    <Container isPushed={isPushed}>\n      {links.map((entry) => {\n        let Icon: React.FC<SvgProps>\n        if (typeof entry.icon === 'string') {\n          Icon = Icons[entry.icon] as React.FC<SvgProps>\n        } else {\n          Icon = entry.icon as React.FC<SvgProps>\n        }\n\n        const iconElement = <Icon width=\"24px\" mr=\"8px\" color=\"#f00\" />\n        const calloutClass = entry.calloutClass ? entry.calloutClass : undefined\n\n        if (entry.items) {\n          const itemsMatchIndex = entry.items.findIndex((item) => item.href === location.pathname)\n          const initialOpenState = entry.initialOpenState === true ? entry.initialOpenState : itemsMatchIndex >= 0\n\n          return (\n            <Accordion\n              key={entry.label}\n              isPushed={isPushed}\n              pushNav={pushNav}\n              icon={iconElement}\n              label={entry.label}\n              status={entry.status}\n              initialOpenState={initialOpenState}\n              className={calloutClass}\n            >\n              {isPushed &&\n                entry.items.map((item) => (\n                  <MenuEntry key={item.href} secondary isActive={item.href === location.pathname} onClick={handleClick}>\n                    <MenuLink href={item.href}>\n                      <LinkLabel isPushed={isPushed}>{item.label}</LinkLabel>\n                      {item.status && (\n                        <LinkStatus color={item.status.color} fontSize=\"14px\">\n                          {item.status.text}\n                        </LinkStatus>\n                      )}\n                    </MenuLink>\n                  </MenuEntry>\n                ))}\n            </Accordion>\n          )\n        }\n        return (\n          <MenuEntry key={entry.label} isActive={entry.href === location.pathname} className={calloutClass}>\n            <MenuLink href={entry.href} onClick={handleClick}>\n              {iconElement}\n              <LinkLabel isPushed={isPushed}>{entry.label}</LinkLabel>\n              {entry.status && (\n                <LinkStatus color={entry.status.color} fontSize=\"14px\">\n                  {entry.status.text}\n                </LinkStatus>\n              )}\n            </MenuLink>\n          </MenuEntry>\n        )\n      })}\n    </Container>\n  )\n}\n\nexport default PanelBody\n","import React from 'react'\nimport { SvgProps, Text, Flex } from '@pancakeswap/uikit'\nimport * as IconModule from '../icons'\n\nconst Icons = IconModule as unknown as { [key: string]: React.FC<SvgProps> }\nconst { MoonIcon, SunIcon } = Icons\n\ninterface Props {\n  isDark: boolean\n  toggleTheme: (isDark: boolean) => void\n}\n\nconst ThemeSwitcher: React.FC<Props> = ({ isDark, toggleTheme }) => (\n  <Flex onClick={() => toggleTheme(!isDark)}>\n    {/* alignItems center is a Safari fix */}\n    <Flex alignItems=\"center\">\n      <SunIcon color={isDark ? 'textDisabled' : 'text'} width=\"24px\" />\n      <Text color=\"textDisabled\" mx=\"4px\">\n        /\n      </Text>\n      <MoonIcon color={isDark ? 'text' : 'textDisabled'} width=\"24px\" />\n    </Flex>\n  </Flex>\n)\n\nexport default React.memo(ThemeSwitcher, (prev, next) => prev.isDark === next.isDark)\n","import React from 'react'\nimport { Text, Dropdown, LanguageIcon, Flex } from '@pancakeswap/uikit'\nimport { Language } from '../types'\nimport MenuButton from './MenuButton'\n\ninterface Props {\n  currentLang: string\n  langs: Language[]\n  setLang: (lang: Language) => void\n  position?: 'top' | 'top-right' | 'bottom'\n}\n\nconst LangSelector: React.FC<Props> = ({ currentLang, langs, setLang, position = 'top-right' }) => (\n  <Dropdown\n    position={position}\n    target={\n      <Flex style={{ cursor: 'pointer' }}>\n        <LanguageIcon color=\"text\" width=\"24px\" mr={1} />\n        <Text color=\"text\">{currentLang?.toUpperCase()}</Text>\n      </Flex>\n    }\n  >\n    {langs.map((lang) => (\n      <MenuButton\n        key={lang.locale}\n        fullWidth\n        onClick={() => setLang(lang)}\n        // Safari fix\n        style={{ minHeight: '32px', height: 'auto' }}\n      >\n        {lang.language}\n      </MenuButton>\n    ))}\n  </Dropdown>\n)\n\nexport default React.memo(LangSelector, (prev, next) => prev.currentLang === next.currentLang)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { CogIcon, IconButton } from '@pancakeswap/uikit'\nimport { MENU_ENTRY_HEIGHT } from '../config'\nimport { PanelProps, PushedProps } from '../types'\nimport ThemeSwitcher from './ThemeSwitcher'\nimport SocialLinks from './SocialLinks'\nimport LangSelector from './LangSelector'\n\ninterface Props extends PanelProps, PushedProps {}\n\nconst Container = styled.div<{ isPushed: boolean }>`\n  flex: none;\n  padding: ${({ isPushed }) => {\n    return isPushed ? '8px 40px' : '8px 0'\n  }};\n  background-color: ${({ theme }) => theme.nav.background};\n`\n\nconst SettingsEntry = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: ${MENU_ENTRY_HEIGHT}px;\n`\n\nconst SocialEntry = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: ${MENU_ENTRY_HEIGHT}px;\n  position: relative;\n\n  &::after {\n    content: '';\n    display: block;\n    position: absolute;\n    bottom: 0;\n    left: -5px;\n    right: 0;\n    height: 1px;\n    background: #ededf1;\n  }\n`\n\nconst PanelFooter: React.FC<Props> = ({ isPushed, pushNav, toggleTheme, isDark, currentLang, langs, setLang }) => {\n  if (!isPushed) {\n    return (\n      <Container isPushed={isPushed}>\n        <IconButton variant=\"text\" onClick={() => pushNav(true)}>\n          <CogIcon />\n        </IconButton>\n      </Container>\n    )\n  }\n\n  return (\n    <Container isPushed={isPushed}>\n      <SettingsEntry>\n        <ThemeSwitcher isDark={isDark} toggleTheme={toggleTheme} />\n        <LangSelector currentLang={currentLang} langs={langs} setLang={setLang} />\n      </SettingsEntry>\n    </Container>\n  )\n}\n\nexport default PanelFooter\n","import React from 'react'\nimport styled from 'styled-components'\nimport PanelBody from './PanelBody'\nimport PanelFooter from './PanelFooter'\nimport { SIDEBAR_WIDTH_REDUCED, SIDEBAR_WIDTH_FULL } from '../config'\nimport { PanelProps, PushedProps } from '../types'\n\ninterface Props extends PanelProps, PushedProps {\n  showMenu: boolean\n  isMobile: boolean\n}\n\nconst StyledPanel = styled.div<{ isPushed: boolean; showMenu: boolean }>`\n  position: fixed;\n  padding-top: ${({ showMenu }) => (showMenu ? '80px' : 0)};\n  top: 0;\n  left: 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  flex-shrink: 0;\n  background-color: ${({ theme }) => theme.nav.background};\n  width: ${({ isPushed }) => (isPushed ? `${SIDEBAR_WIDTH_FULL}px` : 0)};\n  height: 100%;\n  transition: padding-top 0.2s, width 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n  border-right: ${({ isPushed }) => (isPushed ? '2px solid rgba(133, 133, 133, 0.1)' : 0)};\n  z-index: 11;\n  overflow: ${({ isPushed }) => (isPushed ? 'initial' : 'hidden')};\n  transform: translate3d(0, 0, 0);\n  ${({ isPushed }) => !isPushed && 'white-space: nowrap;'};\n\n  ${({ theme }) => theme.mediaQueries.nav} {\n    border-right: 2px solid rgba(133, 133, 133, 0.1);\n    width: ${({ isPushed }) => `${isPushed ? SIDEBAR_WIDTH_FULL : SIDEBAR_WIDTH_REDUCED}px`};\n  }\n`\n\nconst Panel: React.FC<Props> = (props) => {\n  const { isPushed, showMenu } = props\n  return (\n    <StyledPanel isPushed={isPushed} showMenu={showMenu}>\n      <PanelBody {...props} />\n      <PanelFooter {...props} />\n    </StyledPanel>\n  )\n}\n\nexport default Panel\n","import React, { useState, useEffect, useRef } from 'react'\nimport styled from 'styled-components'\nimport throttle from 'lodash/throttle'\nimport { Overlay, Flex, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport Logo from './components/Logo'\nimport Panel from './components/Panel'\nimport { NavProps } from './types'\nimport { MENU_HEIGHT, SIDEBAR_WIDTH_REDUCED, SIDEBAR_WIDTH_FULL } from './config'\nimport LangSelector from './components/LangSelector'\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n`\n\nconst StyledNav = styled.nav<{ showMenu: boolean }>`\n  position: fixed;\n  top: ${({ showMenu }) => (showMenu ? 0 : `-${MENU_HEIGHT}px`)};\n  left: 0;\n  transition: top 0.2s;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-left: 8px;\n  padding-right: 16px;\n  width: 100%;\n  height: ${MENU_HEIGHT}px;\n  background-color: ${({ theme }) => theme.nav.background};\n  border-bottom: solid 2px rgba(133, 133, 133, 0.1);\n  z-index: 20;\n  transform: translate3d(0, 0, 0);\n`\n\nconst BodyWrapper = styled.div`\n  position: relative;\n  display: flex;\n`\n\nconst Inner = styled.div<{ isPushed: boolean; showMenu: boolean }>`\n  flex-grow: 1;\n  margin-top: ${({ showMenu }) => (showMenu ? `${MENU_HEIGHT}px` : 0)};\n  transition: margin-top 0.2s, margin-left 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n  transform: translate3d(0, 0, 0);\n  max-width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.nav} {\n    margin-left: ${({ isPushed }) => `${isPushed ? SIDEBAR_WIDTH_FULL : SIDEBAR_WIDTH_REDUCED}px`};\n    max-width: ${({ isPushed }) => `calc(100% - ${isPushed ? SIDEBAR_WIDTH_FULL : SIDEBAR_WIDTH_REDUCED}px)`};\n  }\n`\n\nconst MobileOnlyOverlay = styled(Overlay)`\n  position: fixed;\n  height: 100%;\n\n  ${({ theme }) => theme.mediaQueries.nav} {\n    display: none;\n  }\n`\n\nconst LangWrapper = styled.div`\n  margin-right: 5px;\n  display: block;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: none;\n  }\n`\n\nconst Menu: React.FC<NavProps> = ({\n  userMenu,\n  globalMenu,\n  isDark,\n  toggleTheme,\n  langs,\n  setLang,\n  currentLang,\n  cakePriceUsd,\n  links,\n  children,\n}) => {\n  const { isMobile, isTablet } = useMatchBreakpoints()\n  const isSmallerScreen = isMobile || isTablet\n  const [isPushed, setIsPushed] = useState(!isSmallerScreen)\n  const [showMenu, setShowMenu] = useState(true)\n  const refPrevOffset = useRef(window.pageYOffset)\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const currentOffset = window.pageYOffset\n      const isBottomOfPage = window.document.body.clientHeight === currentOffset + window.innerHeight\n      const isTopOfPage = currentOffset === 0\n      // Always show the menu when user reach the top\n      if (isTopOfPage) {\n        setShowMenu(true)\n      }\n      // Avoid triggering anything at the bottom because of layout shift\n      else if (!isBottomOfPage) {\n        if (currentOffset < refPrevOffset.current) {\n          // Has scroll up\n          setShowMenu(true)\n        } else {\n          // Has scroll down\n          setShowMenu(false)\n        }\n      }\n      refPrevOffset.current = currentOffset\n    }\n    const throttledHandleScroll = throttle(handleScroll, 200)\n\n    window.addEventListener('scroll', throttledHandleScroll)\n    return () => {\n      window.removeEventListener('scroll', throttledHandleScroll)\n    }\n  }, [])\n\n  // Find the home link if provided\n  const homeLink = links.find((link) => link.label === 'Home')\n\n  return (\n    <Wrapper>\n      <StyledNav showMenu={showMenu}>\n        <Logo\n          isPushed={isPushed}\n          togglePush={() => setIsPushed((prevState: boolean) => !prevState)}\n          isDark={isDark}\n          href={homeLink?.href ?? '/'}\n        />\n\n        <Flex alignItems=\"center\">\n          <LangWrapper>\n            <LangSelector currentLang={currentLang} langs={langs} setLang={setLang} position=\"bottom\" />\n          </LangWrapper>\n          {globalMenu} {userMenu}\n        </Flex>\n      </StyledNav>\n      <BodyWrapper>\n        <Panel\n          isPushed={isPushed}\n          isMobile={isSmallerScreen}\n          showMenu={showMenu}\n          isDark={isDark}\n          toggleTheme={toggleTheme}\n          langs={langs}\n          setLang={setLang}\n          currentLang={currentLang}\n          cakePriceUsd={cakePriceUsd}\n          pushNav={setIsPushed}\n          links={links}\n        />\n        <Inner isPushed={isPushed} showMenu={showMenu}>\n          {children}\n        </Inner>\n        <MobileOnlyOverlay show={isPushed} onClick={() => setIsPushed(false)} role=\"presentation\" />\n      </BodyWrapper>\n    </Wrapper>\n  )\n}\n\nexport default Menu\n","import styled from 'styled-components'\nimport { UserMenuItemProps } from './types'\n\nexport const UserMenuDivider = styled.hr`\n  border-color: ${({ theme }) => theme.colors.cardBorder};\n  border-style: solid;\n  border-width: 1px 0 0;\n  margin: 4px 0;\n`\n\nexport const UserMenuItem = styled.button<UserMenuItemProps>`\n  align-items: center;\n  border: 0;\n  background: transparent;\n  color: ${({ theme, disabled }) => theme.colors[disabled ? 'textDisabled' : 'textSubtle']};\n  cursor: ${({ disabled }) => (disabled ? 'not-allowed' : 'pointer')};\n  display: flex;\n  font-size: 16px;\n  height: 48px;\n  justify-content: space-between;\n  outline: 0;\n  padding-left: 16px;\n  padding-right: 16px;\n  width: 100%;\n\n  &:hover:not(:disabled) {\n    background-color: ${({ theme }) => theme.colors.tertiary};\n  }\n\n  &:active:not(:disabled) {\n    opacity: 0.85;\n    transform: translateY(1px);\n  }\n`\n","import React from 'react'\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 16 16\" {...props}>\n      <path\n        d=\"M10.538 2.98653V5.58922H9.5106V2.98653C9.5106 2.8016 9.34622 2.71256 9.23663 2.71256C9.20238 2.71256 9.16814 2.71941 9.13389 2.73311L3.70248 4.78102C3.33947 4.918 3.1066 5.26046 3.1066 5.65086V6.10976C2.48333 6.5755 2.07922 7.32207 2.07922 8.16452V5.65086C2.07922 4.83581 2.57921 4.10979 3.33948 3.82213L8.77773 1.76737C8.92842 1.71258 9.08595 1.68518 9.23663 1.68518C9.92155 1.68518 10.538 2.23997 10.538 2.98653Z\"\n        fill=\"#F8FBFF\"\n      />\n      <path\n        d=\"M15.0927 10.2124V10.8973C15.0927 11.0822 14.9488 11.2329 14.7571 11.2398H13.7571C13.3941 11.2398 13.0653 10.9727 13.0379 10.6165C13.0174 10.4042 13.0996 10.2055 13.2365 10.0686C13.3598 9.93843 13.5311 9.86993 13.716 9.86993H14.7502C14.9488 9.87678 15.0927 10.0275 15.0927 10.2124Z\"\n        fill=\"#F8FBFF\"\n      />\n      <path\n        d=\"M13.7092 9.15075H14.4078C14.7845 9.15075 15.0927 8.84254 15.0927 8.46583V8.16447C15.0927 6.74669 13.9352 5.58917 12.5174 5.58917H4.65452C4.07234 5.58917 3.5381 5.78095 3.1066 6.10971C2.48333 6.57546 2.07922 7.32202 2.07922 8.16447V12.774C2.07922 14.1918 3.23674 15.3493 4.65452 15.3493H12.5174C13.9352 15.3493 15.0927 14.1918 15.0927 12.774V12.6438C15.0927 12.2671 14.7845 11.9589 14.4078 11.9589H13.8119C13.1544 11.9589 12.5242 11.5548 12.353 10.9178C12.2092 10.3973 12.3804 9.89731 12.7229 9.5617C12.9763 9.30143 13.3256 9.15075 13.7092 9.15075ZM9.95579 9.01377H5.16136C4.88054 9.01377 4.64767 8.7809 4.64767 8.50008C4.64767 8.21926 4.88054 7.98639 5.16136 7.98639H9.95579C10.2366 7.98639 10.4695 8.21926 10.4695 8.50008C10.4695 8.7809 10.2366 9.01377 9.95579 9.01377Z\"\n        fill=\"#F8FBFF\"\n      />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React, { useEffect, useRef, useState } from 'react'\nimport { usePopper } from 'react-popper'\nimport styled from 'styled-components'\nimport { Flex } from '@pancakeswap/uikit'\nimport { isTouchDevice } from '../../../../../utils'\nimport { UserMenuProps } from './types'\nimport { UserMenuItem } from './styles'\nimport Button from '../../../../styles/Button'\nimport Wallet from '../../icons/Wallet'\n\nconst StyledUserMenu = styled(Flex)`\n  align-items: center;\n  // background-color: ${({ theme }) => theme.colors.tertiary};\n  border-radius: 16px;\n  //box-shadow: inset 0px -2px 0px rgba(0, 0, 0, 0.1);\n  cursor: pointer;\n  display: inline-flex;\n  height: 32px;\n  padding-left: 8px;\n  padding-right: 8px;\n  position: relative;\n\n  &:hover {\n    opacity: 0.65;\n  }\n`\n\n// const LabelText = styled.div`\n//   color: ${({ theme }) => theme.colors.text};\n//   display: none;\n//   font-weight: 600;\n//\n//   ${({ theme }) => theme.mediaQueries.sm} {\n//     display: block;\n//     margin-left: 8px;\n//     margin-right: 4px;\n//   }\n// `\n\nconst Menu = styled.div<{ isOpen: boolean }>`\n  background-color: ${({ theme }) => theme.card.background};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  border-radius: 8px;\n  padding-bottom: 4px;\n  padding-top: 4px;\n  pointer-events: auto;\n  width: 280px;\n  visibility: visible;\n  z-index: 1001;\n\n  ${({ isOpen }) =>\n    !isOpen &&\n    `\n    pointer-events: none;\n    visibility: hidden;\n  `}\n\n  ${UserMenuItem}:first-child {\n    border-radius: 8px 8px 0 0;\n  }\n\n  ${UserMenuItem}:last-child {\n    border-radius: 0 0 8px 8px;\n  }\n`\n\nconst UserMenu: React.FC<UserMenuProps> = ({ account, text, children, ...props }) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const [targetRef, setTargetRef] = useState<HTMLDivElement | null>(null)\n  const [tooltipRef, setTooltipRef] = useState<HTMLDivElement | null>(null)\n  const hideTimeout = useRef<number>()\n  const isHoveringOverTooltip = useRef(false)\n  const accountEllipsis = account ? `${account.substring(0, 2)}...${account.substring(account.length - 4)}` : null\n  const { styles, attributes } = usePopper(targetRef, tooltipRef, {\n    placement: 'bottom-end',\n    modifiers: [{ name: 'offset', options: { offset: [0, 12] } }],\n  })\n\n  /**\n   * See \"useTooltip\"\n   */\n  useEffect(() => {\n    const showTooltip = (evt: MouseEvent | TouchEvent) => {\n      setIsOpen(true)\n\n      if (evt.target === targetRef) {\n        clearTimeout(hideTimeout.current)\n      }\n\n      if (evt.target === tooltipRef) {\n        isHoveringOverTooltip.current = true\n      }\n    }\n\n    const hideTooltip = (evt: MouseEvent | TouchEvent) => {\n      if (hideTimeout.current) {\n        window.clearTimeout(hideTimeout.current)\n      }\n\n      if (evt.target === tooltipRef) {\n        isHoveringOverTooltip.current = false\n      }\n\n      if (!isHoveringOverTooltip.current) {\n        hideTimeout.current = window.setTimeout(() => {\n          if (!isHoveringOverTooltip.current) {\n            setIsOpen(false)\n          }\n        }, 150)\n      }\n    }\n\n    const toggleTouch = (evt: TouchEvent) => {\n      const target = evt.target as Node\n      const isTouchingTargetRef = target && targetRef?.contains(target)\n      const isTouchingTooltipRef = target && tooltipRef?.contains(target)\n\n      if (isTouchingTargetRef) {\n        setIsOpen((prevOpen) => !prevOpen)\n      } else if (isTouchingTooltipRef) {\n        // Don't close the menu immediately so it catches the event\n        setTimeout(() => {\n          setIsOpen(false)\n        }, 100)\n      } else {\n        setIsOpen(false)\n      }\n    }\n\n    if (isTouchDevice()) {\n      document.addEventListener('touchstart', toggleTouch)\n    } else {\n      targetRef?.addEventListener('mouseenter', showTooltip)\n      targetRef?.addEventListener('mouseleave', hideTooltip)\n      tooltipRef?.addEventListener('mouseenter', showTooltip)\n      tooltipRef?.addEventListener('mouseleave', hideTooltip)\n    }\n\n    return () => {\n      if (isTouchDevice()) {\n        document.removeEventListener('touchstart', toggleTouch)\n      } else {\n        targetRef?.removeEventListener('mouseenter', showTooltip)\n        targetRef?.removeEventListener('mouseleave', hideTooltip)\n        tooltipRef?.removeEventListener('mouseenter', showTooltip)\n        tooltipRef?.removeEventListener('mouseleave', hideTooltip)\n      }\n    }\n  }, [targetRef, tooltipRef, hideTimeout, isHoveringOverTooltip, setIsOpen])\n\n  return (\n    <>\n      <StyledUserMenu ref={setTargetRef} {...props}>\n        <Button scale=\"sm\">\n          <Wallet width=\"16px\" />\n          <span style={{ marginLeft: 8 }}>{text || accountEllipsis}</span>\n        </Button>\n      </StyledUserMenu>\n    </>\n  )\n}\n\nexport default UserMenu\n","import React from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Flex, LogoutIcon, useModal, UserMenuDivider, UserMenuItem } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useProfile } from 'state/profile/hooks'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport WalletModal, { WalletView, LOW_BNB_BALANCE } from './WalletModal'\nimport ProfileUserMenuItem from './ProfileUserMenutItem'\nimport WalletUserMenuItem from './WalletUserMenuItem'\nimport { UserMenu as UIKitUserMenu } from '../UikitMenu'\n\nconst UserMenu = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { logout } = useAuth()\n  const { balance, fetchStatus } = useGetBnbBalance()\n  const { isInitialized, isLoading, profile } = useProfile()\n  const [onPresentWalletModal] = useModal(<WalletModal initialView={WalletView.WALLET_INFO} />)\n  const [onPresentTransactionModal] = useModal(<WalletModal initialView={WalletView.TRANSACTIONS} />)\n  const hasProfile = isInitialized && !!profile\n  const avatarSrc = profile && profile.nft ? `/images/nfts/${profile.nft.images.sm}` : undefined\n  const hasLowBnbBalance = fetchStatus === FetchStatus.SUCCESS && balance.lte(LOW_BNB_BALANCE)\n\n  if (!account) {\n    return <ConnectWalletButton scale=\"sm\" />\n  }\n\n  return (\n    <UIKitUserMenu account={account} avatarSrc={avatarSrc}>\n      <WalletUserMenuItem hasLowBnbBalance={hasLowBnbBalance} onPresentWalletModal={onPresentWalletModal} />\n      <UserMenuItem as=\"button\" onClick={onPresentTransactionModal}>\n        {t('Transactions')}\n      </UserMenuItem>\n      <UserMenuDivider />\n      <ProfileUserMenuItem isLoading={isLoading} hasProfile={hasProfile} />\n      <UserMenuDivider />\n      <UserMenuItem as=\"button\" onClick={logout}>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\n          {t('Disconnect')}\n          <LogoutIcon />\n        </Flex>\n      </UserMenuItem>\n    </UIKitUserMenu>\n  )\n}\n\nexport default UserMenu\n","import React from 'react'\nimport { languageList } from 'config/localization/languages'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useProfile } from 'state/profile/hooks'\nimport config from './config'\nimport UserMenu from './UserMenu'\nimport { Menu as UikitMenu } from './UikitMenu'\n\nconst Menu = (props) => {\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n  const { profile } = useProfile()\n  const { currentLanguage, setLanguage, t } = useTranslation()\n\n  return (\n    <UikitMenu\n      userMenu={<UserMenu />}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={currentLanguage.code}\n      langs={languageList}\n      setLang={setLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      links={config(t)}\n      profile={{\n        username: profile?.username,\n        image: profile?.nft ? `/images/nfts/${profile.nft?.images.sm}` : undefined,\n        profileLink: '/profile',\n        noProfileLink: '/profile',\n        showPip: !profile?.username,\n      }}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React, { Suspense, SuspenseProps } from 'react'\n\ninterface State {\n  hasError: boolean\n}\n\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error) {\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\n\n    // Save a flag on the window object indicating that we have already had a chunk error.\n    // This prevents infinite reloads\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\n\n    // If was a chunk load error, refresh the page\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\n      window.history.replaceState(nextState, '')\n      window.location.reload()\n      return\n    }\n\n    throw error\n  }\n\n  render() {\n    const { hasError } = this.state\n    const { fallback } = this.props\n\n    if (hasError) {\n      return fallback\n    }\n\n    return <Suspense {...this.props} />\n  }\n}\n\nexport default SuspenseWithChunkError\n","import React from 'react'\nimport styled from 'styled-components'\n// import { Spinner } from '@pancakeswap/uikit'\nimport Page from '../Layout/Page'\nimport SpinnerLoading from '../icons/SpinnerLoading'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <SpinnerLoading />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import React, { useState, useCallback } from 'react'\nimport { FallingBunnies, FallingBunniesProps, useKonamiCheatCode } from '@pancakeswap/uikit'\n\nconst EasterEgg: React.FC<FallingBunniesProps> = (props) => {\n  const [show, setShow] = useState(false)\n  const startFalling = useCallback(() => setShow(true), [setShow])\n  useKonamiCheatCode(startFalling)\n\n  if (show) {\n    return (\n      <div onAnimationEnd={() => setShow(false)}>\n        <FallingBunnies {...props} />\n      </div>\n    )\n  }\n  return null\n}\n\nexport default React.memo(EasterEgg)\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from 'hooks/useRefresh'\nimport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  fetchPoolsStakingLimitsAsync,\n} from '.'\nimport { State, Pool } from '../types'\nimport { transformPool } from './helpers'\n\nexport const useFetchPublicPoolsData = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchPoolsPublicData = async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\n    }\n\n    fetchPoolsPublicData()\n    dispatch(fetchPoolsStakingLimitsAsync())\n  }, [dispatch, slowRefresh])\n}\n\nexport const usePools = (account): { pools: Pool[]; userDataLoaded: boolean } => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const { pools, userDataLoaded } = useSelector((state: State) => ({\n    pools: state.pools.data,\n    userDataLoaded: state.pools.userDataLoaded,\n  }))\n  return { pools: pools.map(transformPool), userDataLoaded }\n}\n\nexport const useFetchCakeVault = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultPublicData())\n  }, [dispatch, fastRefresh])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultUserData({ account }))\n  }, [dispatch, fastRefresh, account])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultFees())\n  }, [dispatch])\n}\n\nexport const useCakeVault = () => {\n  const {\n    totalShares: totalSharesAsString,\n    pricePerFullShare: pricePerFullShareAsString,\n    totalCakeInVault: totalCakeInVaultAsString,\n    estimatedCakeBountyReward: estimatedCakeBountyRewardAsString,\n    totalPendingCakeHarvest: totalPendingCakeHarvestAsString,\n    fees: { performanceFee, callFee, withdrawalFee, withdrawalFeePeriod },\n    userData: {\n      isLoading,\n      userShares: userSharesAsString,\n      cakeAtLastUserAction: cakeAtLastUserActionAsString,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  } = useSelector((state: State) => state.pools.cakeVault)\n\n  const estimatedCakeBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyRewardAsString)\n  }, [estimatedCakeBountyRewardAsString])\n\n  const totalPendingCakeHarvest = useMemo(() => {\n    return new BigNumber(totalPendingCakeHarvestAsString)\n  }, [totalPendingCakeHarvestAsString])\n\n  const totalShares = useMemo(() => {\n    return new BigNumber(totalSharesAsString)\n  }, [totalSharesAsString])\n\n  const pricePerFullShare = useMemo(() => {\n    return new BigNumber(pricePerFullShareAsString)\n  }, [pricePerFullShareAsString])\n\n  const totalCakeInVault = useMemo(() => {\n    return new BigNumber(totalCakeInVaultAsString)\n  }, [totalCakeInVaultAsString])\n\n  const userShares = useMemo(() => {\n    return new BigNumber(userSharesAsString)\n  }, [userSharesAsString])\n\n  const cakeAtLastUserAction = useMemo(() => {\n    return new BigNumber(cakeAtLastUserActionAsString)\n  }, [cakeAtLastUserActionAsString])\n\n  return {\n    totalShares,\n    pricePerFullShare,\n    totalCakeInVault,\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: {\n      performanceFee,\n      callFee,\n      withdrawalFee,\n      withdrawalFeePeriod,\n    },\n    userData: {\n      isLoading,\n      userShares,\n      cakeAtLastUserAction,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  }\n}\n","import React, { useState, useMemo } from 'react'\nimport { Input, Image } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport debounce from 'lodash/debounce'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledInput = styled(Input)`\n  border-radius: 16px;\n  margin-left: auto;\n  background-color: #fff;\n  border: none;\n  padding-left: 28px;\n  width: 165px;\n  &::-webkit-input-placeholder {\n    color: #a6a6b7;\n  }\n  &:focus:not(:disabled) {\n    box-shadow: none;\n  }\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: block;\n  }\n`\n\nconst StyledImage = styled(Image)`\n  position: absolute;\n  top: 12px;\n  left: 8px;\n`\n\ninterface Props {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  placeholder?: string\n}\n\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback, placeholder = 'Search' }) => {\n  const [searchText, setSearchText] = useState('')\n\n  const { t } = useTranslation()\n\n  const debouncedOnChange = useMemo(\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\n    [onChangeCallback],\n  )\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value)\n    debouncedOnChange(e)\n  }\n\n  return (\n    <InputWrapper>\n      <StyledImage src=\"/images/pools/pools-search.png\" alt=\"\" width={16} height={16} />\n      <StyledInput value={searchText} onChange={onChange} placeholder={t(placeholder)} />\n    </InputWrapper>\n  )\n}\n\nexport default SearchInput\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport { Pool } from 'state/types'\nimport { getAprData } from 'views/Pools/helpers'\nimport { getAddress } from 'utils/addressHelpers'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nconst ApyLabelContainer = styled(Flex)`\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.5;\n  }\n`\n\ninterface AprRowProps {\n  pool: Pool\n  stakedBalance: BigNumber\n  performanceFee?: number\n}\n\nconst AprRow: React.FC<AprRowProps> = ({ pool, stakedBalance, performanceFee = 0 }) => {\n  const { t } = useTranslation()\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, stakingTokenPrice, userData, isAutoVault } =\n    pool\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const tooltipContent = isAutoVault\n    ? t('APY includes compounding, APR doesn’t. This pool’s CAKE is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n\n  const { apr: earningsPercentageToDisplay, autoCompoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <RoiCalculatorModal\n      earningTokenPrice={earningTokenPrice}\n      stakingTokenPrice={stakingTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      stakingTokenBalance={stakedBalance.plus(stakingTokenBalance)}\n      stakingTokenSymbol={stakingToken.symbol}\n      earningTokenSymbol={earningToken.symbol}\n      autoCompoundFrequency={autoCompoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\n      {isFinished || !apr ? (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      ) : (\n        <ApyLabelContainer alignItems=\"center\" onClick={onPresentApyModal}>\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n            onClick={onPresentApyModal}\n          />\n          <IconButton variant=\"text\" scale=\"sm\">\n            <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n          </IconButton>\n        </ApyLabelContainer>\n      )}\n    </Flex>\n  )\n}\n\nexport default AprRow\n","import styled from 'styled-components'\nimport { Card } from '@pancakeswap/uikit'\n\nexport const StyledCard = styled(Card)<{ isFinished?: boolean }>`\n  max-width: 352px;\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 46px;\n  }\n`\n\nexport default StyledCard\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  Flex,\n  MetamaskIcon,\n  Text,\n  TooltipText,\n  LinkExternal,\n  TimerIcon,\n  Skeleton,\n  useTooltip,\n  Button,\n  Link,\n  HelpIcon,\n} from '@pancakeswap/uikit'\nimport { BASE_BROWSER_URLS, BASE_BSC_SCAN_URL } from 'config'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBscScanLink } from 'utils'\nimport Balance from 'components/Balance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\n\ninterface ExpandedFooterProps {\n  pool: Pool\n  account: string\n}\n\nconst ExpandedWrapper = styled(Flex)`\n  svg {\n    height: 14px;\n    width: 14px;\n  }\n`\n\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const {\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    sousId,\n    isAutoVault,\n  } = pool\n\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const isManualCakePool = sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  return (\n    <ExpandedWrapper flexDirection=\"column\">\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text small>{t('Total staked')}:</Text>\n        <Flex alignItems=\"flex-start\">\n          {totalStaked && totalStaked.gte(0) ? (\n            <>\n              <Balance small value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n              <span ref={totalStakedTargetRef}>\n                <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" mt=\"4px\" />\n              </span>\n            </>\n          ) : (\n            <Skeleton width=\"90px\" height=\"21px\" />\n          )}\n          {totalStakedTooltipVisible && totalStakedTooltip}\n        </Flex>\n      </Flex>\n      {stakingLimit && stakingLimit.gt(0) && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\">\n          <Text small>{t('Max. stake per user')}:</Text>\n          <Text small>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n        </Flex>\n      )}\n      {shouldShowBlockCountdown && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Text small>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\n          {blocksRemaining || blocksUntilStart ? (\n            <Flex alignItems=\"center\">\n              <Link external href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}>\n                <Balance small value={blocksToDisplay} decimals={0} color=\"primary\" />\n                <Text small ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\n                  {t('Blocks')}\n                </Text>\n                <TimerIcon ml=\"4px\" color=\"primary\" />\n              </Link>\n            </Flex>\n          ) : (\n            <Skeleton width=\"54px\" height=\"21px\" />\n          )}\n        </Flex>\n      )}\n      {isAutoVault && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          {tooltipVisible && tooltip}\n          <TooltipText ref={targetRef} small>\n            {t('Performance Fee')}\n          </TooltipText>\n          <Flex alignItems=\"center\">\n            <Text ml=\"4px\" small>\n              {performanceFee / 100}%\n            </Text>\n          </Flex>\n        </Flex>\n      )}\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={`https://pancakeswap.info/token/${getAddress(earningToken.address)}`} bold={false} small>\n          {t('See Token Info')}\n        </LinkExternal>\n      </Flex>\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={earningToken.projectLink} bold={false} small>\n          {t('View Project Site')}\n        </LinkExternal>\n      </Flex>\n      {poolContractAddress && (\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\n          <LinkExternal\n            href={`${BASE_BROWSER_URLS}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n            bold={false}\n            small\n          >\n            {t('View Contract')}\n          </LinkExternal>\n        </Flex>\n      )}\n      {account && isMetaMaskInScope && tokenAddress && (\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            p=\"0\"\n            height=\"auto\"\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n          >\n            <Text color=\"primary\" fontSize=\"14px\">\n              {t('Add to Metamask')}\n            </Text>\n            <MetamaskIcon ml=\"4px\" />\n          </Button>\n        </Flex>\n      )}\n    </ExpandedWrapper>\n  )\n}\n\nexport default React.memo(ExpandedFooter)\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport ExpandedFooter from './ExpandedFooter'\n\ninterface FooterProps {\n  pool: Pool\n  account: string\n  totalCakeInVault?: BigNumber\n}\n\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`\n\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\n  const { isAutoVault } = pool\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom',\n  })\n\n  return (\n    <CardFooter>\n      <ExpandableButtonWrapper>\n        <Flex alignItems=\"center\">\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n          {tooltipVisible && tooltip}\n          <Flex ref={targetRef}>\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n          </Flex>\n        </Flex>\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </ExpandableButtonWrapper>\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\n    </CardFooter>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { TokenPairImage, ImageProps, Image } from '@pancakeswap/uikit'\nimport tokens from 'config/constants/tokens'\nimport { getAddress } from 'utils/addressHelpers'\n\nconst CakeVaultTokenPairImage: React.FC<Omit<ImageProps, 'src'>> = (props) => {\n  const primaryTokenSrc = `/images/tokens/${getAddress(tokens.usdt.address)}.svg`\n\n  return <Image {...props} src=\"/images/tokens/autorenew.svg\" />\n  return <TokenPairImage primarySrc={primaryTokenSrc} secondarySrc=\"/images/tokens/autorenew.svg\" {...props} />\n}\n\nexport default CakeVaultTokenPairImage\n","import React from 'react'\nimport { CardHeader, Heading, Text, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Token } from 'config/constants/types'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../CakeVaultCard/CakeVaultTokenPairImage'\n\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\n  background: ${({ isFinished, background, theme }) =>\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n`\n\nconst StyledCardHeader: React.FC<{\n  earningToken: Token\n  stakingToken: Token\n  isAutoVault?: boolean\n  isFinished?: boolean\n  isStaking?: boolean\n}> = ({ earningToken, stakingToken, isFinished = false, isAutoVault = false, isStaking = false }) => {\n  const { t } = useTranslation()\n  const isCakePool = earningToken.symbol === 'CAKE' && stakingToken.symbol === 'CAKE'\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\n\n  const getHeadingPrefix = () => {\n    if (isAutoVault) {\n      // vault\n      return t('Auto')\n    }\n    if (isCakePool) {\n      // manual cake\n      return t('Manual')\n    }\n    // all other pools\n    return t('Earn')\n  }\n\n  const getSubHeading = () => {\n    if (isAutoVault) {\n      return t('Automatic restaking')\n    }\n    if (isCakePool) {\n      return t('Earn CAKE, stake CAKE')\n    }\n    return t('Stake %symbol%', { symbol: stakingToken.symbol })\n  }\n\n  return (\n    <Wrapper isFinished={isFinished} background={background}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Flex flexDirection=\"column\">\n          <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"lg\">\n            {`${getHeadingPrefix()} ${earningToken.symbol}`}\n          </Heading>\n          <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\n        </Flex>\n        {isAutoVault ? (\n          <CakeVaultTokenPairImage width={64} height={64} />\n        ) : (\n          <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} width={64} height={64} />\n        )}\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default StyledCardHeader\n","import { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers, Contract } from 'ethers'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance } from 'state/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useSousChef, useCakeVaultContract } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport useLastUpdated from 'hooks/useLastUpdated'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\n\nexport const useApprovePool = (lpContract: Contract, sousId, earningTokenSymbol) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const tx = await callWithGasPrice(lpContract, 'approve', [sousChefContract.address, ethers.constants.MaxUint256])\n      const receipt = await tx.wait()\n\n      dispatch(updateUserAllowance(sousId, account))\n      if (receipt.status) {\n        toastSuccess(\n          t('Contract Enabled'),\n          t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol }),\n        )\n        setRequestedApproval(false)\n      } else {\n        // user rejected tx or didn't go thru\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n    }\n  }, [\n    account,\n    dispatch,\n    lpContract,\n    sousChefContract,\n    sousId,\n    earningTokenSymbol,\n    t,\n    toastError,\n    toastSuccess,\n    callWithGasPrice,\n  ])\n\n  return { handleApprove, requestedApproval }\n}\n\n// Approve CAKE auto pool\nexport const useVaultApprove = (setLastUpdated: () => void) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { t } = useTranslation()\n  const { toastSuccess, toastError } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const cakeContract = useCake()\n\n  const handleApprove = async () => {\n    const tx = await callWithGasPrice(cakeContract, 'approve', [cakeVaultContract.address, ethers.constants.MaxUint256])\n    setRequestedApproval(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      toastSuccess(t('Contract Enabled'), t('You can now stake in the %symbol% vault!', { symbol: 'CAKE' }))\n      setLastUpdated()\n      setRequestedApproval(false)\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setRequestedApproval(false)\n    }\n  }\n\n  return { handleApprove, requestedApproval }\n}\n\nexport const useCheckVaultApprovalStatus = () => {\n  const [isVaultApproved, setIsVaultApproved] = useState(false)\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const cakeVaultContract = useCakeVaultContract()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      try {\n        const response = await cakeContract.allowance(account, cakeVaultContract.address)\n        const currentAllowance = new BigNumber(response.toString())\n        setIsVaultApproved(currentAllowance.gt(0))\n      } catch (error) {\n        setIsVaultApproved(false)\n      }\n    }\n\n    checkApprovalStatus()\n  }, [account, cakeContract, cakeVaultContract, lastUpdated])\n\n  return { isVaultApproved, setLastUpdated }\n}\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { getAddress } from 'utils/addressHelpers'\nimport { Pool } from 'state/types'\nimport { useApprovePool } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  pool: Pool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\n\ninterface NotEnoughTokensModalProps {\n  tokenSymbol: string\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Modal\n      title={t('%symbol% required', { symbol: tokenSymbol })}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Text color=\"failure\" bold>\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\n      </Text>\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\n      <Text>\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\n          symbol: tokenSymbol,\n        })}\n      </Text>\n      <Button mt=\"24px\" as=\"a\" external href=\"/swap\">\n        {t('Buy')} {tokenSymbol}\n      </Button>\n      <StyledLink href=\"https://yieldwatch.net\" external>\n        <Button variant=\"secondary\" mt=\"8px\" width=\"100%\">\n          {t('Locate Assets')}\n          <OpenNewIcon color=\"primary\" ml=\"4px\" />\n        </Button>\n      </StyledLink>\n      <Button variant=\"text\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default NotEnoughTokensModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap/uikit'\n\ninterface PercentageButtonProps {\n  onClick: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\n  return (\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default PercentageButton\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stakeFarm } from 'utils/calls'\nimport BigNumber from 'bignumber.js'\nimport { DEFAULT_TOKEN_DECIMAL, DEFAULT_GAS_LIMIT } from 'config'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport getGasPrice from 'utils/getGasPrice'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst sousStake = async (sousChefContract, amount, decimals = 18) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString(), {\n    ...options,\n    gasPrice,\n  })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousStakeBnb = async (sousChefContract, amount) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString(), {\n    ...options,\n    gasPrice,\n  })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useStakePool = (sousId: number, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await stakeFarm(masterChefContract, 0, amount)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount)\n      } else {\n        await sousStake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStakePool\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { unstakeFarm } from 'utils/calls'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport getGasPrice from 'utils/getGasPrice'\n\nconst sousUnstake = async (sousChefContract, amount, decimals) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.withdraw(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString(), {\n    gasPrice,\n  })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousEmergencyUnstake = async (sousChefContract) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.emergencyWithdraw({ gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useUnstakePool = (sousId, enableEmergencyWithdraw = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await unstakeFarm(masterChefContract, 0, amount)\n      } else if (enableEmergencyWithdraw) {\n        await sousEmergencyUnstake(sousChefContract)\n      } else {\n        await sousUnstake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstakePool\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport {\n  Modal,\n  Text,\n  Flex,\n  Image,\n  Button,\n  Slider,\n  BalanceInput,\n  AutoRenewIcon,\n  Link,\n  CalculateIcon,\n  IconButton,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getInterestBreakdown } from 'utils/compoundApyHelpers'\nimport PercentageButton from './PercentageButton'\nimport useStakePool from '../../../hooks/useStakePool'\nimport useUnstakePool from '../../../hooks/useUnstakePool'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst AnnualRoiContainer = styled(Flex)`\n  cursor: pointer;\n`\n\nconst AnnualRoiDisplay = styled(Text)`\n  width: 72px;\n  max-width: 72px;\n  overflow: hidden;\n  text-align: right;\n  text-overflow: ellipsis;\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, earningTokenPrice, apr, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const [showRoiCalculator, setShowRoiCalculator] = useState(false)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n\n  const usdValueStaked = new BigNumber(stakeAmount).times(stakingTokenPrice)\n  const formattedUsdValueStaked = !usdValueStaked.isNaN() && formatNumber(usdValueStaked.toNumber())\n\n  const interestBreakdown = getInterestBreakdown({\n    principalInUSD: !usdValueStaked.isNaN() ? usdValueStaked.toNumber() : 0,\n    apr,\n    earningTokenPrice,\n  })\n  const annualRoi = interestBreakdown[3] * pool.earningTokenPrice\n  const formattedAnnualRoi = formatNumber(annualRoi, annualRoi > 10000 ? 0 : 2, annualRoi > 10000 ? 0 : 2)\n\n  const getTokenLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, setHasReachedStakedLimit])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n\n    if (isRemovingStake) {\n      // unstaking\n      try {\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      try {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% funds have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  if (showRoiCalculator) {\n    return (\n      <RoiCalculatorModal\n        earningTokenPrice={earningTokenPrice}\n        stakingTokenPrice={stakingTokenPrice}\n        apr={apr}\n        linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n        linkHref={getTokenLink}\n        stakingTokenBalance={userData.stakedBalance.plus(stakingTokenBalance)}\n        stakingTokenSymbol={stakingToken.symbol}\n        earningTokenSymbol={earningToken.symbol}\n        onBack={() => setShowRoiCalculator(false)}\n        initialValue={stakeAmount}\n      />\n    )\n  }\n\n  return (\n    <Modal\n      minWidth=\"346px\"\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${formattedUsdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit}\n        decimals={stakingToken.decimals}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </Flex>\n      {!isRemovingStake && (\n        <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n          <Text mr=\"8px\" color=\"textSubtle\">\n            {t('Annual ROI at current rates')}:\n          </Text>\n          <AnnualRoiContainer alignItems=\"center\" onClick={() => setShowRoiCalculator(true)}>\n            <AnnualRoiDisplay>${formattedAnnualRoi}</AnnualRoiDisplay>\n            <IconButton variant=\"text\" scale=\"sm\">\n              <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n            </IconButton>\n          </AnnualRoiContainer>\n        </Flex>\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href={getTokenLink}>\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default StakeModal\n","import React from 'react'\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\nimport StakeModal from '../Modals/StakeModal'\n\ninterface StakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { harvestFarm } from 'utils/calls'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport getGasPrice from 'utils/getGasPrice'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport { DEFAULT_GAS_LIMIT } from 'config'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst harvestPool = async (sousChefContract) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.deposit('0', { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst harvestPoolBnb = async (sousChefContract) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.deposit({ ...options, value: BIG_ZERO, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useHarvestPool = (sousId, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvestFarm(masterChefContract, 0)\n    } else if (isUsingBnb) {\n      await harvestPoolBnb(sousChefContract)\n    } else {\n      await harvestPool(sousChefContract)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n\nexport default useHarvestPool\n","import React, { useState } from 'react'\nimport {\n  Modal,\n  Text,\n  Button,\n  Heading,\n  Flex,\n  AutoRenewIcon,\n  ButtonMenu,\n  ButtonMenuItem,\n  HelpIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { Token } from 'config/constants/types'\nimport { formatNumber } from 'utils/formatBalance'\nimport useHarvestPool from '../../../hooks/useHarvestPool'\nimport useStakePool from '../../../hooks/useStakePool'\n\ninterface CollectModalProps {\n  formattedBalance: string\n  fullBalance: string\n  earningToken: Token\n  earningsDollarValue: number\n  sousId: number\n  isBnbPool: boolean\n  isCompoundPool?: boolean\n  onDismiss?: () => void\n}\n\nconst CollectModal: React.FC<CollectModalProps> = ({\n  formattedBalance,\n  fullBalance,\n  earningToken,\n  earningsDollarValue,\n  sousId,\n  isBnbPool,\n  isCompoundPool = false,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const { onReward } = useHarvestPool(sousId, isBnbPool)\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text mb=\"12px\">{t('Compound: collect and restake CAKE into pool.')}</Text>\n      <Text>{t('Harvest: collect CAKE and send to wallet')}</Text>\n    </>,\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\n  )\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    // compounding\n    if (shouldCompound) {\n      try {\n        await onStake(fullBalance, earningToken.decimals)\n        toastSuccess(\n          `${t('Compounded')}!`,\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    } else {\n      // harvesting\n      try {\n        await onReward()\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {isCompoundPool && (\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\n          <ButtonMenu\n            activeIndex={shouldCompound ? 0 : 1}\n            scale=\"sm\"\n            variant=\"subtle\"\n            onItemClick={(index) => setShouldCompound(!index)}\n          >\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\n          </ButtonMenu>\n          <Flex ml=\"10px\" ref={targetRef}>\n            <HelpIcon color=\"textSubtle\" />\n          </Flex>\n          {tooltipVisible && tooltip}\n        </Flex>\n      )}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading>\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          {earningsDollarValue > 0 && (\n            <Text fontSize=\"12px\" color=\"textSubtle\">{`~${formatNumber(earningsDollarValue)} USD`}</Text>\n          )}\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../Modals/CollectModal'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\n      <Flex flexDirection=\"column\">\n        {isLoading ? (\n          <Skeleton width=\"80px\" height=\"48px\" />\n        ) : (\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        )}\n      </Flex>\n      <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n        {isCompoundPool ? t('Collect') : t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: Pool\n  stakedBalance: BigNumber\n}\n\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t('Earned')}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={earningTokenPrice}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport { CardBody, Flex, Text, CardRibbon } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\nimport AprRow from './AprRow'\nimport { StyledCard } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport StyledCardHeader from './StyledCardHeader'\nimport CardActions from './CardActions'\n\nconst PoolCard: React.FC<{ pool: Pool; account: string }> = ({ pool, account }) => {\n  const { sousId, stakingToken, earningToken, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n\n  return (\n    <StyledCard\n      isFinished={isFinished && sousId !== 0}\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    >\n      <StyledCardHeader\n        isStaking={accountHasStakedBalance}\n        earningToken={earningToken}\n        stakingToken={stakingToken}\n        isFinished={isFinished && sousId !== 0}\n      />\n      <CardBody>\n        <AprRow pool={pool} stakedBalance={stakedBalance} />\n        <Flex mt=\"24px\" flexDirection=\"column\">\n          {account ? (\n            <CardActions pool={pool} stakedBalance={stakedBalance} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </CardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default PoolCard\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useVaultApprove } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  setLastUpdated: () => void\n  isLoading?: boolean\n}\n\nconst VaultApprovalAction: React.FC<ApprovalActionProps> = ({ isLoading = false, setLastUpdated }) => {\n  const { t } = useTranslation()\n\n  const { handleApprove, requestedApproval } = useVaultApprove(setLastUpdated)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default VaultApprovalAction\n","import BigNumber from 'bignumber.js'\nimport { useEffect, useState } from 'react'\n\nconst useWithdrawalFeeTimer = (lastDepositedTime: number, userShares: BigNumber, withdrawalFeePeriod = 259200) => {\n  const [secondsRemaining, setSecondsRemaining] = useState(null)\n  const [hasUnstakingFee, setHasUnstakingFee] = useState(false)\n  const [currentSeconds, setCurrentSeconds] = useState(Math.floor(Date.now() / 1000))\n\n  useEffect(() => {\n    const feeEndTime = lastDepositedTime + withdrawalFeePeriod\n    const secondsRemainingCalc = feeEndTime - currentSeconds\n    const doesUnstakingFeeApply = userShares.gt(0) && secondsRemainingCalc > 0\n\n    const tick = () => {\n      setCurrentSeconds((prevSeconds) => prevSeconds + 1)\n    }\n    const timerInterval = setInterval(() => tick(), 1000)\n    if (doesUnstakingFeeApply) {\n      setSecondsRemaining(secondsRemainingCalc)\n      setHasUnstakingFee(true)\n    } else {\n      setHasUnstakingFee(false)\n      clearInterval(timerInterval)\n    }\n\n    return () => clearInterval(timerInterval)\n  }, [lastDepositedTime, withdrawalFeePeriod, setSecondsRemaining, currentSeconds, userShares])\n\n  return { hasUnstakingFee, secondsRemaining }\n}\n\nexport default useWithdrawalFeeTimer\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport { useTranslation } from 'contexts/Localization'\n\nconst WithdrawalFeeTimer: React.FC<{ secondsRemaining: number }> = ({ secondsRemaining }) => {\n  const { t } = useTranslation()\n  const { days, hours, minutes } = getTimePeriods(secondsRemaining)\n\n  return <Text fontSize=\"14px\">{t('%day%d : %hour%h : %minute%m', { day: days, hour: hours, minute: minutes })}</Text>\n}\n\nexport default WithdrawalFeeTimer\n","import React from 'react'\nimport { Flex, Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport { useCakeVault } from 'state/pools/hooks'\nimport WithdrawalFeeTimer from './WithdrawalFeeTimer'\n\ninterface UnstakingFeeCountdownRowProps {\n  isTableVariant?: boolean\n}\n\nconst UnstakingFeeCountdownRow: React.FC<UnstakingFeeCountdownRowProps> = ({ isTableVariant }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { lastDepositedTime, userShares },\n    fees: { withdrawalFee, withdrawalFeePeriod },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100 || '-'\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new CAKE in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'bottom-start' },\n  )\n\n  const { secondsRemaining, hasUnstakingFee } = useWithdrawalFeeTimer(\n    parseInt(lastDepositedTime, 10),\n    userShares,\n    withdrawalFeePeriod,\n  )\n\n  // The user has made a deposit, but has no fee\n  const noFeeToPay = lastDepositedTime && !hasUnstakingFee && userShares.gt(0)\n\n  // Show the timer if a user is connected, has deposited, and has an unstaking fee\n  const shouldShowTimer = account && lastDepositedTime && hasUnstakingFee\n\n  const getRowText = () => {\n    if (noFeeToPay) {\n      return t('Unstaking Fee').toLowerCase()\n    }\n    if (shouldShowTimer) {\n      return t('unstaking fee until')\n    }\n    return t('unstaking fee if withdrawn within 72h')\n  }\n\n  return (\n    <Flex\n      alignItems={isTableVariant ? 'flex-start' : 'center'}\n      justifyContent=\"space-between\"\n      flexDirection={isTableVariant ? 'column' : 'row'}\n    >\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small style={{ color: '#261977' }}>\n        {noFeeToPay ? '0' : feeAsDecimal}% {getRowText()}\n      </TooltipText>\n      {shouldShowTimer && <WithdrawalFeeTimer secondsRemaining={secondsRemaining} />}\n    </Flex>\n  )\n}\n\nexport default UnstakingFeeCountdownRow\n","import React from 'react'\nimport { Text, Flex, useTooltip, TooltipText } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools/hooks'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\n\ninterface FeeSummaryProps {\n  stakingTokenSymbol: string\n  stakeAmount: string\n}\n\nconst FeeSummary: React.FC<FeeSummaryProps> = ({ stakingTokenSymbol, stakeAmount }) => {\n  const { t } = useTranslation()\n  const {\n    fees: { withdrawalFee },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100\n  const feeInCake = (parseFloat(stakeAmount) * (feeAsDecimal / 100)).toFixed(4)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new CAKE in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'top-start' },\n  )\n\n  return (\n    <>\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n        {tooltipVisible && tooltip}\n        <TooltipText ref={targetRef} small>\n          {t('Unstaking Fee')}\n        </TooltipText>\n        <Text fontSize=\"14px\">\n          {stakeAmount ? feeInCake : '-'} {stakingTokenSymbol}\n        </Text>\n      </Flex>\n      <UnstakingFeeCountdownRow />\n    </>\n  )\n}\n\nexport default FeeSummary\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport {\n  Modal,\n  Text,\n  Flex,\n  Image,\n  Button,\n  Slider,\n  BalanceInput,\n  AutoRenewIcon,\n  CalculateIcon,\n  IconButton,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\nimport { fetchCakeVaultUserData } from 'state/pools'\nimport { Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getInterestBreakdown } from 'utils/compoundApyHelpers'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport { convertCakeToShares, convertSharesToCake } from '../../helpers'\nimport FeeSummary from './FeeSummary'\n\ninterface VaultStakeModalProps {\n  pool: Pool\n  stakingMax: BigNumber\n  performanceFee?: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst AnnualRoiContainer = styled(Flex)`\n  cursor: pointer;\n`\n\nconst AnnualRoiDisplay = styled(Text)`\n  width: 72px;\n  max-width: 72px;\n  overflow: hidden;\n  text-align: right;\n  text-overflow: ellipsis;\n`\n\nconst callOptions = {\n  gasLimit: 380000,\n}\n\nconst VaultStakeModal: React.FC<VaultStakeModalProps> = ({\n  pool,\n  stakingMax,\n  performanceFee,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const dispatch = useAppDispatch()\n  const { stakingToken, earningToken, apr, stakingTokenPrice, earningTokenPrice } = pool\n  const { account } = useWeb3React()\n  const cakeVaultContract = useCakeVaultContract()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const {\n    userData: { lastDepositedTime, userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [percent, setPercent] = useState(0)\n  const [showRoiCalculator, setShowRoiCalculator] = useState(false)\n  const { hasUnstakingFee } = useWithdrawalFeeTimer(parseInt(lastDepositedTime, 10), userShares)\n  const cakePriceBusd = usePriceCakeBusd()\n  const usdValueStaked = new BigNumber(stakeAmount).times(cakePriceBusd)\n  const formattedUsdValueStaked = cakePriceBusd.gt(0) && stakeAmount ? formatNumber(usdValueStaked.toNumber()) : ''\n\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n\n  const interestBreakdown = getInterestBreakdown({\n    principalInUSD: !usdValueStaked.isNaN() ? usdValueStaked.toNumber() : 0,\n    apr,\n    earningTokenPrice,\n    performanceFee,\n  })\n  const annualRoi = interestBreakdown[3] * pool.earningTokenPrice\n  const formattedAnnualRoi = formatNumber(annualRoi, annualRoi > 10000 ? 0 : 2, annualRoi > 10000 ? 0 : 2)\n\n  const getTokenLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = new BigNumber(input).multipliedBy(BIG_TEN.pow(stakingToken.decimals))\n      const percentage = Math.floor(convertedInput.dividedBy(stakingMax).multipliedBy(100).toNumber())\n      setPercent(percentage > 100 ? 100 : percentage)\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = stakingMax.dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleWithdrawal = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    const shareStakeToWithdraw = convertCakeToShares(convertedStakeAmount, pricePerFullShare)\n    // trigger withdrawAll function if the withdrawal will leave 0.000001 CAKE or less\n    const triggerWithdrawAllThreshold = new BigNumber(1000000000000)\n    const sharesRemaining = userShares.minus(shareStakeToWithdraw.sharesAsBigNumber)\n    const isWithdrawingAll = sharesRemaining.lte(triggerWithdrawAllThreshold)\n\n    if (isWithdrawingAll) {\n      try {\n        const tx = await callWithGasPrice(cakeVaultContract, 'withdrawAll', undefined, callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      try {\n        const tx = await callWithGasPrice(\n          cakeVaultContract,\n          'withdraw',\n          [shareStakeToWithdraw.sharesAsBigNumber.toString()],\n          callOptions,\n        )\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  const handleDeposit = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    try {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      const tx = await callWithGasPrice(cakeVaultContract, 'deposit', [convertedStakeAmount.toString()], callOptions)\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(t('Staked!'), t('Your funds have been staked in the pool'))\n        setPendingTx(false)\n        onDismiss()\n        dispatch(fetchCakeVaultUserData({ account }))\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  const handleConfirmClick = async () => {\n    const convertedStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n    if (isRemovingStake) {\n      // unstaking\n      handleWithdrawal(convertedStakeAmount)\n    } else {\n      // staking\n      handleDeposit(convertedStakeAmount)\n    }\n  }\n\n  if (showRoiCalculator) {\n    return (\n      <RoiCalculatorModal\n        earningTokenPrice={earningTokenPrice}\n        stakingTokenPrice={stakingTokenPrice}\n        apr={apr}\n        linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n        linkHref={getTokenLink}\n        stakingTokenBalance={cakeAsBigNumber.plus(stakingMax)}\n        stakingTokenSymbol={stakingToken.symbol}\n        earningTokenSymbol={earningToken.symbol}\n        onBack={() => setShowRoiCalculator(false)}\n        initialValue={stakeAmount}\n        performanceFee={performanceFee}\n      />\n    )\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={cakePriceBusd.gt(0) && `~${formattedUsdValueStaked || 0} USD`}\n        decimals={stakingToken.decimals}\n      />\n      <Text mt=\"8px\" ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', { balance: getFullDisplayBalance(stakingMax, stakingToken.decimals) })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(25)}>\n          25%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(50)}>\n          50%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(75)}>\n          75%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(100)}>\n          {t('Max')}\n        </StyledButton>\n      </Flex>\n      {isRemovingStake && hasUnstakingFee && (\n        <FeeSummary stakingTokenSymbol={stakingToken.symbol} stakeAmount={stakeAmount} />\n      )}\n      {!isRemovingStake && (\n        <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n          <Text mr=\"8px\" color=\"textSubtle\">\n            {t('Annual ROI at current rates')}:\n          </Text>\n          <AnnualRoiContainer alignItems=\"center\" onClick={() => setShowRoiCalculator(true)}>\n            <AnnualRoiDisplay>${formattedAnnualRoi}</AnnualRoiDisplay>\n            <IconButton variant=\"text\" scale=\"sm\">\n              <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n            </IconButton>\n          </AnnualRoiContainer>\n        </Flex>\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <Button mt=\"8px\" as=\"a\" external href={getTokenLink} variant=\"secondary\">\n          {t('Get %symbol%', { symbol: stakingToken.symbol })}\n        </Button>\n      )}\n    </Modal>\n  )\n}\n\nexport default VaultStakeModal\n","import React from 'react'\nimport { Flex, Text, IconButton, AddIcon, MinusIcon, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport { convertSharesToCake } from '../../../helpers'\nimport VaultStakeModal from '../VaultStakeModal'\n\ninterface HasStakeActionProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  performanceFee: number\n}\n\nconst HasSharesActions: React.FC<HasStakeActionProps> = ({ pool, stakingTokenBalance, performanceFee }) => {\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { stakingToken } = pool\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const cakePriceBusd = usePriceCakeBusd()\n  const stakedDollarValue = cakePriceBusd.gt(0)\n    ? getBalanceNumber(cakeAsBigNumber.multipliedBy(cakePriceBusd), stakingToken.decimals)\n    : 0\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(\n    <VaultStakeModal stakingMax={stakingTokenBalance} performanceFee={performanceFee} pool={pool} />,\n  )\n  const [onPresentUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\">\n        <Balance fontSize=\"20px\" bold value={cakeAsNumberBalance} decimals={5} />\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          {cakePriceBusd.gt(0) ? (\n            <Balance value={stakedDollarValue} fontSize=\"12px\" color=\"textSubtle\" decimals={2} prefix=\"~\" unit=\" USD\" />\n          ) : (\n            <Skeleton mt=\"1px\" height={16} width={64} />\n          )}\n        </Text>\n      </Flex>\n      <Flex>\n        <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n        <IconButton variant=\"secondary\" onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n          <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n        </IconButton>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default HasSharesActions\n","import React from 'react'\nimport { Flex, Button, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport VaultStakeModal from '../VaultStakeModal'\nimport HasSharesActions from './HasSharesActions'\n\ninterface VaultStakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  accountHasSharesStaked: boolean\n  performanceFee: number\n  isLoading?: boolean\n}\n\nconst VaultStakeActions: React.FC<VaultStakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  accountHasSharesStaked,\n  performanceFee,\n  isLoading = false,\n}) => {\n  const { stakingToken } = pool\n  const { t } = useTranslation()\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(\n    <VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} performanceFee={performanceFee} />,\n  )\n\n  const renderStakeAction = () => {\n    return accountHasSharesStaked ? (\n      <HasSharesActions pool={pool} stakingTokenBalance={stakingTokenBalance} performanceFee={performanceFee} />\n    ) : (\n      <Button onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>{t('Stake')}</Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default VaultStakeActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport VaultApprovalAction from './VaultApprovalAction'\nimport VaultStakeActions from './VaultStakeActions'\nimport { useCheckVaultApprovalStatus } from '../../../hooks/useApprove'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\nconst CakeVaultCardActions: React.FC<{\n  pool: Pool\n  accountHasSharesStaked: boolean\n  isLoading: boolean\n  performanceFee: number\n}> = ({ pool, accountHasSharesStaked, isLoading, performanceFee }) => {\n  const { stakingToken, userData } = pool\n  const { t } = useTranslation()\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        <Box display=\"inline\">\n          <InlineText\n            color={accountHasSharesStaked ? 'secondary' : 'textSubtle'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText\n            color={accountHasSharesStaked ? 'textSubtle' : 'secondary'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? t('Staked (compounding)') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {isVaultApproved ? (\n          <VaultStakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            accountHasSharesStaked={accountHasSharesStaked}\n            performanceFee={performanceFee}\n          />\n        ) : (\n          <VaultApprovalAction isLoading={isLoading} setLastUpdated={setLastUpdated} />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CakeVaultCardActions\n","import React from 'react'\nimport { Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\n\ninterface RecentCakeProfitBalanceProps {\n  cakeToDisplay: number\n  dollarValueToDisplay: number\n  dateStringToDisplay: string\n}\n\nconst RecentCakeProfitBalance: React.FC<RecentCakeProfitBalanceProps> = ({\n  cakeToDisplay,\n  dollarValueToDisplay,\n  dateStringToDisplay,\n}) => {\n  const { t } = useTranslation()\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={cakeToDisplay} decimals={3} bold unit=\" CAKE\" />\n      <Balance fontSize=\"16px\" value={dollarValueToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    {\n      placement: 'bottom-end',\n    },\n  )\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        <Balance fontSize=\"14px\" value={cakeToDisplay} />\n      </TooltipText>\n    </>\n  )\n}\n\nexport default RecentCakeProfitBalance\n","import React from 'react'\nimport { Flex, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport RecentCakeProfitBalance from './RecentCakeProfitBalance'\n\nconst RecentCakeProfitCountdownRow = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    pricePerFullShare,\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    cakePriceBusd.toNumber(),\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Text fontSize=\"14px\">{`${t('Recent CAKE profit')}:`}</Text>\n      {hasAutoEarnings && (\n        <RecentCakeProfitBalance\n          cakeToDisplay={autoCakeToDisplay}\n          dollarValueToDisplay={autoUsdToDisplay}\n          dateStringToDisplay={dateStringToDisplay}\n        />\n      )}\n    </Flex>\n  )\n}\n\nexport default RecentCakeProfitCountdownRow\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box, CardBody, Flex, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport tokens from 'config/constants/tokens'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport AprRow from '../PoolCard/AprRow'\nimport { StyledCard } from '../PoolCard/StyledCard'\nimport CardFooter from '../PoolCard/CardFooter'\nimport StyledCardHeader from '../PoolCard/StyledCardHeader'\nimport VaultCardActions from './VaultCardActions'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\nimport RecentCakeProfitRow from './RecentCakeProfitRow'\n\nconst StyledCardBody = styled(CardBody)<{ isLoading: boolean }>`\n  min-height: ${({ isLoading }) => (isLoading ? '0' : '254px')};\n`\n\ninterface CakeVaultProps {\n  pool: Pool\n  showStakedOnly: boolean\n}\n\nconst CakeVaultCard: React.FC<CakeVaultProps> = ({ pool, showStakedOnly }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { userShares, isLoading: isVaultUserDataLoading },\n    fees: { performanceFee },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n\n  const accountHasSharesStaked = userShares && userShares.gt(0)\n  const isLoading = !pool.userData || isVaultUserDataLoading\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  if (showStakedOnly && !accountHasSharesStaked) {\n    return null\n  }\n\n  return (\n    <StyledCard isActive>\n      <StyledCardHeader\n        isStaking={accountHasSharesStaked}\n        isAutoVault\n        earningToken={tokens.usdt}\n        stakingToken={tokens.usdt}\n      />\n      <StyledCardBody isLoading={isLoading}>\n        <AprRow pool={pool} stakedBalance={cakeAsBigNumber} performanceFee={performanceFeeAsDecimal} />\n        <Box mt=\"24px\">\n          <RecentCakeProfitRow />\n        </Box>\n        <Box mt=\"8px\">\n          <UnstakingFeeCountdownRow />\n        </Box>\n        <Flex mt=\"32px\" flexDirection=\"column\">\n          {account ? (\n            <VaultCardActions\n              pool={pool}\n              accountHasSharesStaked={accountHasSharesStaked}\n              isLoading={isLoading}\n              performanceFee={performanceFeeAsDecimal}\n            />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </StyledCardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default CakeVaultCard\n","import React from 'react'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Select from 'components/Select/Select'\nimport ToggleView, { ViewMode } from './ToggleView/ToggleView'\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst RadioCom = styled.div`\n  display: block;\n  background: #fff;\n  border: 1px solid #f56020;\n  width: 16px;\n  height: 16px;\n  border-radius: 50%;\n  position: relative;\n  boxsizing: border-box;\n  .sel {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    background: #f56020;\n    width: 8px;\n    height: 8px;\n    border-radius: 50%;\n  }\n`\n\nconst PoolTabButtons = ({\n  stakedOnly,\n  setStakedOnly,\n  hasStakeInFinishedPools,\n  viewMode,\n  setViewMode,\n  handleSortOptionChange,\n}) => {\n  const { url, isExact } = useRouteMatch()\n  const { t } = useTranslation()\n\n  const viewModeToggle = <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\n\n  const stakedOnlySwitch = (\n    <ToggleWrapper>\n      <RadioCom onClick={() => setStakedOnly(!stakedOnly)}>{stakedOnly ? <div className=\"sel\" /> : null}</RadioCom>\n      <Text style={{ fontSize: '14px' }}> {t('Staked only')}</Text>\n      <Text style={{ margin: '0 10px 0 20px', fontSize: '14px' }}>{t('Sort by')}</Text>\n      <Select\n        options={[\n          {\n            label: t('Hot'),\n            value: 'hot',\n          },\n          {\n            label: t('APR'),\n            value: 'apr',\n          },\n          {\n            label: t('Earned'),\n            value: 'earned',\n          },\n          {\n            label: t('Total staked'),\n            value: 'totalStaked',\n          },\n        ]}\n        onChange={handleSortOptionChange}\n      />\n    </ToggleWrapper>\n  )\n\n  return <ViewControls>{stakedOnlySwitch}</ViewControls>\n}\n\nexport default PoolTabButtons\n","import { Flex, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseCell = styled.div`\n  color: black;\n\n  padding: 24px 8px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\n\nexport const CellContent = styled(Flex)`\n  flex-direction: column;\n  justify-content: center;\n  max-height: 40px;\n  ${Text} {\n    line-height: 1;\n  }\n`\n\nexport default BaseCell\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport {\n  Box,\n  Button,\n  Flex,\n  HelpIcon,\n  Link,\n  Skeleton,\n  Text,\n  TimerIcon,\n  useTooltip,\n  AutoRenewIcon,\n  RefreshIcon,\n} from '@pancakeswap/uikit'\nimport { BASE_BROWSER_URLS, BASE_BSC_SCAN_URL } from 'config'\nimport { getBscScanLink } from 'utils'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { registerToken } from 'utils/wallet'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { convertSharesToCake, getPoolBlockInfo } from 'views/Pools/helpers'\nimport Harvest from './Harvest'\nimport Stake from './Stake'\nimport Apr from '../Apr'\nimport AutoHarvest from './AutoHarvest'\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 700px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 700px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.dropdown};\n  background: #f5f8fd;\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  padding: 12px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\ntype MediaBreakpoints = {\n  isXs: boolean\n  isSm: boolean\n  isMd: boolean\n  isLg: boolean\n  isXl: boolean\n  isXxl: boolean\n}\n\ninterface ActionPanelProps {\n  account: string\n  pool: Pool\n  userDataLoaded: boolean\n  expanded: boolean\n  breakpoints: MediaBreakpoints\n}\n\nconst InfoSection = styled(Box)`\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: auto;\n  padding: 8px 8px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: 0;\n    flex-basis: 260px;\n  }\n`\n\nconst ATag = styled(Button)`\n  display: flex;\n  align-items: center;\n  width: fit-content;\n  color: #261977;\n  padding: 0 11px;\n  height: 24px;\n  line-height: 24px;\n  border-radius: 50px;\n  font-size: 12px;\n  text-align: center;\n  border: 1px solid #261977;\n`\n\nconst DivWrapper = styled.div`\n  position: relative;\n  display: float;\n  img {\n    width: 22px;\n    height: 22px;\n    position: absolute;\n    left: 0;\n    top: -2px;\n  }\n`\nconst TagLeftBg = styled.div`\n  position: absolute;\n  left: 0px;\n  top: -2px;\n  display: inline-block;\n  width: 24px;\n  height: 24px;\n  line-height: 24px;\n  text-align: center;\n  background: url(/images/pools/pools-tag-left-bg.png) left top no-repeat;\n  background-size: 100%;\n`\nconst TagRightBg = styled.div`\n  display: inline-block;\n  padding: 3px 12px 3px 17px;\n  color: #fff;\n  text-align: center;\n  font-size: 10px;\n  font-family: PingFang SC;\n  font-style: normal;\n  background: url(/images/pools/pools-tag-right-bg.png) left top no-repeat;\n  background-size: 100%;\n  margin-left: 12px;\n`\n\nconst IconWrapper = styled.div`\n  position: relative;\n  display: float;\n  margin-top: 20px;\n`\n\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    userData,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const { currentBlock } = useBlock()\n  const { isXs, isSm, isMd } = breakpoints\n  const showSubtitle = (isXs || isSm) && sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n\n  const {\n    totalCakeInVault,\n    userData: { userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const poolStakingTokenBalance = isAutoVault\n    ? cakeAsBigNumber.plus(stakingTokenBalance)\n    : stakedBalance.plus(stakingTokenBalance)\n\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const isManualCakePool = sousId === 0\n\n  const TagComponent = (props) => {\n    const { text } = props\n    return (\n      <DivWrapper>\n        <TagLeftBg>\n          {isAutoVault ? <AutoRenewIcon width=\"12px\" color=\"#fff\" /> : <RefreshIcon width=\"12px\" color=\"#fff\" />}\n        </TagLeftBg>\n        <TagRightBg>{text}</TagRightBg>\n      </DivWrapper>\n    )\n  }\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const {\n    targetRef: tagTargetRef,\n    tooltip: tagTooltip,\n    tooltipVisible: tagTooltipVisible,\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom-start',\n  })\n\n  const maxStakeRow = stakingLimit.gt(0) ? (\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\n      <Text>{t('Max. stake per user')}:</Text>\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n    </Flex>\n  ) : null\n\n  const blocksRow =\n    blocksRemaining || blocksUntilStart ? (\n      <Flex mb=\"8px\">\n        <Text color=\"#261977\">{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\n        <Flex ml=\"10px\">\n          <Link external href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}>\n            <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} color=\"#261977\" />\n            <Text ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\n              {t('Blocks')}\n            </Text>\n            <TimerIcon ml=\"4px\" color=\"primary\" />\n          </Link>\n        </Flex>\n      </Flex>\n    ) : (\n      <Skeleton width=\"56px\" height=\"16px\" />\n    )\n\n  const aprRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text color=\"#261977\">{isAutoVault ? t('APY') : t('APR')}:</Text>\n      <Apr\n        pool={pool}\n        showIcon\n        color=\"#261977\"\n        stakedBalance={poolStakingTokenBalance}\n        performanceFee={isAutoVault ? performanceFeeAsDecimal : 0}\n      />\n    </Flex>\n  )\n\n  const totalStakedRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text color=\"#261977\" maxWidth={['50px', '100%']}>\n        {t('Total staked')}:\n      </Text>\n      <Flex alignItems=\"center\">\n        {totalStaked && totalStaked.gte(0) ? (\n          <>\n            <Balance\n              fontSize=\"16px\"\n              value={getTotalStakedBalance()}\n              color=\"#261977\"\n              decimals={0}\n              unit={` ${stakingToken.symbol}`}\n            />\n            <span ref={totalStakedTargetRef}>\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"4px\" />\n            </span>\n          </>\n        ) : (\n          <Skeleton width=\"56px\" height=\"16px\" />\n        )}\n        {totalStakedTooltipVisible && totalStakedTooltip}\n      </Flex>\n    </Flex>\n  )\n\n  return (\n    <StyledActionPanel expanded={expanded}>\n      <InfoSection>\n        {maxStakeRow}\n        {(isXs || isSm) && aprRow}\n        {(isXs || isSm || isMd) && totalStakedRow}\n        {shouldShowBlockCountdown && blocksRow}\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          {/* <ATag\n            as=\"a\"\n            href={`https://pancakeswap.info/token/${getAddress(earningToken.address)}`}\n            target=\"_blank\"\n            style={{ marginRight: 10 }}\n          >\n            {t('See Token Info')}\n          </ATag> */}\n          <ATag as=\"a\" href={earningToken.projectLink} target=\"_blank\">\n            {t('View Project Site')}\n          </ATag>\n        </Flex>\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          {poolContractAddress && (\n            <ATag\n              as=\"a\"\n              href={`${BASE_BROWSER_URLS}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n              target=\"_blank\"\n              style={{ marginRight: 9, background: '#261977', color: '#fff' }}\n            >\n              {t('View Contract')}\n            </ATag>\n          )}\n          {account && isMetaMaskInScope && tokenAddress && (\n            <ATag\n              variant=\"text\"\n              p=\"0\"\n              height=\"auto\"\n              style={{ marginRight: 9, fontWeight: 'normal' }}\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n            >\n              {t('Add to Metamask')}\n            </ATag>\n          )}\n        </Flex>\n        <Flex justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <IconWrapper>\n            {isAutoVault ? <TagComponent text={t('Auto')} /> : <TagComponent text={t('Manual')} />}\n            {tagTooltipVisible && tagTooltip}\n            <span ref={tagTargetRef}>\n              <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n            </span>\n          </IconWrapper>\n        </Flex>\n      </InfoSection>\n      <ActionContainer>\n        {showSubtitle && (\n          <Text mt=\"4px\" color=\"#261977\" mb=\"16px\">\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`}\n          </Text>\n        )}\n        {pool.isAutoVault ? (\n          <AutoHarvest {...pool} userDataLoaded={userDataLoaded} />\n        ) : (\n          <Harvest {...pool} userDataLoaded={userDataLoaded} />\n        )}\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\n      </ActionContainer>\n    </StyledActionPanel>\n  )\n}\n\nexport default ActionPanel\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../../CakeVaultCard/CakeVaultTokenPairImage'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface NameCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 5;\n  flex-direction: row;\n  padding-left: 12px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 150px;\n    padding-left: 32px;\n  }\n`\n\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { sousId, stakingToken, earningToken, userData, isFinished, isAutoVault } = pool\n  const {\n    userData: { userShares },\n  } = useCakeVault()\n  const hasVaultShares = userShares && userShares.gt(0)\n\n  const stakingTokenSymbol = stakingToken?.symbol\n  const earningTokenSymbol = earningToken?.symbol\n\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isStaked = stakedBalance.gt(0)\n  const isManualCakePool = sousId === 0\n\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked\n\n  let title = `${t('Earn')} ${earningTokenSymbol}`\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isMobile)\n\n  if (isAutoVault) {\n    title = t('Auto CAKE')\n    subtitle = t('Automatic restaking')\n  } else if (isManualCakePool) {\n    title = t('Manual CAKE')\n    subtitle = `${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      {isAutoVault ? (\n        <CakeVaultTokenPairImage mr=\"8px\" width={40} height={40} />\n      ) : (\n        <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} mr=\"8px\" width={40} height={40} />\n      )}\n      <CellContent>\n        {showStakedTag && (\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\n            {t('Staked')}\n          </Text>\n        )}\n        <Text bold={!isMobile} small={isMobile}>\n          {title}\n        </Text>\n        {showSubtitle && (\n          <Text fontSize=\"12px\" color=\"textSubtle\" style={{ marginTop: 4 }}>\n            {subtitle}\n          </Text>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default NameCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, Flex, Box, useModal, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport BigNumber from 'bignumber.js'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface EarningsCellProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice } = pool\n  const isManualCakePool = sousId === 0\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  const hasEarnings = account && earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  const labelText = t('%asset% Earned', { asset: earningToken.symbol })\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isManualCakePool}\n    />,\n  )\n\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentCollect()\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"#A6A6B7\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\" onClick={hasEarnings ? handleEarningsClick : undefined}>\n                <Balance\n                  mt=\"4px\"\n                  bold={!isMobile}\n                  fontSize={isMobile ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {earningTokenPrice > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EarningsCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, useModal, CalculateIcon, Skeleton, FlexProps, Button } from '@pancakeswap/uikit'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getAprData } from 'views/Pools/helpers'\nimport { getAddress } from 'utils/addressHelpers'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nconst AprLabelContainer = styled(Flex)`\n  &:hover {\n    opacity: 0.5;\n  }\n`\n\ninterface AprProps extends FlexProps {\n  pool: Pool\n  stakedBalance: BigNumber\n  showIcon: boolean\n  performanceFee?: number\n}\n\nconst Apr: React.FC<AprProps> = ({ pool, showIcon, stakedBalance, performanceFee = 0, ...props }) => {\n  const { stakingToken, earningToken, isFinished, earningTokenPrice, stakingTokenPrice, userData, apr } = pool\n  const { t } = useTranslation()\n\n  const { apr: earningsPercentageToDisplay, autoCompoundFrequency } = getAprData(pool, performanceFee)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const apyModalLink = stakingToken?.address ? `/swap?outputCurrency=${getAddress(stakingToken?.address)}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <RoiCalculatorModal\n      earningTokenPrice={earningTokenPrice}\n      stakingTokenPrice={stakingTokenPrice}\n      stakingTokenBalance={stakedBalance.plus(stakingTokenBalance)}\n      apr={apr}\n      stakingTokenSymbol={stakingToken?.symbol}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken?.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken?.symbol}\n      autoCompoundFrequency={autoCompoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  const openRoiModal = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentApyModal()\n  }\n\n  return (\n    <AprLabelContainer alignItems=\"center\" justifyContent=\"space-between\" {...props}>\n      {earningsPercentageToDisplay || isFinished ? (\n        <>\n          <Balance\n            onClick={openRoiModal}\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={isFinished ? 0 : earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n            color=\"#5C5C75\"\n          />\n          {!isFinished && showIcon && (\n            <Button onClick={openRoiModal} variant=\"text\" width=\"20px\" height=\"20px\" padding=\"0px\" marginLeft=\"4px\">\n              <CalculateIcon color=\"textSubtle\" width=\"20px\" />\n            </Button>\n          )}\n        </>\n      ) : (\n        <Skeleton width=\"80px\" height=\"16px\" />\n      )}\n    </AprLabelContainer>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\n\ninterface AprCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AprCell: React.FC<AprCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { userData } = pool\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"#A6A6B7\" textAlign=\"left\">\n          {t('APR')}\n        </Text>\n        <Apr pool={pool} stakedBalance={stakedBalance} showIcon={!isMobile} />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AprCell\n","import React, { useMemo } from 'react'\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface TotalStakedCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { sousId, stakingToken, totalStaked, isAutoVault } = pool\n  const { totalCakeInVault } = useCakeVault()\n\n  const isManualCakePool = sousId === 0\n\n  const totalStakedBalance = useMemo(() => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken?.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken?.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken?.decimals)\n  }, [isAutoVault, totalCakeInVault, isManualCakePool, totalStaked, stakingToken?.decimals])\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"#A6A6B7\" textAlign=\"left\">\n          {t('Total staked')}\n        </Text>\n        {totalStaked && totalStaked.gte(0) ? (\n          <Flex height=\"20px\" alignItems=\"center\" style={{ marginTop: 3 }}>\n            <Balance\n              color=\"#5C5C75\"\n              fontSize=\"16px\"\n              value={totalStakedBalance}\n              decimals={0}\n              unit={` ${stakingToken?.symbol}`}\n            />\n          </Flex>\n        ) : (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Link, Skeleton, Text, TimerIcon } from '@pancakeswap/uikit'\nimport { getBscScanLink } from 'utils'\nimport { Pool } from 'state/types'\nimport { useBlock } from 'state/block/hooks'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface FinishCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n  .jfiVtQ {\n    color: #5c5c75;\n  }\n`\n\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\n  const { sousId, totalStaked, startBlock, endBlock, isFinished } = pool\n  const { currentBlock } = useBlock()\n  const { t } = useTranslation()\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isCakePool = sousId === 0\n\n  const renderBlocks = shouldShowBlockCountdown ? (\n    <Flex alignItems=\"center\">\n      <Flex flex=\"1.3\">\n        <Balance fontSize=\"16px\" color=\"#5C5C75\" value={blocksToDisplay} decimals={0} />\n        <Text ml=\"4px\" textTransform=\"lowercase\" color=\"#5C5C75\">\n          {t('Blocks')}\n        </Text>\n      </Flex>\n      <Flex flex=\"1\">\n        <Link\n          external\n          href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}\n          onClick={(e) => e.stopPropagation()}\n        >\n          <TimerIcon ml=\"4px\" color=\"#5C5C75\" />\n        </Link>\n      </Flex>\n    </Flex>\n  ) : (\n    <Text>-</Text>\n  )\n\n  // A bit hacky way to determine if public data is loading relying on totalStaked\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\n  // anywhere else\n  const isLoadingPublicData = !totalStaked?.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" textAlign=\"left\" color=\"#A6A6B7\">\n          {hasPoolStarted || !shouldShowBlockCountdown ? t('Ends in') : t('Starts in')}\n        </Text>\n        {showLoading ? <Skeleton width=\"80px\" height=\"16px\" /> : renderBlocks}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EndsInCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, ChevronDownIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell from './BaseCell'\n\ninterface ExpandActionCellProps {\n  expanded: boolean\n  isFullLayout: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  flex: 1;\n  padding-right: 12px;\n  padding-left: 0px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n    padding-right: 32px;\n    padding-left: 8px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 24px;\n`\n\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout }) => {\n  const { t } = useTranslation()\n  return (\n    <StyledCell role=\"cell\">\n      {isFullLayout && (\n        <Text color=\"primary\" bold>\n          {/* {expanded ? t('Hide') : t('Details')} */}\n        </Text>\n      )}\n      <ArrowIcon color=\"#A6A6B7\" toggled={expanded} />\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div<{ isAutoVault?: boolean }>`\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    height: ${({ isAutoVault }) => (isAutoVault ? '130px' : 'auto')};\n  }\n}\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 32px;\n    margin-right: 0;\n    align-self: flex-end;\n  }\n  button {\n    margin-top: 3px;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n  .recent {\n    font-family: PingFang SC;\n    font-style: normal;\n    font-weight: normal;\n    font-size: 12px;\n    color: #261977;\n  }\n  .earned {\n    font-family: PingFang SC;\n    font-style: normal;\n    font-weight: normal;\n    font-size: 12px;\n    color: #5c5c75;\n    margin-right: 5px;\n  }\n  .enable-farm {\n    font-family: PingFang SC;\n    font-style: normal;\n    font-weight: normal;\n    font-size: 12px;\n    color: #261977;\n  }\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  .val {\n    color: #5c5c75;\n    font-family: DINPro;\n    font-style: normal;\n    font-weight: normal;\n    font-size: 16px;\n    width: 249px;\n    height: 38px;\n    line-height: 38px;\n    border: 1px solid #ededf1;\n    padding-left: 10px;\n    border-radius: 8px;\n    margin-top: 10px;\n  }\n  .btn-get {\n    margin-top: 8px;\n    width: 249px;\n    background: #32324a;\n    border-radius: 8px;\n    height: 38px;\n  }\n  .btn-start {\n    margin-top: 16px;\n    width: 249px;\n    height: 38px;\n    line-height: 38px;\n    text-align: center;\n    background: #f56020;\n    border-radius: 8px;\n    font-family: PingFang SC;\n    font-style: normal;\n    font-weight: normal;\n    color: #fff;\n    border-color: transparent;\n  }\n  .btn-connect {\n    margin-top: 18px;\n    width: 249px;\n    height: 38px;\n    line-height: 38px;\n    text-align: center;\n    background: #f56020;\n    color: #fff;\n  }\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useERC20 } from 'hooks/useContract'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\nimport { useCheckVaultApprovalStatus, useApprovePool, useVaultApprove } from '../../../hooks/useApprove'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps {\n  pool: Pool\n  userDataLoaded: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    stakingLimit,\n    isFinished,\n    poolCategory,\n    userData,\n    stakingTokenPrice,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useApprovePool(\n    stakingTokenContract,\n    sousId,\n    earningToken.symbol,\n  )\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n  const { handleApprove: handleVaultApprove, requestedApproval: requestedVaultApproval } =\n    useVaultApprove(setLastUpdated)\n\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval\n\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const hasSharesStaked = userShares && userShares.gt(0)\n  const isVaultWithShares = isAutoVault && hasSharesStaked\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\n\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  const onStake = () => {\n    if (isAutoVault) {\n      onPresentVaultStake()\n    } else {\n      onPresentStake()\n    }\n  }\n\n  const onUnstake = () => {\n    if (isAutoVault) {\n      onPresentVaultUnstake()\n    } else {\n      onPresentUnstake()\n    }\n  }\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\" className=\"earned\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <ConnectWalletButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (needsApproval) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"#261977\" as=\"span\" textTransform=\"uppercase\">\n            {t('Enable pool')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button\n            width=\"100%\"\n            className=\"btn-start\"\n            disabled={requestedApproval}\n            onClick={handleApprove}\n            variant=\"secondary\"\n          >\n            {t('Enable')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  // Wallet connected, user data loaded and approved\n  if (isNotVaultAndHasStake || isVaultWithShares) {\n    return (\n      <ActionContainer isAutoVault={isAutoVault}>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n            {stakingToken.symbol}{' '}\n          </Text>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {isAutoVault ? t('Staked (compounding)') : t('Staked')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n            <Balance\n              lineHeight=\"1\"\n              bold\n              fontSize=\"20px\"\n              decimals={5}\n              value={isAutoVault ? cakeAsNumberBalance : stakedTokenBalance}\n            />\n            <Balance\n              fontSize=\"12px\"\n              display=\"inline\"\n              color=\"textSubtle\"\n              decimals={2}\n              value={isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Flex>\n          <IconButtonWrapper>\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\n              <MinusIcon color=\"primary\" width=\"14px\" />\n            </IconButton>\n            {reachStakingLimit ? (\n              <span ref={targetRef}>\n                <IconButton variant=\"secondary\" disabled>\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n                </IconButton>\n              </span>\n            ) : (\n              <IconButton\n                variant=\"secondary\"\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n                disabled={isFinished}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            )}\n          </IconButtonWrapper>\n          {tooltipVisible && tooltip}\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n          {t('Stake')}{' '}\n        </Text>\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n          {stakingToken.symbol}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button\n          width=\"100%\"\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n          variant=\"secondary\"\n          disabled={isFinished}\n        >\n          {t('Stake')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { useRouteMatch, useLocation, Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, Flex, Image, Text, ButtonMenu, ButtonMenuItem, NotificationDot } from '@pancakeswap/uikit'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport { useTranslation } from 'contexts/Localization'\nimport usePersistState from 'hooks/usePersistState'\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault } from 'state/pools/hooks'\nimport { usePollFarmsData } from 'state/farms/hooks'\nimport { latinise } from 'utils/latinise'\nimport FlexLayout from 'components/Layout/Flex'\nimport Page from 'components/Layout/Page'\nimport { OptionProps } from 'components/Select/Select'\nimport { Pool } from 'state/types'\nimport Loading from 'components/Loading'\nimport SearchInput from './components/SearchInput'\nimport PoolCard from './components/PoolCard'\nimport CakeVaultCard from './components/CakeVaultCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport PoolsTable from './components/PoolsTable/PoolsTable'\nimport { ViewMode } from './components/ToggleView/ToggleView'\nimport { getAprData, getCakeVaultEarnings } from './helpers'\n\nconst CardLayout = styled(FlexLayout)`\n  justify-content: center;\n`\n\nconst PoolControls = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  justify-content: space-between;\n  flex-direction: column;\n  margin-bottom: 32px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 16px 0px;\n    margin-bottom: 0;\n  }\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst PageHeader = styled.div`\n  width: 100%;\n  heigth: 200px;\n  //background: linear-gradient(256.48deg, #9443e5 -1.81%, #793ef6 32.29%, #5a40ee 64.06%, #5f42e9 102.57%);\n  background: linear-gradient(259.42deg, #ffc700 4.93%, #f56020 92.22%);\n  padding: 20px 40px;\n  border-radius: 10px;\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  > div {\n    border: none;\n    background-color: #fff;\n  }\n  a {\n    padding-left: 12px;\n    padding-right: 12px;\n  }\n  margin-left: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 16px;\n  }\n`\n\nconst NUMBER_OF_POOLS_VISIBLE = 12\n\nconst Pools: React.FC = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools(account)\n  const [stakedOnly, setStakedOnly] = usePersistState(false, { localStorageKey: 'pancake_pool_staked' })\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n  const loadMoreRef = useRef<HTMLDivElement>(null)\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, { localStorageKey: 'pancake_pool_view' })\n  const [searchQuery, setSearchQuery] = useState('')\n  const [sortOption, setSortOption] = useState('hot')\n  const chosenPoolsLength = useRef(0)\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n    totalCakeInVault,\n  } = useCakeVault()\n  const accountHasVaultShares = userShares && userShares.gt(0)\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const { url, isExact } = useRouteMatch()\n  const pools = useMemo(() => {\n    const cakePool = poolsWithoutAutoVault.find((pool) => pool.sousId === 0)\n    const cakeAutoVault = { ...cakePool, isAutoVault: true }\n    return [cakeAutoVault, ...poolsWithoutAutoVault]\n  }, [poolsWithoutAutoVault])\n\n  // TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\n  const stakedOnlyFinishedPools = useMemo(\n    () =>\n      finishedPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [finishedPools, accountHasVaultShares],\n  )\n  const stakedOnlyOpenPools = useMemo(\n    () =>\n      openPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [openPools, accountHasVaultShares],\n  )\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\n\n  usePollFarmsData()\n  useFetchCakeVault()\n  useFetchPublicPoolsData()\n\n  useEffect(() => {\n    const showMorePools = (entries) => {\n      const [entry] = entries\n      if (entry.isIntersecting) {\n        setNumberOfPoolsVisible((poolsCurrentlyVisible) => {\n          if (poolsCurrentlyVisible <= chosenPoolsLength.current) {\n            return poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE\n          }\n          return poolsCurrentlyVisible\n        })\n      }\n    }\n\n    if (!observerIsSet) {\n      const loadMoreObserver = new IntersectionObserver(showMorePools, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      loadMoreObserver.observe(loadMoreRef.current)\n      setObserverIsSet(true)\n    }\n  }, [observerIsSet])\n\n  const showFinishedPools = location.pathname.includes('history')\n\n  const handleChangeSearchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value)\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  const sortPools = (poolsToSort: Pool[]) => {\n    switch (sortOption) {\n      case 'apr':\n        // Ternary is needed to prevent pools without APR (like MIX) getting top spot\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.apr ? getAprData(pool, performanceFeeAsDecimal).apr : 0),\n          'desc',\n        )\n      case 'earned':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => {\n            if (!pool.userData || !pool.earningTokenPrice) {\n              return 0\n            }\n            return pool.isAutoVault\n              ? getCakeVaultEarnings(\n                  account,\n                  cakeAtLastUserAction,\n                  userShares,\n                  pricePerFullShare,\n                  pool.earningTokenPrice,\n                ).autoUsdToDisplay\n              : pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber()\n          },\n          'desc',\n        )\n      case 'totalStaked':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.isAutoVault ? totalCakeInVault.toNumber() : pool.totalStaked.toNumber()),\n          'desc',\n        )\n      default:\n        return poolsToSort\n    }\n  }\n\n  let chosenPools\n  if (showFinishedPools) {\n    chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools\n  } else {\n    chosenPools = stakedOnly ? stakedOnlyOpenPools : openPools\n  }\n\n  if (searchQuery) {\n    const lowercaseQuery = latinise(searchQuery.toLowerCase())\n    chosenPools = chosenPools.filter((pool) =>\n      latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\n    )\n  }\n\n  chosenPools = sortPools(chosenPools).slice(0, numberOfPoolsVisible)\n  chosenPoolsLength.current = chosenPools.length\n\n  const cardLayout = (\n    <CardLayout>\n      {chosenPools.map((pool) =>\n        pool.isAutoVault ? (\n          <CakeVaultCard key=\"auto-cake\" pool={pool} showStakedOnly={stakedOnly} />\n        ) : (\n          <PoolCard key={pool.sousId} pool={pool} account={account} />\n        ),\n      )}\n    </CardLayout>\n  )\n\n  const tableLayout = <PoolsTable pools={chosenPools} account={account} userDataLoaded={userDataLoaded} />\n\n  const liveOrFinishedSwitch = (\n    <Wrapper>\n      <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"primary\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {t('Live')}\n        </ButtonMenuItem>\n        <NotificationDot show={hasStakeInFinishedPools}>\n          <ButtonMenuItem as={Link} to={`${url}/history`}>\n            {t('Finished')}\n          </ButtonMenuItem>\n        </NotificationDot>\n      </ButtonMenu>\n    </Wrapper>\n  )\n\n  return (\n    <>\n      <Page>\n        <PageHeader>\n          <Heading as=\"h1\" color=\"#fff\" mb=\"15px\" size=\"xl\">\n            {t('Syrup Pools')}\n          </Heading>\n          <Text fontSize=\"12px\" color=\"#fff\">\n            {t('Just stake some tokens to earn. High APR, low risk.')}\n          </Text>\n        </PageHeader>\n\n        <PoolControls>\n          <PoolTabButtons\n            stakedOnly={stakedOnly}\n            setStakedOnly={setStakedOnly}\n            hasStakeInFinishedPools={hasStakeInFinishedPools}\n            viewMode={viewMode}\n            setViewMode={setViewMode}\n            handleSortOptionChange={handleSortOptionChange}\n          />\n          <FilterContainer>\n            <LabelWrapper style={{ marginLeft: 10 }}>\n              <SearchInput onChange={handleChangeSearchQuery} placeholder=\"Search Pools\" />\n            </LabelWrapper>\n            <LabelWrapper>{liveOrFinishedSwitch}</LabelWrapper>\n          </FilterContainer>\n        </PoolControls>\n\n        {showFinishedPools && (\n          <Text fontSize=\"20px\" color=\"failure\" pb=\"32px\">\n            {t('These pools are no longer distributing rewards. Please unstake your tokens.')}\n          </Text>\n        )}\n\n        {account && !userDataLoaded && stakedOnly && (\n          <Flex justifyContent=\"center\" mb=\"4px\">\n            <Loading />\n          </Flex>\n        )}\n\n        <div ref={loadMoreRef} />\n        <Image\n          mx=\"auto\"\n          mt=\"12px\"\n          src=\"/images/pools/logo.png\"\n          alt=\"Pancake illustration\"\n          width={85}\n          height={40}\n          // style={{ opacity: 0.5 }}\n        />\n      </Page>\n    </>\n  )\n}\n\nexport default Pools\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface AutoEarningsCellProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst HelpIconWrapper = styled.div`\n  align-self: center;\n`\n\nconst AutoEarningsCell: React.FC<AutoEarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { earningTokenPrice } = pool\n\n  const {\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const labelText = t('Recent CAKE profit')\n  const earningTokenBalance = autoCakeToDisplay\n  const hasEarnings = hasAutoEarnings\n  const earningTokenDollarBalance = autoUsdToDisplay\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={autoCakeToDisplay} decimals={3} bold unit=\" CAKE\" />\n      <Balance fontSize=\"16px\" value={autoUsdToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    { placement: 'bottom' },\n  )\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"#A6A6B7\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            {tooltipVisible && tooltip}\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\">\n                <Balance\n                  mt=\"4px\"\n                  bold={!isMobile}\n                  fontSize={isMobile ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : '#5C5C75'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {earningTokenPrice > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"#5C5C75\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n              {hasEarnings && !isMobile && (\n                <HelpIconWrapper ref={targetRef}>\n                  <HelpIcon color=\"textSubtle\" />\n                </HelpIconWrapper>\n              )}\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AutoEarningsCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\nimport { convertSharesToCake } from '../../../helpers'\n\ninterface AprCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AutoAprCell: React.FC<AprCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n\n  const {\n    userData: { userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"#A6A6B7\" textAlign=\"left\">\n          {t('APY')}\n        </Text>\n        <Apr\n          pool={pool}\n          stakedBalance={cakeAsBigNumber}\n          performanceFee={performanceFeeAsDecimal}\n          showIcon={!isMobile}\n          style={{ marginTop: 3 }}\n        />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AutoAprCell\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport NameCell from './Cells/NameCell'\nimport EarningsCell from './Cells/EarningsCell'\nimport AprCell from './Cells/AprCell'\nimport TotalStakedCell from './Cells/TotalStakedCell'\nimport EndsInCell from './Cells/EndsInCell'\nimport ExpandActionCell from './Cells/ExpandActionCell'\nimport ActionPanel from './ActionPanel/ActionPanel'\nimport AutoEarningsCell from './Cells/AutoEarningsCell'\nimport AutoAprCell from './Cells/AutoAprCell'\n\ninterface PoolRowProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledRow = styled.div`\n  background-color: transparent;\n  display: flex;\n  cursor: pointer;\n`\n\nconst PoolRow: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded }) => {\n  const { isXs, isSm, isMd, isLg, isXl, isXxl, isTablet, isDesktop } = useMatchBreakpoints()\n  const isLargerScreen = isLg || isXl || isXxl\n  const [expanded, setExpanded] = useState(false)\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\n\n  const toggleExpanded = () => {\n    setExpanded((prev) => !prev)\n  }\n\n  return (\n    <>\n      <StyledRow role=\"row\" onClick={toggleExpanded} className={shouldRenderActionPanel ? 'expanded' : ''}>\n        <NameCell pool={pool} />\n        {pool.isAutoVault ? (\n          <AutoEarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        ) : (\n          <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        )}\n        {pool.isAutoVault ? <AutoAprCell pool={pool} /> : <AprCell pool={pool} />}\n        {isLargerScreen && <TotalStakedCell pool={pool} />}\n        {isDesktop && <EndsInCell pool={pool} />}\n        <ExpandActionCell expanded={expanded} isFullLayout={isTablet || isDesktop} />\n      </StyledRow>\n      {shouldRenderActionPanel && (\n        <ActionPanel\n          account={account}\n          pool={pool}\n          userDataLoaded={userDataLoaded}\n          expanded={expanded}\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl, isXxl }}\n        />\n      )}\n    </>\n  )\n}\n\nexport default PoolRow\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { Button, ChevronUpIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport PoolRow from './PoolRow'\n\ninterface PoolsTableProps {\n  pools: Pool[]\n  userDataLoaded: boolean\n  account: string\n}\n\nconst StyledTable = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n\n  background-color: ${({ theme }) => theme.card.background};\n  > div:not(:last-child) {\n    border-bottom: 10px solid ${({ theme }) => theme.colors.background};\n  }\n  div.expanded {\n    border-bottom: 0;\n  }\n`\n\nconst StyledTableBorder = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n  // background-color: ${({ theme }) => theme.colors.background};\n  padding: 1px 1px 3px 1px;\n  background-size: 400% 400%;\n  position: relative;\n  margin-bottom: 90px;\n`\n\nconst ScrollButtonContainer = styled.div`\n  padding: 8px 0;\n  background: #fff;\n  border-bottom-right-radius: 10px;\n  border-bottom-left-radius: 10px;\n  position: absolute;\n  bottom: 0;\n  left: 50%;\n  transform: translate(-50%, 100%);\n`\n\nconst PoolsTable: React.FC<PoolsTableProps> = ({ pools, userDataLoaded, account }) => {\n  const { t } = useTranslation()\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n  return (\n    <StyledTableBorder>\n      <StyledTable role=\"table\" ref={tableWrapperEl}>\n        {pools.map((pool) => (\n          <PoolRow\n            key={pool.isAutoVault ? 'auto-cake' : pool.sousId}\n            pool={pool}\n            account={account}\n            userDataLoaded={userDataLoaded}\n          />\n        ))}\n      </StyledTable>\n      <ScrollButtonContainer>\n        <Button variant=\"text\" onClick={scrollToTop} style={{ color: '#261977' }} height=\"auto\">\n          {t('To Top')}\n          <ChevronUpIcon color=\"#A6A6B7\" />\n        </Button>\n      </ScrollButtonContainer>\n    </StyledTableBorder>\n  )\n}\n\nexport default PoolsTable\n","import tokens from 'config/constants/tokens'\nimport { Address } from './types'\n\n// const { bondly, safemoon } = tokens\n\ninterface WarningToken {\n  symbol: string\n  address: Address\n}\n\ninterface WarningTokenList {\n  [key: string]: WarningToken\n}\n\nconst SwapWarningTokens = <WarningTokenList>{\n  // safemoon,\n  // bondly,\n}\n\nexport default SwapWarningTokens\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Text, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useENS from '../../../hooks/ENS/useENS'\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\nimport { AutoColumn } from '../../../components/Layout/Column'\nimport { RowBetween } from '../../../components/Layout/Row'\nimport { getBscScanLink } from '../../../utils'\n\nconst InputPanel = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  z-index: 1;\n  width: 100%;\n`\n\nconst ContainerRow = styled.div<{ error: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.background)};\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nconst InputContainer = styled.div`\n  flex: 1;\n  padding: 1rem;\n`\n\nconst Input = styled.input<{ error?: boolean }>`\n  font-size: 1.25rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  width: 0;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.primary)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  width: 100%;\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n`\n\nexport default function AddressInputPanel({\n  id,\n  value,\n  onChange,\n}: {\n  id?: string\n  // the typed string value\n  value: string\n  // triggers whenever the typed value changes\n  onChange: (value: string) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const { address, loading, name } = useENS(value)\n\n  const handleInput = useCallback(\n    (event) => {\n      const input = event.target.value\n      const withoutSpaces = input.replace(/\\s+/g, '')\n      onChange(withoutSpaces)\n    },\n    [onChange],\n  )\n\n  const error = Boolean(value.length > 0 && !loading && !address)\n\n  return (\n    <InputPanel id={id}>\n      <ContainerRow error={error}>\n        <InputContainer>\n          <AutoColumn gap=\"md\">\n            <RowBetween>\n              <Text>{t('Recipient')}</Text>\n              {address && chainId && (\n                <Link external small href={getBscScanLink(name ?? address, 'address', chainId)}>\n                  ({t('View on BscScan')})\n                </Link>\n              )}\n            </RowBetween>\n            <Input\n              className=\"recipient-address-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              placeholder={t('Wallet Address or ENS name')}\n              error={error}\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\n              onChange={handleInput}\n              value={value}\n            />\n          </AutoColumn>\n        </InputContainer>\n      </ContainerRow>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport { Text, ErrorIcon } from '@pancakeswap/uikit'\nimport styled, { css } from 'styled-components'\nimport { AutoColumn } from 'components/Layout/Column'\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding: 1rem;\n`\n\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\n  padding: 2px;\n  z-index: 1;\n\n  ${({ clickable }) =>\n    clickable\n      ? css`\n          :hover {\n            cursor: pointer;\n            opacity: 0.8;\n          }\n        `\n      : null}\n`\n\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\n  color: ${({ theme, severity }) =>\n    severity === 3 || severity === 4\n      ? theme.colors.failure\n      : severity === 2\n      ? theme.colors.warning\n      : severity === 1\n      ? theme.colors.text\n      : theme.colors.success};\n`\n\nexport const StyledBalanceMaxMini = styled.button`\n  height: 22px;\n  width: 22px;\n  background-color: ${({ theme }) => theme.colors.background};\n  border: none;\n  border-radius: 50%;\n  padding: 0.2rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  margin-left: 0.4rem;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  float: right;\n\n  :hover {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n  }\n  :focus {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n    outline: none;\n  }\n`\n\nexport const TruncatedText = styled(Text).attrs({ ellipsis: true })`\n  width: 220px;\n`\n\nconst SwapCallbackErrorInner = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  border-radius: 1rem;\n  display: flex;\n  align-items: center;\n  font-size: 0.825rem;\n  width: 100%;\n  padding: 3rem 1.25rem 1rem 1rem;\n  margin-top: -2rem;\n  color: ${({ theme }) => theme.colors.failure};\n  z-index: -1;\n  p {\n    padding: 0;\n    margin: 0;\n    font-weight: 500;\n  }\n`\n\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n  border-radius: 12px;\n  min-width: 48px;\n  height: 48px;\n`\n\nexport function SwapCallbackError({ error }: { error: string }) {\n  return (\n    <SwapCallbackErrorInner>\n      <SwapCallbackErrorInnerAlertTriangle>\n        <ErrorIcon width=\"24px\" />\n      </SwapCallbackErrorInnerAlertTriangle>\n      <p>{error}</p>\n    </SwapCallbackErrorInner>\n  )\n}\n\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\n  background-color: ${({ theme }) => `${theme.colors.warning}33`};\n  padding: 0.5rem;\n  border-radius: 12px;\n  margin-top: 8px;\n`\n","import { Percent } from '@awswap/sdk'\nimport React from 'react'\nimport { warningSeverity } from 'utils/prices'\nimport { ONE_BIPS } from '../../../config/constants'\nimport { ErrorText } from './styleds'\n\n/**\n * Formatted version of price impact text with warning colors\n */\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact?: Percent }) {\n  return (\n    <ErrorText fontSize=\"14px\" severity={warningSeverity(priceImpact)}>\n      {priceImpact ? (priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`) : '-'}\n    </ErrorText>\n  )\n}\n","import React, { useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Trade, TradeType } from '@awswap/sdk'\nimport { Button, Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport {\n  computeSlippageAdjustedAmounts,\n  computeTradePriceBreakdown,\n  formatExecutionPrice,\n  warningSeverity,\n} from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { AutoRow, RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\nimport { useTranslation } from '../../../contexts/Localization'\n\nconst SwapModalFooterContainer = styled(AutoColumn)`\n  margin-top: 24px;\n  padding: 16px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport default function SwapModalFooter({\n  trade,\n  onConfirm,\n  allowedSlippage,\n  swapErrorMessage,\n  disabledConfirm,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  onConfirm: () => void\n  swapErrorMessage: string | undefined\n  disabledConfirm: boolean\n}) {\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [allowedSlippage, trade],\n  )\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const severity = warningSeverity(priceImpactWithoutFee)\n\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <SwapModalFooterContainer>\n        <RowBetween align=\"center\">\n          <Text fontSize=\"14px\">Price</Text>\n          <Text\n            fontSize=\"14px\"\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              display: 'flex',\n              textAlign: 'right',\n              paddingLeft: '10px',\n            }}\n          >\n            {formatExecutionPrice(trade, showInverted)}\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n              <AutoRenewIcon width=\"14px\" />\n            </StyledBalanceMaxMini>\n          </Text>\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT ? t('Minimum received') : t('Maximum sold')}\n            </Text>\n            <QuestionHelper\n              text={t(\n                'Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.',\n              )}\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\n            </Text>\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.outputAmount.currency.symbol\n                : trade.inputAmount.currency.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">{t('Price Impact')}</Text>\n            <QuestionHelper\n              text={t('The difference between the market price and your price due to trade size.')}\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n      </SwapModalFooterContainer>\n\n      <AutoRow>\n        <Button\n          variant={severity > 2 ? 'danger' : 'primary'}\n          onClick={onConfirm}\n          disabled={disabledConfirm}\n          mt=\"12px\"\n          id=\"confirm-swap-or-send\"\n          width=\"100%\"\n        >\n          {severity > 2 ? 'Swap Anyway' : 'Confirm Swap'}\n        </Button>\n\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </AutoRow>\n    </>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { Trade, TradeType } from '@awswap/sdk'\nimport { Button, Text, ErrorIcon, ArrowDownIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { isAddress, shortenAddress } from 'utils'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { TruncatedText, SwapShowAcceptChanges } from './styleds'\n\nexport default function SwapModalHeader({\n  trade,\n  allowedSlippage,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  recipient: string | null\n  showAcceptChanges: boolean\n  onAcceptChanges: () => void\n}) {\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [trade, allowedSlippage],\n  )\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <AutoColumn gap=\"md\">\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? 'primary' : 'text'}\n          >\n            {trade.inputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.inputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowFixed>\n        <ArrowDownIcon width=\"16px\" ml=\"4px\" />\n      </RowFixed>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={\n              priceImpactSeverity > 2\n                ? 'failure'\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\n                ? 'primary'\n                : 'text'\n            }\n          >\n            {trade.outputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.outputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      {showAcceptChanges ? (\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\n          <RowBetween>\n            <RowFixed>\n              <ErrorIcon mr=\"8px\" />\n              <Text bold> Price Updated</Text>\n            </RowFixed>\n            <Button onClick={onAcceptChanges}>Accept</Button>\n          </RowBetween>\n        </SwapShowAcceptChanges>\n      ) : null}\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '24px 0 0 0px' }}>\n        {trade.tradeType === TradeType.EXACT_INPUT ? (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Output is estimated. You will receive at least `}\n            <b>\n              {slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)} {trade.outputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        ) : (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Input is estimated. You will sell at most `}\n            <b>\n              {slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)} {trade.inputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        )}\n      </AutoColumn>\n      {recipient !== null ? (\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\n          <Text color=\"textSubtle\">\n            Output will be sent to{' '}\n            <b title={recipient}>{isAddress(recipient) ? shortenAddress(recipient) : recipient}</b>\n          </Text>\n        </AutoColumn>\n      ) : null}\n    </AutoColumn>\n  )\n}\n","import React, { useCallback, useMemo } from 'react'\nimport { currencyEquals, Trade } from '@awswap/sdk'\nimport { InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent,\n} from 'components/TransactionConfirmationModal'\nimport SwapModalFooter from './SwapModalFooter'\nimport SwapModalHeader from './SwapModalHeader'\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\n  return (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n  )\n}\ninterface ConfirmSwapModalProps {\n  trade?: Trade\n  originalTrade?: Trade\n  attemptingTxn: boolean\n  txHash?: string\n  recipient: string | null\n  allowedSlippage: number\n  onAcceptChanges: () => void\n  onConfirm: () => void\n  swapErrorMessage?: string\n  customOnDismiss?: () => void\n}\n\nconst ConfirmSwapModal: React.FC<InjectedModalProps & ConfirmSwapModalProps> = ({\n  trade,\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  customOnDismiss,\n  recipient,\n  swapErrorMessage,\n  attemptingTxn,\n  txHash,\n}) => {\n  const showAcceptChanges = useMemo(\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\n    [originalTrade, trade],\n  )\n\n  const { t } = useTranslation()\n\n  const modalHeader = useCallback(() => {\n    return trade ? (\n      <SwapModalHeader\n        trade={trade}\n        allowedSlippage={allowedSlippage}\n        recipient={recipient}\n        showAcceptChanges={showAcceptChanges}\n        onAcceptChanges={onAcceptChanges}\n      />\n    ) : null\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\n\n  const modalBottom = useCallback(() => {\n    return trade ? (\n      <SwapModalFooter\n        onConfirm={onConfirm}\n        trade={trade}\n        disabledConfirm={showAcceptChanges}\n        swapErrorMessage={swapErrorMessage}\n        allowedSlippage={allowedSlippage}\n      />\n    ) : null\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade])\n\n  // text to show while loading\n  const pendingText = t('Swapping %amountA% %symbolA% for %amountB% %symbolB%', {\n    amountA: trade?.inputAmount?.toSignificant(6) ?? '',\n    symbolA: trade?.inputAmount?.currency?.symbol ?? '',\n    amountB: trade?.outputAmount?.toSignificant(6) ?? '',\n    symbolB: trade?.outputAmount?.currency?.symbol ?? '',\n  })\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\n      ) : (\n        <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\n      ),\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage],\n  )\n\n  return (\n    <TransactionConfirmationModal\n      title={t('Confirm Swap')}\n      onDismiss={onDismiss}\n      customOnDismiss={customOnDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={confirmationContent}\n      pendingText={pendingText}\n      currencyToAdd={trade?.outputAmount.currency}\n    />\n  )\n}\n\nexport default ConfirmSwapModal\n","import { useEffect, useState } from 'react'\n\n/**\n * Returns the last value of type T that passes a filter function\n * @param value changing value\n * @param filterFn function that determines whether a given value should be considered for the last value\n */\nfunction useLast<T>(\n  value: T | undefined | null,\n  filterFn?: (value: T | null | undefined) => boolean,\n): T | null | undefined {\n  const [last, setLast] = useState<T | null | undefined>(filterFn && filterFn(value) ? value : undefined)\n  useEffect(() => {\n    setLast((prev) => {\n      const shouldUse: boolean = filterFn ? filterFn(value) : true\n      if (shouldUse) return value\n      return prev\n    })\n  }, [filterFn, value])\n  return last\n}\n\nfunction isDefined<T>(x: T | null | undefined): x is T {\n  return x !== null && x !== undefined\n}\n\n/**\n * Returns the last truthy value of type T\n * @param value changing value\n */\nfunction useLastTruthy<T>(value: T | undefined | null): T | null | undefined {\n  return useLast(value, isDefined)\n}\n\nexport default useLastTruthy\n","import React from 'react'\nimport styled from 'styled-components'\nimport useLastTruthy from 'hooks/useLast'\nimport { AdvancedSwapDetails, AdvancedSwapDetailsProps } from './AdvancedSwapDetails'\n\nconst AdvancedDetailsFooter = styled.div<{ show: boolean }>`\n  margin-top: ${({ show }) => (show ? '16px' : 0)};\n  padding-top: 16px;\n  padding-bottom: 16px;\n  width: 100%;\n  max-width: 400px;\n  border-radius: 8px;\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\n  transition: transform 300ms ease-in-out;\n`\n\nexport default function AdvancedSwapDetailsDropdown({ trade, ...rest }: AdvancedSwapDetailsProps) {\n  const lastTrade = useLastTruthy(trade)\n\n  return null\n\n  return (\n    <AdvancedDetailsFooter show={Boolean(trade)}>\n      <AdvancedSwapDetails {...rest} trade={trade ?? lastTrade ?? undefined} />\n    </AdvancedDetailsFooter>\n  )\n}\n","import React from 'react'\nimport { Price } from '@awswap/sdk'\nimport { Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { StyledBalanceMaxMini } from './styleds'\n\ninterface TradePriceProps {\n  price?: Price\n  showInverted: boolean\n  setShowInverted: (showInverted: boolean) => void\n}\n\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\n\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\n  const label = showInverted\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`\n\n  return (\n    <Text style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\n      {show ? (\n        <>\n          {formattedPrice ?? '-'} {label}\n          <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n            <AutoRenewIcon width=\"14px\" />\n          </StyledBalanceMaxMini>\n        </>\n      ) : (\n        '-'\n      )}\n    </Text>\n  )\n}\n","import React from 'react'\nimport { Token } from '@awswap/sdk'\nimport { Modal, InjectedModalProps } from '@pancakeswap/uikit'\nimport ImportToken from 'components/SearchModal/ImportToken'\n\ninterface Props extends InjectedModalProps {\n  tokens: Token[]\n  onCancel: () => void\n}\n\nconst ImportTokenWarningModal: React.FC<Props> = ({ tokens, onDismiss, onCancel }) => {\n  return (\n    <Modal\n      title=\"Import Token\"\n      onDismiss={() => {\n        if (onDismiss) {\n          onDismiss()\n        }\n        onCancel()\n      }}\n      style={{ maxWidth: '420px' }}\n    >\n      <ImportToken tokens={tokens} handleCurrencySelect={onDismiss} />\n    </Modal>\n  )\n}\n\nexport default ImportTokenWarningModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { RowBetween } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\n\nconst Grouping = styled(RowBetween)`\n  width: 50%;\n`\n\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\n  min-width: 20px;\n  min-height: 20px;\n  background-color: ${({ theme, confirmed, disabled }) =>\n    disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\n  border-radius: 50%;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 8px;\n  font-size: 12px;\n`\n\nconst CircleRow = styled.div`\n  width: calc(100% - 20px);\n  display: flex;\n  align-items: center;\n`\n\nconst Connector = styled.div<{ prevConfirmed?: boolean; disabled?: boolean }>`\n  width: 100%;\n  height: 2px;\n  background: linear-gradient(\n    90deg,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled ? theme.colors.backgroundDisabled : prevConfirmed ? theme.colors.success : theme.colors.primary}\n      0%,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled\n          ? theme.colors.backgroundDisabled\n          : prevConfirmed\n          ? theme.colors.primary\n          : theme.colors.backgroundDisabled}\n      80%\n  );\n  opacity: 0.6;\n`\n\ninterface ProgressCirclesProps {\n  steps: boolean[]\n  disabled?: boolean\n}\n\n/**\n * Based on array of steps, create a step counter of circles.\n * A circle can be enabled, disabled, or confirmed. States are derived\n * from previous step.\n *\n * An extra circle is added to represent the ability to swap, add, or remove.\n * This step will never be marked as complete (because no 'txn done' state in body ui).\n *\n * @param steps  array of booleans where true means step is complete\n */\nexport default function ProgressCircles({ steps, disabled = false, ...rest }: ProgressCirclesProps) {\n  return (\n    <AutoColumn justify=\"center\" {...rest}>\n      <Grouping>\n        {steps.map((step, i) => {\n          return (\n            // eslint-disable-next-line react/no-array-index-key\n            <CircleRow key={i}>\n              <Circle confirmed={step} disabled={disabled || (!steps[i - 1] && i !== 0)}>\n                {step ? '✓' : i + 1}\n              </Circle>\n              <Connector prevConfirmed={step} disabled={disabled} />\n            </CircleRow>\n          )\n        })}\n        <Circle disabled={disabled || !steps[steps.length - 1]}>{steps.length + 1}</Circle>\n      </Grouping>\n    </AutoColumn>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { JSBI, Percent, Router, SwapParameters, Trade, TradeType } from '@awswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useGasPrice } from 'state/user/hooks'\nimport { BIPS_BASE, INITIAL_ALLOWED_SLIPPAGE } from '../config/constants'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { calculateGasMargin, getRouterContract, isAddress, shortenAddress } from '../utils'\nimport isZero from '../utils/isZero'\nimport useTransactionDeadline from './useTransactionDeadline'\nimport useENS from './ENS/useENS'\n\nexport enum SwapCallbackState {\n  INVALID,\n  LOADING,\n  VALID,\n}\n\ninterface SwapCall {\n  contract: Contract\n  parameters: SwapParameters\n}\n\ninterface SuccessfulCall {\n  call: SwapCall\n  gasEstimate: BigNumber\n}\n\ninterface FailedCall {\n  call: SwapCall\n  error: Error\n}\n\ntype EstimatedSwapCall = SuccessfulCall | FailedCall\n\n/**\n * Returns the swap calls that can be used to make the trade\n * @param trade trade to execute\n * @param allowedSlippage user allowed slippage\n * @param recipientAddressOrName\n */\nfunction useSwapCallArguments(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): SwapCall[] {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n  const deadline = useTransactionDeadline()\n\n  return useMemo(() => {\n    if (!trade || !recipient || !library || !account || !chainId || !deadline) return []\n\n    const contract: Contract | null = getRouterContract(chainId, library, account)\n    if (!contract) {\n      return []\n    }\n\n    const swapMethods = []\n\n    swapMethods.push(\n      Router.swapCallParameters(trade, {\n        feeOnTransfer: false,\n        allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n        recipient,\n        deadline: deadline.toNumber(),\n      }),\n    )\n\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\n      swapMethods.push(\n        Router.swapCallParameters(trade, {\n          feeOnTransfer: true,\n          allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n          recipient,\n          deadline: deadline.toNumber(),\n        }),\n      )\n    }\n\n    return swapMethods.map((parameters) => ({ parameters, contract }))\n  }, [account, allowedSlippage, chainId, deadline, library, recipient, trade])\n}\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useSwapCallback(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\n  const { account, chainId, library } = useActiveWeb3React()\n  const gasPrice = useGasPrice()\n\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, recipientAddressOrName)\n\n  const addTransaction = useTransactionAdder()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n\n  return useMemo(() => {\n    if (!trade || !library || !account || !chainId) {\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\n    }\n    if (!recipient) {\n      if (recipientAddressOrName !== null) {\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\n      }\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\n    }\n\n    return {\n      state: SwapCallbackState.VALID,\n      callback: async function onSwap(): Promise<string> {\n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\n          swapCalls.map((call) => {\n            const {\n              parameters: { methodName, args, value },\n              contract,\n            } = call\n            const options = !value || isZero(value) ? {} : { value }\n\n            return contract.estimateGas[methodName](...args, options)\n              .then((gasEstimate) => {\n                return {\n                  call,\n                  gasEstimate,\n                }\n              })\n              .catch((gasError) => {\n                console.error('Gas estimate failed, trying eth_call to extract error', call)\n\n                return contract.callStatic[methodName](...args, options)\n                  .then((result) => {\n                    console.error('Unexpected successful call after failed estimate gas', call, gasError, result)\n                    return { call, error: new Error('Unexpected issue with estimating the gas. Please try again.') }\n                  })\n                  .catch((callError) => {\n                    console.error('Call threw error', call, callError)\n                    const reason: string = callError.reason || callError.data?.message || callError.message\n                    const errorMessage = `The transaction cannot succeed due to error: ${\n                      reason ?? 'Unknown error, check the logs'\n                    }.`\n\n                    return { call, error: new Error(errorMessage) }\n                  })\n              })\n          }),\n        )\n\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\n        const successfulEstimation = estimatedCalls.find(\n          (el, ix, list): el is SuccessfulCall =>\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]),\n        )\n\n        if (!successfulEstimation) {\n          const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\n          if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error\n          throw new Error('Unexpected error. Please contact support: none of the calls threw an error')\n        }\n\n        const {\n          call: {\n            contract,\n            parameters: { methodName, args, value },\n          },\n          gasEstimate,\n        } = successfulEstimation\n\n        return contract[methodName](...args, {\n          gasLimit: calculateGasMargin(gasEstimate),\n          gasPrice,\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\n        })\n          .then((response: any) => {\n            const inputSymbol = trade.inputAmount.currency.symbol\n            const outputSymbol = trade.outputAmount.currency.symbol\n            const inputAmount = trade.inputAmount.toSignificant(3)\n            const outputAmount = trade.outputAmount.toSignificant(3)\n\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`\n            const withRecipient =\n              recipient === account\n                ? base\n                : `${base} to ${\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\n                      ? shortenAddress(recipientAddressOrName)\n                      : recipientAddressOrName\n                  }`\n\n            addTransaction(response, {\n              summary: withRecipient,\n            })\n\n            return response.hash\n          })\n          .catch((error: any) => {\n            // if the user rejected the tx, pass this along\n            if (error?.code === 4001) {\n              throw new Error('Transaction rejected.')\n            } else {\n              // otherwise, the error was unexpected and we need to convey that\n              console.error(`Swap failed`, error, methodName, args, value)\n              throw new Error(`Swap failed: ${error.message}`)\n            }\n          })\n      },\n      error: null,\n    }\n  }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction, gasPrice])\n}\n","import { Currency, currencyEquals, ETHER, WETH } from '@awswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { tryParseAmount } from '../state/swap/hooks'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { useCurrencyBalance } from '../state/wallet/hooks'\nimport { useWETHContract } from './useContract'\nimport { useCallWithGasPrice } from './useCallWithGasPrice'\n\nexport enum WrapType {\n  NOT_APPLICABLE,\n  WRAP,\n  UNWRAP,\n}\n\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\n/**\n * Given the selected input and output currency, return a wrap callback\n * @param inputCurrency the selected input currency\n * @param outputCurrency the selected output currency\n * @param typedValue the user input value\n */\nexport default function useWrapCallback(\n  inputCurrency: Currency | undefined,\n  outputCurrency: Currency | undefined,\n  typedValue: string | undefined,\n): { wrapType: WrapType; execute?: undefined | (() => Promise<void>); inputError?: string } {\n  const { chainId, account } = useActiveWeb3React()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const wethContract = useWETHContract()\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\n  const addTransaction = useTransactionAdder()\n\n  return useMemo(() => {\n    if (!wethContract || !chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE\n\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\n\n    if (inputCurrency === ETHER && currencyEquals(WETH[chainId], outputCurrency)) {\n      return {\n        wrapType: WrapType.WRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await callWithGasPrice(wethContract, 'deposit', undefined, {\n                    value: `0x${inputAmount.raw.toString(16)}`,\n                  })\n                  addTransaction(txReceipt, { summary: `Wrap ${inputAmount.toSignificant(6)} BNB to WBNB` })\n                } catch (error) {\n                  console.error('Could not deposit', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient BNB balance',\n      }\n    }\n    if (currencyEquals(WETH[chainId], inputCurrency) && outputCurrency === ETHER) {\n      return {\n        wrapType: WrapType.UNWRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await callWithGasPrice(wethContract, 'withdraw', [\n                    `0x${inputAmount.raw.toString(16)}`,\n                  ])\n                  addTransaction(txReceipt, { summary: `Unwrap ${inputAmount.toSignificant(6)} WBNB to BNB` })\n                } catch (error) {\n                  console.error('Could not withdraw', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient WBNB balance',\n      }\n    }\n    return NOT_APPLICABLE\n  }, [wethContract, chainId, inputCurrency, outputCurrency, inputAmount, balance, addTransaction, callWithGasPrice])\n}\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text } from '@pancakeswap/uikit'\n\nconst SafemoonWarning = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Text>{t('To trade SAFEMOON, you must:')} </Text>\n      <Text>• {t('Click on the settings icon')}</Text>\n      <Text mb=\"24px\">• {t('Set your slippage tolerance to 12%+')}</Text>\n      <Text>{t('This is because SafeMoon taxes a 10% fee on each transaction:')}</Text>\n      <Text>• {t('5% fee = redistributed to all existing holders')}</Text>\n      <Text>• {t('5% fee = used to add liquidity')}</Text>\n    </>\n  )\n}\n\nexport default SafemoonWarning\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst BondlyWarning = () => {\n  const { t } = useTranslation()\n\n  return <Text>{t('Warning: BONDLY has been compromised. Please remove liqudity until further notice.')}</Text>\n}\n\nexport default BondlyWarning\n","import React, { useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text, Flex, Checkbox, Button } from '@pancakeswap/uikit'\n\ninterface AcknowledgementProps {\n  handleContinueClick: () => void\n}\n\nconst Acknowledgement: React.FC<AcknowledgementProps> = ({ handleContinueClick }) => {\n  const { t } = useTranslation()\n  const [isConfirmed, setIsConfirmed] = useState(false)\n\n  return (\n    <>\n      <Flex justifyContent=\"space-between\">\n        <Flex alignItems=\"center\">\n          <Checkbox\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={isConfirmed}\n            onChange={() => setIsConfirmed(!isConfirmed)}\n            scale=\"sm\"\n          />\n          <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n\n        <Button disabled={!isConfirmed} onClick={handleContinueClick}>\n          {t('Continue')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default Acknowledgement\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ModalBody, ModalContainer, Message, ModalHeader, Box, Heading } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useTranslation } from 'contexts/Localization'\nimport { WrappedTokenInfo } from 'state/lists/hooks'\nimport SwapWarningTokensConfig from 'config/constants/swapWarningTokens'\nimport SafemoonWarning from './SafemoonWarning'\nimport BondlyWarning from './BondlyWarning'\nimport Acknowledgement from './Acknowledgement'\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 440px;\n`\n\nconst MessageContainer = styled(Message)`\n  align-items: flex-start;\n  justify-content: flex-start;\n`\n\ninterface SwapWarningModalProps {\n  swapCurrency: WrappedTokenInfo\n  onDismiss?: () => void\n}\n\n// Modal is fired by a useEffect and doesn't respond to closeOnOverlayClick prop being set to false\nconst usePreventModalOverlayClick = () => {\n  useEffect(() => {\n    const preventClickHandler = (e) => {\n      e.stopPropagation()\n      e.preventDefault()\n      return false\n    }\n\n    document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n      el.addEventListener('click', preventClickHandler, true)\n    })\n\n    return () => {\n      document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n        el.removeEventListener('click', preventClickHandler, true)\n      })\n    }\n  }, [])\n}\n\nconst SwapWarningModal: React.FC<SwapWarningModalProps> = ({ swapCurrency, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  usePreventModalOverlayClick()\n\n  const TOKEN_WARNINGS = {\n    [getAddress(SwapWarningTokensConfig.safemoon.address)]: {\n      symbol: SwapWarningTokensConfig.safemoon.symbol,\n      component: <SafemoonWarning />,\n    },\n    [getAddress(SwapWarningTokensConfig.bondly.address)]: {\n      symbol: SwapWarningTokensConfig.bondly.symbol,\n      component: <BondlyWarning />,\n    },\n  }\n\n  const SWAP_WARNING = TOKEN_WARNINGS[swapCurrency.address]\n\n  return (\n    <StyledModalContainer minWidth=\"280px\">\n      <ModalHeader background={theme.colors.gradients.cardHeader}>\n        <Heading p=\"12px 24px\">{t('Notice for trading %symbol%', { symbol: SWAP_WARNING.symbol })}</Heading>\n      </ModalHeader>\n      <ModalBody p=\"24px\">\n        <MessageContainer variant=\"warning\" mb=\"24px\">\n          <Box>{SWAP_WARNING.component}</Box>\n        </MessageContainer>\n        <Acknowledgement handleContinueClick={onDismiss} />\n      </ModalBody>\n    </StyledModalContainer>\n  )\n}\n\nexport default SwapWarningModal\n","import React from 'react'\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\n\nconst ArrowDownIcon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 42 42\" {...props}>\n      <rect x=\"0.997314\" y=\"0.633301\" width=\"40\" height=\"40\" rx=\"20\" fill=\"#32324A\" />\n      <path\n        d=\"M17.9973 24.6333L20.9973 27.6333L23.9973 24.6333\"\n        stroke=\"white\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M20.9973 13.6333V27.6333\"\n        stroke=\"white\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </Svg>\n  )\n}\n\nexport default ArrowDownIcon\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { CurrencyAmount, JSBI, Token, Trade } from '@awswap/sdk'\nimport { Text, Box, useModal } from '@pancakeswap/uikit'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { useTranslation } from 'contexts/Localization'\nimport SwapWarningTokens from 'config/constants/swapWarningTokens'\nimport { getAddress } from 'utils/addressHelpers'\nimport MetaPage from 'components/Layout/Page'\nimport AddressInputPanel from './components/AddressInputPanel'\nimport { GreyCard } from '../../components/Card'\nimport Column, { AutoColumn } from '../../components/Layout/Column'\nimport ConfirmSwapModal from './components/ConfirmSwapModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { AutoRow, RowBetween } from '../../components/Layout/Row'\nimport AdvancedSwapDetailsDropdown from './components/AdvancedSwapDetailsDropdown'\nimport confirmPriceImpactWithoutFee from './components/confirmPriceImpactWithoutFee'\nimport { ArrowWrapper, SwapCallbackError, Wrapper } from './components/styleds'\nimport TradePrice from './components/TradePrice'\nimport ImportTokenWarningModal from './components/ImportTokenWarningModal'\nimport ProgressSteps from './components/ProgressSteps'\nimport { AppHeader, AppBody } from '../../components/App'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants'\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\nimport { useCurrency, useAllTokens } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback'\nimport { useSwapCallback } from '../../hooks/useSwapCallback'\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback'\nimport { Field } from '../../state/swap/actions'\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState,\n} from '../../state/swap/hooks'\nimport { useExpertModeManager, useUserSlippageTolerance, useUserSingleHopOnly } from '../../state/user/hooks'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices'\nimport CircleLoader from '../../components/Loader/CircleLoader'\nimport Page from '../Page'\nimport SwapWarningModal from './components/SwapWarningModal'\nimport Button from '../../components/styles/Button'\nimport ArrowDownIcon from './components/ArrowDownIcon'\n\nconst Label = styled(Text)`\n  font-size: 12px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.secondary};\n`\n\nconst StyleButton = styled(Button)`\n  z-index: 1;\n\n  &:hover {\n    z-index: 1;\n  }\n`\n\nexport default function Swap({ history }: RouteComponentProps) {\n  const loadedUrlParams = useDefaultsFromURLSearch()\n\n  const { t } = useTranslation()\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency],\n  )\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens()\n  const importTokensNotInDefault =\n    urlLoadedTokens &&\n    urlLoadedTokens.filter((token: Token) => {\n      return !(token.address in defaultTokens)\n    })\n\n  const { account } = useActiveWeb3React()\n\n  // for expert mode\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\n\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const trade = showWrap ? undefined : v2Trade\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput],\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput],\n  )\n\n  // modal and loading\n  const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\n  )\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient)\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then((hash) => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash })\n      })\n      .catch((error) => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        })\n      })\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn })\n  }, [attemptingTxn, swapErrorMessage, trade, txHash])\n\n  // swap warning state\n  const [swapWarningCurrency, setSwapWarningCurrency] = useState(null)\n  const [onPresentSwapWarningModal] = useModal(<SwapWarningModal swapCurrency={swapWarningCurrency} />)\n\n  const shouldShowSwapWarning = (swapCurrency) => {\n    const isWarningToken = Object.entries(SwapWarningTokens).find((warningTokenConfig) => {\n      const warningTokenData = warningTokenConfig[1]\n      const warningTokenAddress = getAddress(warningTokenData.address)\n      return swapCurrency.address === warningTokenAddress\n    })\n    return Boolean(isWarningToken)\n  }\n\n  useEffect(() => {\n    if (swapWarningCurrency) {\n      onPresentSwapWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [swapWarningCurrency])\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(inputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(inputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n    [onCurrencySelection],\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => {\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(outputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(outputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n\n    [onCurrencySelection],\n  )\n\n  const swapIsUnsupported = useIsTransactionUnsupported(currencies?.INPUT, currencies?.OUTPUT)\n\n  const [onPresentImportTokenWarningModal] = useModal(\n    <ImportTokenWarningModal tokens={importTokensNotInDefault} onCancel={() => history.push('/swap/')} />,\n  )\n\n  useEffect(() => {\n    if (importTokensNotInDefault.length > 0) {\n      onPresentImportTokenWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [importTokensNotInDefault.length])\n\n  const [onPresentConfirmModal] = useModal(\n    <ConfirmSwapModal\n      trade={trade}\n      originalTrade={tradeToConfirm}\n      onAcceptChanges={handleAcceptChanges}\n      attemptingTxn={attemptingTxn}\n      txHash={txHash}\n      recipient={recipient}\n      allowedSlippage={allowedSlippage}\n      onConfirm={handleSwap}\n      swapErrorMessage={swapErrorMessage}\n      customOnDismiss={handleConfirmDismiss}\n    />,\n    true,\n    true,\n    'confirmSwapModal',\n  )\n\n  return (\n    <MetaPage>\n      <Page>\n        <AppBody>\n          <AppHeader title={t('Exchange')} subtitle={t('Trade tokens in an instant')} />\n          <Wrapper id=\"swap-page\">\n            <AutoColumn gap=\"md\">\n              <CurrencyInputPanel\n                label={independentField === Field.OUTPUT && !showWrap && trade ? t('From (estimated)') : t('From')}\n                value={formattedAmounts[Field.INPUT]}\n                showMaxButton={!atMaxAmountInput}\n                currency={currencies[Field.INPUT]}\n                onUserInput={handleTypeInput}\n                onMax={handleMaxInput}\n                onCurrencySelect={handleInputSelect}\n                otherCurrency={currencies[Field.OUTPUT]}\n                id=\"swap-currency-input\"\n              />\n              <AutoColumn justify=\"space-between\">\n                <AutoRow\n                  className=\"icon\"\n                  justify={isExpertMode ? 'space-between' : 'center'}\n                  style={{ padding: '0 1rem' }}\n                >\n                  <ArrowWrapper clickable>\n                    <ArrowDownIcon\n                      width=\"40px\"\n                      onClick={() => {\n                        setApprovalSubmitted(false) // reset 2 step UI for approvals\n                        onSwitchTokens()\n                      }}\n                      color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? 'primary' : 'text'}\n                    />\n                  </ArrowWrapper>\n                  {recipient === null && !showWrap && isExpertMode ? (\n                    <StyleButton variant=\"text\" id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                      {t('+ Add a send (optional)')}\n                    </StyleButton>\n                  ) : null}\n                </AutoRow>\n              </AutoColumn>\n              <CurrencyInputPanel\n                value={formattedAmounts[Field.OUTPUT]}\n                onUserInput={handleTypeOutput}\n                label={independentField === Field.INPUT && !showWrap && trade ? t('To (estimated)') : t('To')}\n                showMaxButton={false}\n                currency={currencies[Field.OUTPUT]}\n                onCurrencySelect={handleOutputSelect}\n                otherCurrency={currencies[Field.INPUT]}\n                id=\"swap-currency-output\"\n              />\n\n              {isExpertMode && recipient !== null && !showWrap ? (\n                <>\n                  <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                    <ArrowWrapper clickable={false}>\n                      <ArrowDownIcon width=\"16px\" />\n                    </ArrowWrapper>\n                    <Button variant=\"text\" id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                      {t('- Remove send')}\n                    </Button>\n                  </AutoRow>\n                  <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n                </>\n              ) : null}\n\n              {showWrap ? null : (\n                <AutoColumn gap=\"8px\" style={{ padding: '0 16px' }}>\n                  {Boolean(trade) && (\n                    <RowBetween align=\"center\">\n                      <Label>{t('Price')}</Label>\n                      <TradePrice\n                        price={trade?.executionPrice}\n                        showInverted={showInverted}\n                        setShowInverted={setShowInverted}\n                      />\n                    </RowBetween>\n                  )}\n                  {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                    <RowBetween align=\"center\">\n                      <Label>{t('Slippage Tolerance')}</Label>\n                      <Text bold color=\"primary\">\n                        {allowedSlippage / 100}%\n                      </Text>\n                    </RowBetween>\n                  )}\n                </AutoColumn>\n              )}\n            </AutoColumn>\n            <Box mt=\"1rem\">\n              {swapIsUnsupported ? (\n                <Button width=\"100%\" disabled mb=\"4px\">\n                  {t('Unsupported Asset')}\n                </Button>\n              ) : !account ? (\n                <ConnectWalletButton width=\"100%\" />\n              ) : showWrap ? (\n                <Button width=\"100%\" disabled={Boolean(wrapInputError)} onClick={onWrap}>\n                  {wrapInputError ??\n                    (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n                </Button>\n              ) : noRoute && userHasSpecifiedInputOutput ? (\n                <GreyCard style={{ textAlign: 'center' }}>\n                  <Text color=\"textSubtle\" mb=\"4px\">\n                    {t('Insufficient liquidity for this trade.')}\n                  </Text>\n                  {singleHopOnly && (\n                    <Text color=\"textSubtle\" mb=\"4px\">\n                      {t('Try enabling multi-hop trades.')}\n                    </Text>\n                  )}\n                </GreyCard>\n              ) : showApproveFlow ? (\n                <RowBetween>\n                  <Button\n                    variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\n                    onClick={approveCallback}\n                    disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                    width=\"48%\"\n                  >\n                    {approval === ApprovalState.PENDING ? (\n                      <AutoRow gap=\"6px\" justify=\"center\">\n                        {t('Enabling')} <CircleLoader stroke=\"white\" />\n                      </AutoRow>\n                    ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                      t('Enabled')\n                    ) : (\n                      t('Enable %asset%', { asset: currencies[Field.INPUT]?.symbol ?? '' })\n                    )}\n                  </Button>\n                  <Button\n                    variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\n                    onClick={() => {\n                      if (isExpertMode) {\n                        handleSwap()\n                      } else {\n                        setSwapState({\n                          tradeToConfirm: trade,\n                          attemptingTxn: false,\n                          swapErrorMessage: undefined,\n                          txHash: undefined,\n                        })\n                        onPresentConfirmModal()\n                      }\n                    }}\n                    width=\"48%\"\n                    id=\"swap-button\"\n                    disabled={\n                      !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\n                    }\n                  >\n                    {priceImpactSeverity > 3 && !isExpertMode\n                      ? t('Price Impact High')\n                      : priceImpactSeverity > 2\n                      ? t('Swap Anyway')\n                      : t('Swap')}\n                  </Button>\n                </RowBetween>\n              ) : (\n                <Button\n                  variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        txHash: undefined,\n                      })\n                      onPresentConfirmModal()\n                    }\n                  }}\n                  id=\"swap-button\"\n                  width=\"100%\"\n                  disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n                >\n                  {swapInputError ||\n                    (priceImpactSeverity > 3 && !isExpertMode\n                      ? `Price Impact Too High`\n                      : priceImpactSeverity > 2\n                      ? t('Swap Anyway')\n                      : t('Swap'))}\n                </Button>\n              )}\n              {showApproveFlow && (\n                <Column style={{ marginTop: '1rem' }}>\n                  <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\n                </Column>\n              )}\n              {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n            </Box>\n          </Wrapper>\n        </AppBody>\n        {!swapIsUnsupported ? (\n          <AdvancedSwapDetailsDropdown trade={trade} />\n        ) : (\n          <UnsupportedCurrencyFooter currencies={[currencies.INPUT, currencies.OUTPUT]} />\n        )}\n      </Page>\n    </MetaPage>\n  )\n}\n","import { Percent } from '@awswap/sdk'\nimport { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from '../../../config/constants'\n\n/**\n * Given the price impact, get user confirmation.\n *\n * @param priceImpactWithoutFee price impact of the trade without the fee.\n */\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee: Percent): boolean {\n  if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\n    return (\n      // eslint-disable-next-line no-alert\n      window.prompt(\n        `This swap has a price impact of at least ${PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(\n          0,\n        )}%. Please type the word \"confirm\" to continue with this swap.`,\n      ) === 'confirm'\n    )\n  }\n  if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\n    // eslint-disable-next-line no-alert\n    return window.confirm(\n      `This swap has a price impact of at least ${ALLOWED_PRICE_IMPACT_HIGH.toFixed(\n        0,\n      )}%. Please confirm that you would like to continue with this swap.`,\n    )\n  }\n  return true\n}\n","import React from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\nimport AddLiquidity from './index'\n\nexport function RedirectToAddLiquidity() {\n  return <Redirect to=\"/add/\" />\n}\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40}|BNB)-(0x[a-fA-F0-9]{40}|BNB)$/\nexport function RedirectOldAddLiquidityPathStructure(props: RouteComponentProps<{ currencyIdA: string }>) {\n  const {\n    match: {\n      params: { currencyIdA },\n    },\n  } = props\n  const match = currencyIdA.match(OLD_PATH_STRUCTURE)\n  if (match?.length) {\n    return <Redirect to={`/add/${match[1]}/${match[2]}`} />\n  }\n\n  return <AddLiquidity {...props} />\n}\n\nexport function RedirectDuplicateTokenIds(props: RouteComponentProps<{ currencyIdA: string; currencyIdB: string }>) {\n  const {\n    match: {\n      params: { currencyIdA, currencyIdB },\n    },\n  } = props\n  if (currencyIdA.toLowerCase() === currencyIdB.toLowerCase()) {\n    return <Redirect to={`/add/${currencyIdA}`} />\n  }\n  return <AddLiquidity {...props} />\n}\n","import React from 'react'\nimport { RouteComponentProps, Redirect } from 'react-router-dom'\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40})-(0x[a-fA-F0-9]{40})$/\n\nfunction RedirectOldRemoveLiquidityPathStructure({\n  match: {\n    params: { tokens },\n  },\n}: RouteComponentProps<{ tokens: string }>) {\n  if (!OLD_PATH_STRUCTURE.test(tokens)) {\n    return <Redirect to=\"/pool\" />\n  }\n  const [currency0, currency1] = tokens.split('-')\n\n  return <Redirect to={`/remove/${currency0}/${currency1}`} />\n}\nexport default RedirectOldRemoveLiquidityPathStructure\n","import React from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\n\n// Redirects to swap but only replace the pathname\nexport function RedirectPathToSwapOnly({ location }: RouteComponentProps) {\n  return <Redirect to={{ ...location, pathname: '/swap' }} />\n}\n\n// Redirects from the /swap/:outputCurrency path to the /swap?outputCurrency=:outputCurrency format\nexport function RedirectToSwap(props: RouteComponentProps<{ outputCurrency: string }>) {\n  const {\n    location,\n    location: { search },\n    match: {\n      params: { outputCurrency },\n    },\n  } = props\n\n  return (\n    <Redirect\n      to={{\n        ...location,\n        pathname: '/swap',\n        search:\n          search && search.length > 1\n            ? `${search}&outputCurrency=${outputCurrency}`\n            : `?outputCurrency=${outputCurrency}`,\n      }}\n    />\n  )\n}\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport confetti from 'canvas-confetti'\nimport { Modal, Text, Button, Flex, InjectedModalProps } from '@pancakeswap/uikit'\nimport history from 'routerHistory'\nimport { delay } from 'lodash'\nimport { useTranslation } from 'contexts/Localization'\nimport { Nft } from 'config/constants/types'\n\nconst NftImage = styled.img`\n  border-radius: 50%;\n  height: 128px;\n  margin-bottom: 24px;\n  margin-right: 8px;\n  width: 128px;\n`\n\nconst showConfetti = () => {\n  confetti({\n    resize: true,\n    particleCount: 200,\n    startVelocity: 30,\n    gravity: 0.5,\n    spread: 350,\n    origin: {\n      x: 0.5,\n      y: 0.3,\n    },\n  })\n}\n\ninterface NftGiveawayModalProps extends InjectedModalProps {\n  nfts: Nft[]\n}\n\nconst NftGiveawayModal: React.FC<NftGiveawayModalProps> = ({ onDismiss, nfts }) => {\n  const { t } = useTranslation()\n\n  // This is required because the modal exists outside the Router\n  const handleClick = () => {\n    onDismiss()\n    history.push('/collectibles')\n  }\n\n  useEffect(() => {\n    delay(showConfetti, 100)\n  }, [])\n\n  const getImages = () => {\n    return nfts.map((nft) => <NftImage key={nft.variationId} src={`/images/nfts/${nft.images.md}`} />)\n  }\n\n  return (\n    <Modal title={t('Congratulations!')} onDismiss={onDismiss}>\n      <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\n        <Flex flexWrap=\"wrap\" alignItems=\"center\" justifyContent=\"center\">\n          {getImages()}\n        </Flex>\n        <Text textAlign=\"center\" bold color=\"secondary\" fontSize=\"24px\" mb=\"24px\">\n          {nfts.length > 1 ? t('You won multiple collectibles!') : t('You won a collectible!')}\n        </Text>\n        <Button onClick={handleClick}>{t('Claim now')}</Button>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default NftGiveawayModal\n","import React, { useEffect, useRef, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { useWeb3React } from '@web3-react/core'\nimport { useModal } from '@pancakeswap/uikit'\nimport { Nft } from 'config/constants/types'\nimport nfts from 'config/constants/nfts'\nimport NftGiveawayModal from './NftGiveawayModal'\nimport useBunnySpecialLottery from '../hooks/useBunnySpecialLottery'\n\ninterface GlobalCheckClaimStatusProps {\n  excludeLocations: string[]\n}\n\n/**\n * This is represented as a component rather than a hook because we need to keep it\n * inside the Router.\n *\n * TODO: Put global checks in redux or make a generic area to house global checks\n */\nconst GlobalCheckClaimStatus: React.FC<GlobalCheckClaimStatusProps> = ({ excludeLocations }) => {\n  const hasDisplayedModal = useRef(false)\n  const [claimableNfts, setClaimableNfts] = useState<Nft[]>([])\n  const [onPresentGiftModal] = useModal(<NftGiveawayModal nfts={claimableNfts} />)\n  const { account } = useWeb3React()\n  const { pathname } = useLocation()\n  const { canClaimBaller, canClaimLottie, canClaimLucky } = useBunnySpecialLottery()\n\n  // Check claim status\n  useEffect(() => {\n    const fetchClaimStatus = async () => {\n      const claimable: Nft[] = []\n\n      const nftConfigMap = {\n        lottie: nfts.find((nft) => nft.identifier === 'lottie'),\n        lucky: nfts.find((nft) => nft.identifier === 'lucky'),\n        baller: nfts.find((nft) => nft.identifier === 'baller'),\n      }\n\n      const { canClaim: isBallerClaimable } = await canClaimBaller()\n      const { canClaim: isLottieClaimable } = await canClaimLottie()\n      const { canClaim: isLuckyClaimable } = await canClaimLucky()\n\n      if (isBallerClaimable) {\n        claimable.push(nftConfigMap.baller)\n      }\n\n      if (isLottieClaimable) {\n        claimable.push(nftConfigMap.lottie)\n      }\n\n      if (isLuckyClaimable) {\n        claimable.push(nftConfigMap.lucky)\n      }\n\n      setClaimableNfts(claimable)\n    }\n\n    if (account) {\n      fetchClaimStatus()\n    }\n  }, [account, canClaimBaller, canClaimLottie, canClaimLucky])\n\n  // Check if we need to display the modal\n  useEffect(() => {\n    const matchesSomeLocations = excludeLocations.some((location) => pathname.includes(location))\n\n    if (claimableNfts.length > 0 && !matchesSomeLocations && !hasDisplayedModal.current) {\n      onPresentGiftModal()\n      hasDisplayedModal.current = true\n    }\n  }, [pathname, excludeLocations, hasDisplayedModal, onPresentGiftModal, claimableNfts])\n\n  // Reset the check flag when account changes\n  useEffect(() => {\n    hasDisplayedModal.current = false\n  }, [account, hasDisplayedModal])\n\n  return null\n}\n\nexport default GlobalCheckClaimStatus\n","import React, { lazy } from 'react'\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { ResetCSS } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport useEagerConnect from 'hooks/useEagerConnect'\nimport { usePollBlockNumber } from 'state/block/hooks'\nimport { usePollCoreFarmData } from 'state/farms/hooks'\nimport { useFetchProfile } from 'state/profile/hooks'\nimport { DatePickerPortal } from 'components/DatePicker'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\nimport { ToastListener } from './contexts/ToastsContext'\nimport PageLoader from './components/Loader/PageLoader'\nimport EasterEgg from './components/EasterEgg'\nimport history from './routerHistory'\n// Views included in the main bundle\nimport Pools from './views/Pools'\nimport Swap from './views/Swap'\nimport {\n  RedirectDuplicateTokenIds,\n  RedirectOldAddLiquidityPathStructure,\n  RedirectToAddLiquidity,\n} from './views/AddLiquidity/redirects'\nimport RedirectOldRemoveLiquidityPathStructure from './views/RemoveLiquidity/redirects'\nimport { RedirectPathToSwapOnly, RedirectToSwap } from './views/Swap/redirects'\nimport GlobalCheckClaimStatus from './views/Collectibles/components/GlobalCheckClaimStatus'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page\nconst Farms = lazy(() => import('./views/Farms'))\nconst FarmAuction = lazy(() => import('./views/FarmAuction'))\nconst Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\nconst Collectibles = lazy(() => import('./views/Collectibles'))\n\nconst AddLiquidity = lazy(() => import('./views/AddLiquidity'))\nconst Liquidity = lazy(() => import('./views/Pool'))\nconst PoolFinder = lazy(() => import('./views/PoolFinder'))\nconst RemoveLiquidity = lazy(() => import('./views/RemoveLiquidity'))\n\n// This config is required for number formatting\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  usePollBlockNumber()\n  useEagerConnect()\n  useFetchProfile()\n  usePollCoreFarmData()\n\n  return (\n    <Router history={history}>\n      <ResetCSS />\n      <GlobalStyle />\n      <GlobalCheckClaimStatus excludeLocations={['/collectibles']} />\n      <Menu>\n        <SuspenseWithChunkError fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Redirect to=\"/swap\" />\n            </Route>\n            <Route exact path=\"/lppools/auction\">\n              <FarmAuction />\n            </Route>\n            <Route path=\"/lppools\">\n              <Farms />\n            </Route>\n            <Route path=\"/staking\">\n              <Pools />\n            </Route>\n            <Route path=\"/ifo\">\n              <Ifos />\n            </Route>\n            <Route path=\"/collectibles\">\n              <Collectibles />\n            </Route>\n\n            {/* Using this format because these components use routes injected props. We need to rework them with hooks */}\n            <Route exact strict path=\"/swap\" component={Swap} />\n            <Route exact strict path=\"/swap/:outputCurrency\" component={RedirectToSwap} />\n            <Route exact strict path=\"/send\" component={RedirectPathToSwapOnly} />\n            <Route exact strict path=\"/find\" component={PoolFinder} />\n            <Route exact strict path=\"/liquidity\" component={Liquidity} />\n            <Route exact strict path=\"/create\" component={RedirectToAddLiquidity} />\n            <Route exact path=\"/add\" component={AddLiquidity} />\n            <Route exact path=\"/add/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\n            <Route exact path=\"/add/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\n            <Route exact path=\"/create\" component={AddLiquidity} />\n            <Route exact path=\"/create/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\n            <Route exact path=\"/create/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\n            <Route exact strict path=\"/remove/:tokens\" component={RedirectOldRemoveLiquidityPathStructure} />\n            <Route exact strict path=\"/remove/:currencyIdA/:currencyIdB\" component={RemoveLiquidity} />\n\n            <Route path=\"/farms\">\n              <Redirect to=\"/lppools\" />\n            </Route>\n            {/* Redirect */}\n            <Route path=\"/pool\">\n              <Redirect to=\"/liquidity\" />\n            </Route>\n            <Route path=\"/pools\">\n              <Redirect to=\"/staking\" />\n            </Route>\n            <Route path=\"/syrup\">\n              <Redirect to=\"/staking\" />\n            </Route>\n            <Route path=\"/nft\">\n              <Redirect to=\"/collectibles\" />\n            </Route>\n\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </SuspenseWithChunkError>\n      </Menu>\n      <EasterEgg iterations={2} />\n      <ToastListener />\n      <DatePickerPortal />\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import React from 'react'\nimport { ModalProvider, light, dark } from '@pancakeswap/uikit'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { HelmetProvider } from 'react-helmet-async'\nimport { Provider } from 'react-redux'\nimport { ThemeProvider } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\nimport { getLibrary } from 'utils/web3React'\nimport { LanguageProvider } from 'contexts/Localization'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport { ToastsProvider } from 'contexts/ToastsContext'\nimport store from 'state'\n\n// console.log(light.colors)\n// light.colors.textSubtle = '#BC232C'\n// light.colors.input = '#fff'\n// light.colors.inputSecondary = '#fff'\n\nconst resetTheme = () => {\n  // 修改主色\n  light.colors.primary = '#F56020'\n  dark.colors.primary = '#F56020'\n\n  // light.colors.input = '#BC232C'\n\n  // 修改默认边框\n  light.radii.small = '2px'\n  light.radii.default = '4px'\n  light.radii.card = '8px'\n  dark.radii.small = '2px'\n  dark.radii.default = '4px'\n  dark.radii.card = '8px'\n}\n\nresetTheme()\n\nconst ThemeProviderWrapper = (props) => {\n  const [isDark] = useThemeManager()\n  return <ThemeProvider theme={isDark ? dark : light} {...props} />\n}\n\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Provider store={store}>\n        <ToastsProvider>\n          <HelmetProvider>\n            <ThemeProviderWrapper>\n              <LanguageProvider>\n                <RefreshContextProvider>\n                  <ModalProvider>{children}</ModalProvider>\n                </RefreshContextProvider>\n              </LanguageProvider>\n            </ThemeProviderWrapper>\n          </HelmetProvider>\n        </ToastsProvider>\n      </Provider>\n    </Web3ReactProvider>\n  )\n}\n\nexport default Providers\n","import React, { useMemo, ReactNode } from 'react'\nimport ReactDOM from 'react-dom'\nimport useActiveWeb3React from './hooks/useActiveWeb3React'\nimport { BLOCKED_ADDRESSES } from './config/constants'\nimport ListsUpdater from './state/lists/updater'\nimport MulticallUpdater from './state/multicall/updater'\nimport TransactionUpdater from './state/transactions/updater'\nimport App from './App'\nimport Providers from './Providers'\n\nfunction Updaters() {\n  return (\n    <>\n      <ListsUpdater />\n      <TransactionUpdater />\n      <MulticallUpdater />\n    </>\n  )\n}\n\nfunction Blocklist({ children }: { children: ReactNode }) {\n  const { account } = useActiveWeb3React()\n  const blocked: boolean = useMemo(() => Boolean(account && BLOCKED_ADDRESSES.indexOf(account) !== -1), [account])\n  if (blocked) {\n    return <div>Blocked address</div>\n  }\n  return <>{children}</>\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Blocklist>\n      <Providers>\n        <Updaters />\n        <App />\n      </Providers>\n    </Blocklist>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","import React from 'react'\nimport { HelpIcon, useTooltip, Box, BoxProps, Placement } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\ninterface Props extends BoxProps {\n  text: string | React.ReactNode\n  placement?: Placement\n}\n\nconst QuestionWrapper = styled.div`\n  :hover,\n  :focus {\n    opacity: 0.7;\n  }\n`\n\nconst QuestionHelper: React.FC<Props> = ({ text, placement = 'right-end', ...props }) => {\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(text, { placement, trigger: 'hover' })\n\n  return (\n    <Box {...props}>\n      {tooltipVisible && tooltip}\n      <QuestionWrapper ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" width=\"16px\" />\n      </QuestionWrapper>\n    </Box>\n  )\n}\n\nexport default QuestionHelper\n","import { CurrencyAmount, Fraction, JSBI, Percent, TokenAmount, Trade } from '@awswap/sdk'\nimport {\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\n  ALLOWED_PRICE_IMPACT_HIGH,\n  ALLOWED_PRICE_IMPACT_LOW,\n  ALLOWED_PRICE_IMPACT_MEDIUM,\n} from '../config/constants'\n\nimport { Field } from '../state/swap/actions'\nimport { basisPointsToPercent } from './index'\n\nconst BASE_FEE = new Percent(JSBI.BigInt(25), JSBI.BigInt(10000))\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\n\n// computes price breakdown for the trade\nexport function computeTradePriceBreakdown(trade?: Trade | null): {\n  priceImpactWithoutFee: Percent | undefined\n  realizedLPFee: CurrencyAmount | undefined | null\n} {\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n  const realizedLPFee = !trade\n    ? undefined\n    : ONE_HUNDRED_PERCENT.subtract(\n        trade.route.pairs.reduce<Fraction>(\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\n          ONE_HUNDRED_PERCENT,\n        ),\n      )\n\n  // remove lp fees from price impact\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\n\n  // the x*y=k impact\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\n    : undefined\n\n  // the amount of the input that accrues to LPs\n  const realizedLPFeeAmount =\n    realizedLPFee &&\n    trade &&\n    (trade.inputAmount instanceof TokenAmount\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\n\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\n}\n\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\nexport function computeSlippageAdjustedAmounts(\n  trade: Trade | undefined,\n  allowedSlippage: number,\n): { [field in Field]?: CurrencyAmount } {\n  const pct = basisPointsToPercent(allowedSlippage)\n  return {\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\n  }\n}\n\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\n  return 0\n}\n\nexport function formatExecutionPrice(trade?: Trade, inverted?: boolean): string {\n  if (!trade) {\n    return ''\n  }\n  return inverted\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\n        trade.outputAmount.currency.symbol\n      }`\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\n        trade.inputAmount.currency.symbol\n      }`\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface Call {\n  address: string\n  callData: string\n}\n\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nconst LOWER_HEX_REGEX = /^0x[a-f0-9]*$/\nexport function toCallKey(call: Call): string {\n  if (!ADDRESS_REGEX.test(call.address)) {\n    throw new Error(`Invalid address: ${call.address}`)\n  }\n  if (!LOWER_HEX_REGEX.test(call.callData)) {\n    throw new Error(`Invalid hex: ${call.callData}`)\n  }\n  return `${call.address}-${call.callData}`\n}\n\nexport function parseCallKey(callKey: string): Call {\n  const pcs = callKey.split('-')\n  if (pcs.length !== 2) {\n    throw new Error(`Invalid call key: ${callKey}`)\n  }\n  return {\n    address: pcs[0],\n    callData: pcs[1],\n  }\n}\n\nexport interface ListenerOptions {\n  // how often this data should be fetched, by default 1\n  readonly blocksPerFetch?: number\n}\n\nexport const addMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/addMulticallListeners',\n)\nexport const removeMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/removeMulticallListeners',\n)\nexport const fetchingMulticallResults = createAction<{ chainId: number; calls: Call[]; fetchingBlockNumber: number }>(\n  'multicall/fetchingMulticallResults',\n)\nexport const errorFetchingMulticallResults = createAction<{\n  chainId: number\n  calls: Call[]\n  fetchingBlockNumber: number\n}>('multicall/errorFetchingMulticallResults')\nexport const updateMulticallResults = createAction<{\n  chainId: number\n  blockNumber: number\n  results: {\n    [callKey: string]: string | null\n  }\n}>('multicall/updateMulticallResults')\n","import { Nft, NftSource, NftType } from './types'\n\nexport const IPFS_GATEWAY = 'https://ipfs.io/ipfs'\n\nexport const nftSources: NftSource = {\n  [NftType.PANCAKE]: {\n    address: {\n      1280: '',\n    },\n    identifierKey: 'image',\n  },\n  [NftType.MIXIE]: {\n    address: {\n      1280: '',\n    },\n    identifierKey: 'image',\n  },\n}\n\nconst Nfts: Nft[] = [\n  {\n    name: 'Baller',\n    description: 'Absolute (lottery) baller.',\n    images: {\n      lg: 'baller-lg.png',\n      md: 'baller-md.png',\n      sm: 'baller-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmeMfJk6yxYmMd41ThDpqcdEJmKXZTF9EmFeP49D15NvsF/baller.png`,\n    },\n    video: {\n      webm: `${IPFS_GATEWAY}/QmeMfJk6yxYmMd41ThDpqcdEJmKXZTF9EmFeP49D15NvsF/baller.webm`,\n      mp4: `${IPFS_GATEWAY}/QmeMfJk6yxYmMd41ThDpqcdEJmKXZTF9EmFeP49D15NvsF/baller.mp4`,\n    },\n    sortOrder: 999,\n    identifier: 'baller',\n    type: NftType.PANCAKE,\n    variationId: 20,\n  },\n  {\n    name: 'Lucky',\n    description: \"Lucky's got the golden ticket!\",\n    images: {\n      lg: 'lucky-lg.png',\n      md: 'lucky-md.png',\n      sm: 'lucky-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmQzwfooRxLKigK7XBJzsQbP4DBpZW8jRM1sq5wrJLg6nF/lucky.png`,\n    },\n    video: {\n      webm: `${IPFS_GATEWAY}/QmQzwfooRxLKigK7XBJzsQbP4DBpZW8jRM1sq5wrJLg6nF/lucky.webm`,\n      mp4: `${IPFS_GATEWAY}/QmQzwfooRxLKigK7XBJzsQbP4DBpZW8jRM1sq5wrJLg6nF/lucky.mp4`,\n    },\n    sortOrder: 999,\n    identifier: 'lucky',\n    type: NftType.PANCAKE,\n    variationId: 19,\n  },\n  {\n    name: 'Lottie',\n    description: \"Lottie's looking hotto for lotto!\",\n    images: {\n      lg: 'lottie-lg.png',\n      md: 'lottie-md.png',\n      sm: 'lottie-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmWnhyxSrD8v9bx5tE9mDkwW853bpjoCXGd7o2fe1BtQJ8/lottie.png`,\n    },\n    video: {\n      webm: `${IPFS_GATEWAY}/QmWnhyxSrD8v9bx5tE9mDkwW853bpjoCXGd7o2fe1BtQJ8/lottie.webm`,\n      mp4: `${IPFS_GATEWAY}/QmWnhyxSrD8v9bx5tE9mDkwW853bpjoCXGd7o2fe1BtQJ8/lottie.mp4`,\n    },\n    sortOrder: 999,\n    identifier: 'lottie',\n    type: NftType.PANCAKE,\n    variationId: 18,\n  },\n  {\n    name: 'Claire',\n    description: 'Can Claire the clairvoyant see what’s in the cards for you?',\n    images: {\n      lg: 'claire-lg.png',\n      md: 'claire-md.png',\n      sm: 'claire-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmRa2WbGnqdgUzrYXxZWv549BDxq3heYridJeoWGcebcU8/claire.png`,\n    },\n    sortOrder: 999,\n    identifier: 'claire',\n    type: NftType.PANCAKE,\n    variationId: 17,\n  },\n  {\n    name: 'Syrup Soak',\n    description: 'Ahh... what could be sweeter than a syrupy soak?',\n    images: {\n      lg: 'soak-lg.png',\n      md: 'soak-md.png',\n      sm: 'soak-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.png`,\n    },\n    video: {\n      webm: `${IPFS_GATEWAY}/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.webm`,\n      mp4: `${IPFS_GATEWAY}/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.mp4`,\n    },\n    sortOrder: 999,\n    identifier: 'syrup-soak',\n    type: NftType.PANCAKE,\n    variationId: 16,\n  },\n  {\n    name: 'Mixie v1',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-1-lg.png',\n      md: 'mixie-1-md.png',\n      sm: 'mixie-1-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/001-Chef-Mixie.png`,\n    },\n    sortOrder: 999,\n    identifier: '001-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 1,\n  },\n  {\n    name: 'Mixie v2',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-2-lg.png',\n      md: 'mixie-2-md.png',\n      sm: 'mixie-2-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/002-Chef-Mixie.png`,\n    },\n    sortOrder: 999,\n    identifier: '002-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 2,\n  },\n  {\n    name: 'Mixie v3',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-3-lg.png',\n      md: 'mixie-3-md.png',\n      sm: 'mixie-3-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/003-Chef-Mixie.png`,\n    },\n    sortOrder: 999,\n    identifier: '003-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 3,\n  },\n  {\n    name: 'Easter ‘21 Champions',\n    description: 'Eggscellent! Celebrating Syrup Storm winning the Easter Battle!',\n    images: {\n      lg: 'easter-champion-storm-lg.png',\n      md: 'easter-champion-storm-md.png',\n      sm: 'easter-champion-storm-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.png'`,\n    },\n    video: {\n      webm: `${IPFS_GATEWAY}/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.webm`,\n      mp4: `${IPFS_GATEWAY}/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.mp4`,\n    },\n    sortOrder: 999,\n    identifier: 'easter-champion-storm',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Cakeston Easter '21\",\n    description: 'Melting Easter eggs and melting hearts!',\n    images: {\n      lg: 'cakeston-easter-21-lg.png',\n      md: 'cakeston-easter-21-md.png',\n      sm: 'cakeston-easter-21-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-caker.png`,\n    },\n    sortOrder: 999,\n    identifier: 'easter-caker',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Flipsie Easter '21\",\n    description: 'Watch out for Flipsie’s spatula smash!',\n    images: {\n      lg: 'flipsie-easter-21-lg.png',\n      md: 'flipsie-easter-21-md.png',\n      sm: 'flipsie-easter-21-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-flipper.png`,\n    },\n    sortOrder: 999,\n    identifier: 'easter-flipper',\n    type: NftType.PANCAKE,\n    variationId: 14,\n  },\n  {\n    name: \"Stormy Easter '21\",\n    description: 'Do you like chocolate with your syrup? Go long!',\n    images: {\n      lg: 'stormy-easter-21-lg.png',\n      md: 'stormy-easter-21-md.png',\n      sm: 'stormy-easter-21-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-storm.png`,\n    },\n    sortOrder: 999,\n    identifier: 'easter-storm',\n    type: NftType.PANCAKE,\n    variationId: 12,\n  },\n  {\n    name: 'Bullish',\n    description: 'Happy Niu Year! This bunny’s excited for the year of the bull (market!)',\n    images: {\n      lg: 'bullish-lg.png',\n      md: 'bullish-md.png',\n      sm: 'bullish-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.png`,\n    },\n    video: {\n      webm: `${IPFS_GATEWAY}/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.webm`,\n      mp4: `${IPFS_GATEWAY}/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.mp4`,\n    },\n    sortOrder: 999,\n    identifier: 'bullish',\n    type: NftType.PANCAKE,\n    variationId: 11,\n  },\n  {\n    name: 'Hiccup',\n    description: \"Oopsie daisy! Hiccup's had a bit of an accident. Poor little fella.\",\n    images: {\n      lg: 'hiccup-lg.png',\n      md: 'hiccup-md.png',\n      sm: 'hiccup-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmQ6EE6gkVzAQUdQLLM7CyrnME6LZHCoy92ZERW8HXmyjw/hiccup.png`,\n    },\n    sortOrder: 999,\n    identifier: 'hiccup',\n    type: NftType.PANCAKE,\n    variationId: 10,\n  },\n  {\n    name: 'Sleepy',\n    description: 'Aww, looks like eating pancakes all day is tough work. Sweet dreams!',\n    images: {\n      lg: 'sleepy-lg.png',\n      md: 'sleepy-md.png',\n      sm: 'sleepy-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sleepy.png`,\n      blur: 'sleepy-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sleepy',\n    type: NftType.PANCAKE,\n    variationId: 5,\n  },\n  {\n    name: 'Sunny',\n    description: 'Sunny is always cheerful when there are pancakes around. Smile!',\n    images: {\n      lg: 'sunny-lg.png',\n      md: 'sunny-md.png',\n      sm: 'sunny-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sunny.png`,\n      blur: 'sunny-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sunny',\n    type: NftType.PANCAKE,\n    variationId: 9,\n  },\n  {\n    name: 'Churro',\n    description: \"Don't let that dopey smile deceive you... Churro's a master CAKE chef!\",\n    images: {\n      lg: 'churro-lg.png',\n      md: 'churro-md.png',\n      sm: 'churro-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/churro.png`,\n      blur: 'churro-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'churro',\n    type: NftType.PANCAKE,\n    variationId: 8,\n  },\n  {\n    name: 'Dollop',\n    description: \"Nommm... Oh hi, I'm just meditating on the meaning of CAKE.\",\n    images: {\n      lg: 'dollop-lg.png',\n      md: 'dollop-md.png',\n      sm: 'dollop-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/dollop.png`,\n      blur: 'dollop-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'dollop',\n    type: NftType.PANCAKE,\n    variationId: 6,\n  },\n  {\n    name: 'Twinkle',\n    description: \"Three guesses what's put that twinkle in those eyes! (Hint: it's CAKE)\",\n    images: {\n      lg: 'twinkle-lg.png',\n      md: 'twinkle-md.png',\n      sm: 'twinkle-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/twinkle.png`,\n      blur: 'twinkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'twinkle',\n    type: NftType.PANCAKE,\n    variationId: 7,\n  },\n  {\n    name: 'Swapsies',\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\n    images: {\n      lg: 'swapsies-lg.png',\n      md: 'swapsies-md.png',\n      sm: 'swapsies-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png`,\n      blur: 'swapsies-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'swapsies',\n    type: NftType.PANCAKE,\n    variationId: 0,\n  },\n  {\n    name: 'Drizzle',\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\n    images: {\n      lg: 'drizzle-lg.png',\n      md: 'drizzle-md.png',\n      sm: 'drizzle-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png`,\n      blur: 'drizzle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'drizzle',\n    type: NftType.PANCAKE,\n    variationId: 1,\n  },\n  {\n    name: 'Blueberries',\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\n    images: {\n      lg: 'blueberries-lg.png',\n      md: 'blueberries-md.png',\n      sm: 'blueberries-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png`,\n      blur: 'blueberries-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'blueberries',\n    type: NftType.PANCAKE,\n    variationId: 2,\n  },\n  {\n    name: 'Circular',\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\n    images: {\n      lg: 'circular-lg.png',\n      md: 'circular-md.png',\n      sm: 'circular-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png`,\n      blur: 'circular-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'circular',\n    type: NftType.PANCAKE,\n    variationId: 3,\n  },\n  {\n    name: 'Sparkle',\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\n    images: {\n      lg: 'sparkle-lg.png',\n      md: 'sparkle-md.png',\n      sm: 'sparkle-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png`,\n      blur: 'sparkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sparkle',\n    type: NftType.PANCAKE,\n    variationId: 4,\n  },\n]\n\nexport default Nfts\n"],"sourceRoot":""}
