{"version":3,"sources":["views/Ifos/components/HeroNew.tsx","views/Ifos/components/IfoLayout.tsx","components/FoldableText/indexNew.tsx","views/Ifos/components/IfoQuestions/config.ts","views/Ifos/components/IfoQuestions/index.tsx","views/Ifos/CurrentIfo.tsx","views/Ifos/index.tsx"],"names":["StyledHero","styled","div","HeroNew","props","t","useTranslation","title","caption","mb","mt","padding","Container","as","scale","color","bold","fontWeight","fontSize","IfoLayout","theme","colors","textSubtle","Wrapper","Flex","StyledImage","Image","StyledExpandableLabelWrapper","FlexBox","FlexTitle","Text1","Text","Text2","StyledChildrenFlex","isExpanded","inputSecondary","FoldableText","url","children","useState","setIsExpanded","flexDirection","onClick","alignItems","pb","src","alt","width","height","expanded","e","stopPropagation","config","description","id","websiteButton","seeButton","startBlock","endBlock","estimatedEndTime","salesVolumes","totalFinancing","unitPrice","myLPBalance","oldNumberOfParticipants","quantityToBeCollected","numberOfParticipants","participateIn","receive","CardBodys","mediaQueries","md","CardBody","DetailsWrapper","FlexOuterLayer","FlexLableBox","DetailsLeft","DetailsRight","ButtonStyle","TextLable","TextValue","TextButtonLP","InputBox","input","TextButtonRed","IfoQuestions","style","marginBottom","maxWidth","map","i","length","item","position","border","borderRadius","margin","type","placeholder","lineHeight","cursor","left","textAlign","FrameGroup","ifosConfig","find","ifo","isActive","Frame1","isDark","Frame2","Frame3","Ifo","Ifos","path","useRouteMatch","exact","CurrentIfo"],"mappings":"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","file":"static/js/10.eb22f3ef.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Box, Heading, Text } from '@pancakeswap/uikit'\nimport Container from 'components/Layout/Container'\nimport { useTranslation } from 'contexts/Localization'\n\n// const getGradient = (isDark: boolean) => {\n//   if (isDark) {\n//     return '/images/banner.png'\n//   }\n//   return '/images/squares.svg'\n// }\n\n// background: url(${({ theme }) => getGradient(theme.isDark)}) no-repeat;\n// background-size: 100% auto;\n// background-position: 20px;\n// padding-bottom: 40px;\n// padding-top: 40px;\n\nconst StyledHero = styled.div`\n  // background: linear-gradient(256.48deg, #f8dc6c -1.81%, #fe7061 25.18%, #e13c78 58.54%, #d13030 102.57%);\n  background: linear-gradient(256.48deg, #9443e5 -1.81%, #793ef6 32.29%, #5a40ee 64.06%, #5f42e9 102.57%);\n  padding: 10px;\n  border-radius: 10px;\n  max-width: 1200px;\n  margin: 0 auto;\n`\nconst HeroNew = (props) => {\n  const { t } = useTranslation()\n  const { title, caption } = props\n  return (\n    <Box mb=\"32px\" mt=\"32px\" padding=\"24px\">\n      <StyledHero>\n        <Container>\n          <Heading as=\"h2\" scale=\"lg\" mb=\"10px\" mt=\"10px\" color=\"#fff\" bold={false} fontWeight=\"400\">\n            {t(title)}\n          </Heading>\n          <Text bold fontSize=\"16px\" color=\"#fff\" mb=\"10px\" fontWeight=\"400\">\n            {t(caption)}\n          </Text>\n        </Container>\n      </StyledHero>\n    </Box>\n  )\n}\n\nexport default HeroNew\n","import styled from 'styled-components'\n\nconst IfoLayout = styled.div`\n  margin-top: -20px;\n  padding: 0;\n  // display: grid;\n  // grid-gap: 32px;\n  // padding: 40px 0;\n  // border-top: 2px solid ${({ theme }) => theme.colors.textSubtle};\n`\n\nexport default IfoLayout\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { ExpandableLabel, Flex, FlexProps, Text, Image } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface FoldableTextProps extends FlexProps {\n  title?: string\n  caption?: string\n  url?: string\n}\n\nconst Wrapper = styled(Flex)`\n  max-width: 1200px;\n`\nconst StyledImage = styled(Image)`\n  margin-left: 15px;\n`\nconst StyledExpandableLabelWrapper = styled(Flex)`\n  button {\n    align-items: center;\n    justify-content: flex-start;\n  }\n`\nconst FlexBox = styled(Flex)`\n  flex: 1;\n  align-items: center;\n  justify-content: flex-start;\n`\nconst FlexTitle = styled(Flex)`\n  background: #ffffff;\n  box-shadow: 0px 2px 6px rgba(99, 61, 61, 0.1);\n  cursor: pointer;\n  padding-top: 16px;\n`\nconst Text1 = styled(Text)`\n  margin-left: 20px;\n  font-size: 18px;\n  line-height: 24px;\n  color: #280d5f;\n`\n\nconst Text2 = styled(Text)`\n  margin-left: 20px;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 12px;\n  line-height: 20px;\n  color: rgb(166, 166, 183);\n`\n\nconst StyledChildrenFlex = styled(Flex)<{ isExpanded?: boolean }>`\n  overflow: hidden;\n  height: ${({ isExpanded }) => (isExpanded ? '' : '0px')};\n  padding-bottom: ${({ isExpanded }) => (isExpanded ? '16px' : '0px')};\n  // border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  background: #f5f8fd;\n  border-radius: 0 0 8px 8px;\n  width: 100%;\n  max-width: 1200px;\n`\n\nconst FoldableText: React.FC<FoldableTextProps> = ({ title, caption, url, children, ...props }) => {\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  return (\n    <Wrapper {...props} flexDirection=\"column\" onClick={() => setIsExpanded(!isExpanded)}>\n      <FlexTitle alignItems=\"center\" pb=\"16px\">\n        <FlexBox>\n          <StyledImage src={url} alt=\"\" width={16} height={16} />\n          <Text1 fontWeight=\"bold\">{title}</Text1>\n          <Text2 fontWeight=\"bold\">{caption}</Text2>\n        </FlexBox>\n        <StyledExpandableLabelWrapper>\n          <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)} />\n        </StyledExpandableLabelWrapper>\n      </FlexTitle>\n      <StyledChildrenFlex\n        isExpanded={isExpanded}\n        flexDirection=\"column\"\n        onClick={(e) => {\n          e.stopPropagation()\n        }}\n      >\n        {children}\n      </StyledChildrenFlex>\n    </Wrapper>\n  )\n}\n\nexport default FoldableText\n","const config = [\n  {\n    title: 'TOKEN1',\n    caption: '有趣和友好的互联网货币。与其他数字货币区别开来，拥有一个由友好人士组成的令人惊叹，充满活力的社区',\n    url: '/images/tokens/0x0D8Ce2A99Bb6e3B7Db580eD848240e4a0F9aE153.png',\n    description: [\n      {\n        id: 1,\n        websiteButton: 'websiteButton',\n        seeButton: '查看合约',\n        startBlock: '开始区块：',\n        endBlock: '结束区块：',\n        estimatedEndTime: '预计结束时间：',\n        salesVolumes: '销售数量：',\n        totalFinancing: '筹资总额：',\n        unitPrice: '单价：',\n        myLPBalance: '我的LP余额：',\n        oldNumberOfParticipants: '已参与数量：',\n        quantityToBeCollected: '待领取数量：',\n        numberOfParticipants: '参与数量',\n        participateIn: '参与',\n        receive: '领取',\n      },\n    ],\n  },\n  {\n    caption: '有趣和友好的互联网货币。与其他数字货币区别开来，拥有一个由友好人士组成的令人惊叹，充满活力的社区',\n    title: 'TOKEN2',\n    url: '/images/tokens/0x1FFD0b47127fdd4097E54521C9E2c7f0D66AafC5.png',\n    description: [\n      {\n        id: 2,\n        websiteButton: '官网',\n        seeButton: '查看合约',\n        startBlock: '开始区块',\n        endBlock: '结束区块',\n        estimatedEndTime: '预计结束时间',\n        salesVolumes: '销售数量',\n        totalFinancing: '筹资总额',\n        unitPrice: '单价',\n        myLPBalance: '我的LP余额',\n        oldNumberOfParticipants: '已参与数量：',\n        quantityToBeCollected: '待领取数量：',\n        numberOfParticipants: '参与数量',\n        participateIn: '参与',\n        receive: '领取',\n      },\n    ],\n  },\n  {\n    caption: '有趣和友好的互联网货币。与其他数字货币区别开来，拥有一个由友好人士组成的令人惊叹，充满活力的社区',\n    url: '/images/tokens/0x007EA5C0Ea75a8DF45D288a4debdD5bb633F9e56.png',\n    title: 'TOKEN3',\n    description: [\n      {\n        id: 3,\n\n        websiteButton: '官网',\n        seeButton: '查看合约',\n        startBlock: '开始区块',\n        endBlock: '结束区块',\n        estimatedEndTime: '预计结束时间',\n        salesVolumes: '销售数量',\n        totalFinancing: '筹资总额',\n        unitPrice: '单价',\n        myLPBalance: '我的LP余额',\n        oldNumberOfParticipants: '已参与数量：',\n        quantityToBeCollected: '待领取数量：',\n        numberOfParticipants: '参与数量',\n        participateIn: '参与',\n        receive: '领取',\n      },\n    ],\n  },\n  {\n    caption: '有趣和友好的互联网货币。与其他数字货币区别开来，拥有一个由友好人士组成的令人惊叹，充满活力的社区',\n    url: '/images/tokens/0x7e396BfC8a2f84748701167c2d622F041A1D7a17.png',\n    title: 'TOKEN4',\n    description: [\n      {\n        id: 4,\n\n        websiteButton: '官网',\n        seeButton: '查看合约',\n        startBlock: '开始区块',\n        endBlock: '结束区块',\n        estimatedEndTime: '预计结束时间',\n        salesVolumes: '销售数量',\n        totalFinancing: '筹资总额',\n        unitPrice: '单价',\n        myLPBalance: '我的LP余额',\n        oldNumberOfParticipants: '已参与数量：',\n        quantityToBeCollected: '待领取数量：',\n        numberOfParticipants: '参与数量',\n        participateIn: '参与',\n        receive: '领取',\n      },\n    ],\n  },\n  {\n    caption: '有趣和友好的互联网货币。与其他数字货币区别开来，拥有一个由友好人士组成的令人惊叹，充满活力的社区',\n    url: '/images/tokens/0x0D8Ce2A99Bb6e3B7Db580eD848240e4a0F9aE153.png',\n    title: 'TOKEN5',\n    description: [\n      {\n        id: 5,\n\n        websiteButton: '官网',\n        seeButton: '查看合约',\n        startBlock: '开始区块',\n        endBlock: '结束区块',\n        estimatedEndTime: '预计结束时间',\n        salesVolumes: '销售数量',\n        totalFinancing: '筹资总额',\n        unitPrice: '单价',\n        myLPBalance: '我的LP余额',\n        oldNumberOfParticipants: '已参与数量：',\n        quantityToBeCollected: '待领取数量：',\n        numberOfParticipants: '参与数量',\n        participateIn: '参与',\n        receive: '领取',\n      },\n    ],\n  },\n]\nexport default config\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Heading, Card, CardHeader, CardBody, Flex } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport FoldableText from 'components/FoldableText/indexNew'\nimport config from './config'\n\nconst ImageWrapper = styled.div`\n  flex: none;\n  order: 2;\n  max-width: 414px;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    order: 1;\n  }\n`\nconst CardBodys = styled(CardBody)`\n  background: '#f40';\n  & > div:nth-of-type(1) div:nth-of-type(1) {\n    border-radius: 12px 12px 0 0;\n  }\n\n  & > div:last-child div:nth-of-type(1) {\n    border-radius: 0 0 12px 12px;\n  }\n`\n\nconst DetailsWrapper = styled.div`\n  margin-bottom: 40px;\n  max-width: 1200px;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  ${({ theme }) => theme.mediaQueries.md} {\n    order: 2;\n    margin-bottom: 0;\n    // margin-left: 40px;\n  }\n`\nconst FlexOuterLayer = styled(Flex)`\n  padding: 12px 12px 0 12px;\n  border-radius: 8px;\n  // height: 148px;\n  // width: 100%;\n  justify-content: space-between;\n  flex-direction: row;\n  flex-wrap: wrap;\n`\nconst FlexLableBox = styled(Flex)`\n  line-height: 24px;\n  align-items: center;\n  justify-content: space-between;\n  max-width: 248px;\n`\nconst DetailsLeft = styled.div`\n  min-width: 300px;\n  margin: 10px 12px 0;\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst DetailsMain = styled.div`\n  min-width: 300px;\n  // width: 30%;\n`\nconst DetailsRight = styled.div`\n  margin: 12px;\n  min-width: 300px;\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  flex: 1;\n  align-items: center;\n  &:last-child {\n    flex: none;\n  }\n`\nconst ButtonStyle = styled.div`\n  border: 1px solid #261977;\n  border-radius: 50px !important;\n  padding: 0 10px;\n  font-weight: normal;\n  font-size: 12px;\n  line-height: 22px;\n  font-feature-settings: 'pnum' on, 'lnum' on;\n  color: #261977;\n  text-align: center;\n  cursor: pointer;\n  margin: 0 20px 9px 0;\n`\nconst TextLable = styled(Text)`\n  // font-style: normal;\n  // font-weight: normal;\n  // font-size: 12px;\n  // line-height: 24px;\n  // margin-bottom: 3px;\n  // color: #261977;\n\n  font-family: PingFang SC;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 14px;\n  line-height: 24px;\n  color: #261977;\n`\nconst TextValue = styled(Text)`\n  // font-style: normal;\n  // font-weight: normal;\n  // font-size: 12px;\n  // line-height: 24px;\n  // margin: 4px;\n  // color: #5c5c75;\n\n  font-family: PingFang SC;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 14px;\n  line-height: 24px;\n  color: #5c5c75;\n  margin-right: 5px;\n`\n\nconst TextButtonLP = styled(Text)`\n  background: #32324a;\n  border-radius: 4px;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 12px;\n  padding: 0 8px;\n  cursor: pointer;\n  line-height: 20px;\n  height: 20px;\n  color: #ffffff;\n`\nconst InputBox = styled.input`\n  &::-webkit-input-placeholder {\n    font-style: normal;\n    font-weight: normal;\n    font-size: 14px;\n    line-height: 20px;\n    color: #a6a6b7;\n  }\n  width: 200px;\n  height: 38px;\n  color: #a6a6b7;\n  border: none;\n  padding: 0 20px;\n  // box-sizing: border-box;\n  // border-radius: 8px;\n`\nconst TextButtonRed = styled(Text)`\n  font-family: PingFang SC;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 14px;\n  line-height: 38px;\n  color: #ffffff;\n  background: #f56020;\n  border-radius: 8px;\n  text-align: center;\n  width: 249px;\n  height: 38px;\n  cursor: pointer;\n`\nconst IfoQuestions = () => {\n  const { t } = useTranslation()\n\n  return (\n    <Flex\n      style={{ width: '100%', marginBottom: '40px' }}\n      alignItems={['center', null, null, 'start']}\n      flexDirection={['column', null, null, 'row']}\n    >\n      {/* <ImageWrapper>\n        <img src=\"/images/ifos/ifo-bunny.png\" alt=\"ifo bunny\" width=\"414px\" height=\"500px\" />\n      </ImageWrapper> */}\n      <DetailsWrapper>\n        <Flex style={{ maxWidth: '1200px', width: '100%' }}>\n          {/* <CardHeader>\n            <Heading scale=\"lg\" color=\"secondary\">\n              {t('Details')}\n            </Heading>\n          </CardHeader> */}\n          <CardBodys style={{ padding: 0, maxWidth: '1200px', width: '100%' }}>\n            {config.map(({ title, caption, url, description }, i, { length }) => (\n              <FoldableText\n                key={title}\n                id={title}\n                url={url}\n                mb={i + 1 === length ? '' : '10px'}\n                mt={i === 0 ? '24px' : ''}\n                title={t(title)}\n                caption={t(caption)}\n                style={{ maxWidth: '1200px', color: '#280D5F' }}\n              >\n                {description.map((item) => {\n                  return (\n                    <>\n                      <FlexOuterLayer key={item.id}>\n                        <DetailsLeft>\n                          <Flex style={{ width: '100%', maxWidth: '248px' }}>\n                            <ButtonStyle> {t('websiteButton')}</ButtonStyle>\n                            <ButtonStyle> {t('seeButton')}</ButtonStyle>\n                          </Flex>\n                          <FlexLableBox style={{ width: '100%' }}>\n                            <TextLable as=\"p\">{t('startBlock')}</TextLable>\n                            <TextValue as=\"p\">12321.123</TextValue>\n                          </FlexLableBox>\n                          <FlexLableBox style={{ width: '100%' }}>\n                            <TextLable as=\"p\">{t('endBlock')}</TextLable>\n                            <TextValue as=\"p\">12321.123</TextValue>\n                          </FlexLableBox>\n                          <FlexLableBox style={{ width: '100%' }}>\n                            <TextLable as=\"p\">{t('estimatedEndTime')}</TextLable>\n                            <TextValue as=\"p\">11:50:25</TextValue>\n                          </FlexLableBox>\n                        </DetailsLeft>\n                        <DetailsLeft>\n                          <FlexLableBox style={{ width: '100%' }}>\n                            <TextLable as=\"p\">{t('salesVolumes')}</TextLable>\n                            <TextValue as=\"p\">1321</TextValue>\n                          </FlexLableBox>\n                          <FlexLableBox style={{ width: '100%' }}>\n                            <TextLable as=\"p\">{t('totalFinancing')}</TextLable>\n                            <TextValue as=\"p\">2343.23 LP</TextValue>\n                          </FlexLableBox>\n                          <FlexLableBox style={{ width: '100%' }}>\n                            <TextLable as=\"p\">{t('unitPrice')}</TextLable>\n                            <TextValue as=\"p\">2.12 HOS</TextValue>\n                          </FlexLableBox>\n                          <FlexLableBox style={{ width: '100%' }}>\n                            <TextLable as=\"p\">{t('myLPBalance')}</TextLable>\n                            <Flex style={{ alignItems: 'center' }}>\n                              <TextValue as=\"p\">13.21</TextValue>\n                              <TextButtonLP as=\"p\">{t('Frame1')}</TextButtonLP>\n                            </Flex>\n                          </FlexLableBox>\n                        </DetailsLeft>\n                        <DetailsRight>\n                          {i % 2 === 0 ? (\n                            <FlexLableBox style={{ width: '100%', maxWidth: '248px' }}>\n                              <TextLable as=\"p\">{t('oldNumberOfParticipants')}</TextLable>\n                              <TextValue as=\"p\">0.00LP</TextValue>\n                            </FlexLableBox>\n                          ) : (\n                            <FlexLableBox style={{ width: '100%', maxWidth: '248px' }}>\n                              <TextLable as=\"p\">{t('quantityToBeCollected')}</TextLable>\n                              <TextValue as=\"p\" style={{ fontWeight: 600 }}>\n                                121.1\n                              </TextValue>\n                            </FlexLableBox>\n                          )}\n                          {i % 2 === 0 && (\n                            <FlexLableBox\n                              style={{\n                                width: '248px',\n                                position: 'relative',\n                                border: '1px solid #ededf1',\n                                borderRadius: '8px',\n                                margin: '10px 0',\n                              }}\n                            >\n                              <InputBox type=\"text\" placeholder={t('numberOfParticipants')} />\n                              <TextLable\n                                as=\"p\"\n                                style={{\n                                  fontSize: '14px',\n                                  lineHeight: '20px',\n                                  cursor: 'pointer',\n                                  position: 'absolute',\n                                  left: '200px',\n                                  width: '40px',\n                                  textAlign: 'center',\n                                }}\n                              >\n                                全部\n                              </TextLable>\n                            </FlexLableBox>\n                          )}\n                          {i % 2 === 0 ? (\n                            <TextButtonRed>{t('participateIn')}</TextButtonRed>\n                          ) : (\n                            <TextButtonRed>{t('receive')}</TextButtonRed>\n                          )}\n                        </DetailsRight>\n                      </FlexOuterLayer>\n                    </>\n                  )\n                })}\n              </FoldableText>\n            ))}\n          </CardBodys>\n        </Flex>\n      </DetailsWrapper>\n    </Flex>\n  )\n}\n\nexport default IfoQuestions\n","import React from 'react'\nimport { ifosConfig } from 'config/constants'\nimport useGetPublicIfoV2Data from 'views/Ifos/hooks/v2/useGetPublicIfoData'\nimport useGetWalletIfoV2Data from 'views/Ifos/hooks/v2/useGetWalletIfoData'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport IfoFoldableCard from './components/IfoFoldableCard'\nimport IfoLayout from './components/IfoLayout'\nimport IfoSteps from './components/IfoSteps'\nimport IfoQuestions from './components/IfoQuestions'\n\n/**\n * Note: currently there should be only 1 active IFO at a time\n */\nconst activeIfo = ifosConfig.find((ifo) => ifo.isActive)\n\nconst getGradient1 = (isDark: boolean) => {\n  if (isDark) {\n    return '/images/Frame1.svg'\n  }\n  return '/images/Frame1.svg'\n}\n\nconst getGradient2 = (isDark: boolean) => {\n  if (isDark) {\n    return '/images/Frame2.svg'\n  }\n  return '/images/Frame2.svg'\n}\n\nconst getGradient3 = (isDark: boolean) => {\n  if (isDark) {\n    return '/images/Frame3.svg'\n  }\n  return '/images/Frame3.svg'\n}\n\nconst FrameGroup = styled.div`\n  display: flex;\n  width: 100%;\n  margin: 10px auto;\n  justify-content: space-between;\n  flex-direction: row;\n  flex-wrap: wrap;\n`\n\nconst Frame1 = styled.div`\n  height: 68px;\n  margin: 0 40px 20px;\n  width: 287px;\n  text-align: center;\n  line-height: 68px;\n  background: url(${({ theme }) => getGradient1(theme.isDark)}) no-repeat;\n  // background-size: 100% auto;\n`\nconst Frame2 = styled.div`\n  height: 68px;\n  width: 287px;\n  background: url(${({ theme }) => getGradient2(theme.isDark)}) no-repeat;\n  margin: 0 40px 20px;\n  text-align: center;\n  line-height: 68px;\n  // background-size: 100% auto;\n`\n\nconst Frame3 = styled.div`\n  height: 68px;\n  width: 287px;\n  background: url(${({ theme }) => getGradient3(theme.isDark)}) no-repeat;\n  // background-size: 100% auto;\n  text-align: center;\n  line-height: 68px;\n  margin: 0 40px 20px;\n`\nconst Ifo = () => {\n  const { t } = useTranslation()\n\n  // const publicIfoData = useGetPublicIfoV2Data(activeIfo)\n  // const walletIfoData = useGetWalletIfoV2Data(activeIfo)\n\n  return (\n    <IfoLayout>\n      <FrameGroup>\n        <Frame1> {t('Frame1')}</Frame1>\n        <Frame2> {t('Frame2')}</Frame2>\n        <Frame3> {t('Frame3')}</Frame3>\n      </FrameGroup>\n      {/* <IfoFoldableCard ifo={activeIfo} publicIfoData={publicIfoData} walletIfoData={walletIfoData} isInitiallyVisible /> */}\n      {/* <IfoSteps ifo={activeIfo} walletIfoData={walletIfoData} /> */}\n      <IfoQuestions />\n    </IfoLayout>\n  )\n}\n\nexport default Ifo\n","import React from 'react'\n// import { useTranslation } from 'contexts/Localization'\nimport {\n  Route,\n  useRouteMatch,\n  // , Link\n} from 'react-router-dom'\n// import { ButtonMenu, ButtonMenuItem, Flex } from '@pancakeswap/uikit'\nimport Container from 'components/Layout/Container'\nimport HeroNew from './components/HeroNew'\nimport CurrentIfo from './CurrentIfo'\n// import PastIfo from './PastIfo'\n\nconst Ifos = () => {\n  // const { t } = useTranslation()\n  const {\n    path,\n    // , url, isExact\n  } = useRouteMatch()\n\n  return (\n    <>\n      <HeroNew style={{ padding: 'none' }} title=\"IDO\" caption=\"Initial issue of tokens based on HOS / Ho liquidity\" />\n      <Container>\n        {/* <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"32px\">\n          <ButtonMenu activeIndex={!isExact ? 1 : 0} scale=\"sm\" variant=\"subtle\">\n            <ButtonMenuItem as={Link} to={`${url}`}>\n              {t('Next IFO')}\n            </ButtonMenuItem>\n            <ButtonMenuItem as={Link} to={`${url}/history`}>\n              {t('Past IFOs')}\n            </ButtonMenuItem>\n          </ButtonMenu>\n        </Flex> */}\n        <Route exact path={`${path}`}>\n          <CurrentIfo />\n        </Route>\n        {/* <Route path={`${path}/history`}>\n          <PastIfo />\n        </Route> */}\n      </Container>\n    </>\n  )\n}\n\nexport default Ifos\n"],"sourceRoot":""}